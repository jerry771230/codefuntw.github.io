<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Codefun</title>
  
  
  <link href="http://codefun.tw/atom.xml" rel="self"/>
  
  <link href="http://codefun.tw/"/>
  <updated>2023-03-25T03:26:32.000Z</updated>
  <id>http://codefun.tw/</id>
  
  <author>
    <name>Jerry Huang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PostgreSQL WAL 檔案持續增加的問題排解</title>
    <link href="http://codefun.tw/2023/2023032501-postgresql-wal-files-disk-full.html"/>
    <id>http://codefun.tw/2023/2023032501-postgresql-wal-files-disk-full.html</id>
    <published>2023-03-25T03:26:32.000Z</published>
    <updated>2023-03-25T03:26:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>有一實驗設備的 API 服務無法使用，檢查發現 database 用的磁碟空間為 0，佔用空間的竟然是 <code>pg_wal</code> 資料夾裡的 WAL 檔案。因此需要分析在 PostgreSQL master-slave replication 的架構，master node 的 WAL 檔案為什麼會持續增加，導致磁碟空間不足，讓 database 無法正常服務。</p><span id="more"></span><h2 id="1-設定模擬環境"><a href="#1-設定模擬環境" class="headerlink" title="1. 設定模擬環境"></a>1. 設定模擬環境</h2><ul><li>基於 Bitnami PostgreSQL Docker Image - <a href="https://hub.docker.com/r/bitnami/postgresql-repmgr">bitnami&#x2F;postgresql-repmgr</a> ，選用的是 PostgreSQL v13 版本，再配合實驗設備進行部份設定值的調整</li><li>Host OS 為 Ubuntu 20.04</li><li>Disk space 4GB</li></ul><p>請同事開二組包含上述條件的 VM 來模擬 PostgreSQL master-slave replication 的架構。</p><h3 id="1-1-查詢參數值"><a href="#1-1-查詢參數值" class="headerlink" title="1.1. 查詢參數值"></a>1.1. 查詢參數值</h3><p>由於 VM 刻意限縮可使用的容量，以儘快模擬出”磁碟空間”不足的情境，所以預設的 WAL 參數也要做對應的調整，可以從 master node 的 database 裡查到參數值。</p><p>在模擬環境的 mater node VM 使用 <code>docker exec</code> 指令進入 db container，登入 PostgreSQL，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ PGPASSWORD=ADM_PSQL_PWD psql -U ADM_PSQL_ACCOUNT</span><br></pre></td></tr></table></figure><p>查詢 <code>pg_wal</code> 可使用的最大容量，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> max_wal_size;</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> max_wal_size</span><br><span class="line">--------------</span><br><span class="line"></span><br><span class="line"> 120MB</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure><p>查詢至少要保留多少容量的 WAL 檔案，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> wal_keep_size;</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> wal_keep_size</span><br><span class="line">---------------</span><br><span class="line"> 48MB</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure><h3 id="1-2-正常運作下的-pg-wal-資料夾"><a href="#1-2-正常運作下的-pg-wal-資料夾" class="headerlink" title="1.2. 正常運作下的 pg_wal 資料夾"></a>1.2. 正常運作下的 <code>pg_wal</code> 資料夾</h3><p>在正常運作的情況下，可以看到 <code>pg_wal</code> 資料夾佔用的空間不會偏離設定值 <code>max_wal_size</code> 太多。</p><p>查看磁碟空間的使用情況，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">overlay         3.7G  3.4G  295M  93% /</span><br><span class="line">tmpfs            64M     0   64M   0% /dev</span><br><span class="line">tmpfs           2.0G     0  2.0G   0% /sys/fs/cgroup</span><br><span class="line">shm              64M   64K   64M   1% /dev/shm</span><br><span class="line">/dev/vda1       3.7G  3.4G  295M  93% /bitnami/postgresql</span><br><span class="line">tmpfs           2.0G     0  2.0G   0% /proc/acpi</span><br><span class="line">tmpfs           2.0G     0  2.0G   0% /proc/scsi</span><br></pre></td></tr></table></figure><p>查看 PostgreSQL 各資料夾使用磁碟的情況，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">du</span> -h -d 1 /bitnami/postgresql/data/ | <span class="built_in">sort</span> -rh</span><br><span class="line"></span><br><span class="line">552M /bitnami/postgresql/data/</span><br><span class="line">423M /bitnami/postgresql/data/base</span><br><span class="line">129M /bitnami/postgresql/data/pg_wal</span><br><span class="line">584K /bitnami/postgresql/data/global</span><br><span class="line">120K /bitnami/postgresql/data/pg_subtrans</span><br><span class="line">40K /bitnami/postgresql/data/pg_stat_tmp</span><br><span class="line">28K /bitnami/postgresql/data/pg_multixact</span><br><span class="line">...</span><br></pre></td></tr></table></figure><ul><li><code>/bitnami/postgresql/data/base</code> 為 database 的資料夾</li><li><code>/bitnami/postgresql/data/pg_wal</code> 為 WAL 檔存放的資料夾</li></ul><hr><h2 id="2-分析問題"><a href="#2-分析問題" class="headerlink" title="2. 分析問題"></a>2. 分析問題</h2><p>在實驗環境的 PostgreSQL master-slave 架構，是使用 Streaming Replication 的方式設定， 其資料同步如下圖</p><p><img src="/uploads/2023/032501_psql_streaming_wal_records.png" alt="Streaming WAL Records"><br><small>圖片來源：<a href="https://hevodata.com/learn/postgres-wal-replication/#wal">Postgres WAL Replication: Easy Step-By-Step Guide</a> </small></p><p>根據 <a href="https://pgdash.io/blog/postgres-monitor-wal-files.html">Monitoring PostgreSQL WAL Files</a> 文章裡有一段提到，</p><blockquote><p>Replication failures: When using streaming replication with replication slots, and a standby goes down, Postgres will retain the WAL files needed by the standby so that the standby can resume from the point where it left off. If the standby goes offline for extended periods of time, or if someone forgot to delete the replication slot on the primary, the WAL files can be retained indefinitely. Ensure all your standbys and replication slots are active, and that your standbys can keep up the the changes happening at the primary.</p></blockquote><p>Stack overflow 的發文 <a href="https://stackoverflow.com/questions/63515668/postgres-does-streaming-slave-affect-master-health">Postgres, does streaming slave affect master health?</a> 也提到相同的問題，</p><blockquote><p>If you are using replication slots to retain WAL when the standby goes down, WAL will accumulate on the primary server and can fill up the disk, which will crash the primary server.</p></blockquote><p>看來是踩到這個坑了。。。</p><p>檢查實驗設備的 master node，其 <code>pg_wal</code> 資料夾充滿了 WAL 檔，大概佔用了 3.7GB，而給 database 的磁碟空間只有 4GB，在磁碟空間被塞滿了的情況下，當然 database 就無法正常服務了。而 Slave node 的 container 則是不斷的重啟（註：一直到恢復 Master node 的 database 運作後，該 container 仍然無法正確啟動，只好強制刪除重建。）</p><h3 id="2-1-Slave-node-離線後"><a href="#2-1-Slave-node-離線後" class="headerlink" title="2.1. Slave node 離線後"></a>2.1. Slave node 離線後</h3><p>在模擬環境的 slave node VM，將 db container 停用，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker stop SLAVE_NODE_DB</span><br></pre></td></tr></table></figure><p>持續對 master node 寫入資料，發現 <code>pg_wal</code> 資料夾內的 WAL 檔不再自動 remove&#x2F;recycle，而是<strong>一直增加</strong>。</p><p>恢復 slave node db container，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker start SLAVE_NODE_DB</span><br></pre></td></tr></table></figure><p>Slave node 恢復後，master node 的 WAL 檔會減少到一定程度。</p><p>實驗結果：</p><ul><li>當 Salve node 不斷的 UP&#x2F;DOWN，並不會讓 WAL 檔無限增長，只要完成 replication，則 WAL 檔會減少到一定程度（略大於 <code>max_wal_size</code> 的設定）。</li><li><strong>Salve node 離線後，一直未恢復，則 master node 的 WAL 檔就會不斷累積，直到磁碟空間用完。</strong></li></ul><p>看來實驗設備是 master node 一直無法與 slave node 正常連線（connection），所以才會讓 WAL 檔案不斷成長到塞爆磁碟空間。（爬 master node 的 syslog，確實沒看到 slave node 有回來（connection）)</p><blockquote><p>CAUTION:<br>Master node 的 db container 在磁碟空間不足的情況下，就無法正常服務，此後啟動 slave node db container，該 database 會把自己 promote 成 <code>primary</code>。</p></blockquote><hr><h2 id="3-處理"><a href="#3-處理" class="headerlink" title="3. 處理"></a>3. 處理</h2><p>適用的情境，</p><ul><li>預期 slave node 會長期離線</li><li>Slave node 已離線一段時間，master node 還可以正常服務</li></ul><blockquote><p>CAUTION<br>若 master node 空間已經塞爆，需要先刪除部份檔案（可以考慮刪除 error log），挪出一些空間，讓 db container 可以重啟（restart）。</p></blockquote><h3 id="3-1-縮減-pg-wal-佔用的空間"><a href="#3-1-縮減-pg-wal-佔用的空間" class="headerlink" title="3.1. 縮減 pg_wal 佔用的空間"></a>3.1. 縮減 <code>pg_wal</code> 佔用的空間</h3><p>在模擬環境的 mater node VM 使用 <code>docker exec</code> 指令進入 db container，再登入 PostgreSQL，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ PGPASSWORD=ADM_PSQL_PWD psql -U ADM_PSQL_ACCOUNT</span><br></pre></td></tr></table></figure><p><code>ADM_PSQL_ACCOUNT</code> 及 <code>ADM_PSQL_PWD</code> 為由權限操作 PostgreSQL 的帳號及密碼。</p><p>查詢 slave node db 在 replication slot 記錄的名稱，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> pg_replication_slots;</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    slot_name     | plugin | slot_type | datoid | database | temporary | active | active_pid | xmin | catalog_xmin | restart_lsn | confirmed_flush_lsn | wal_status | safe_wal_size</span><br><span class="line">------------------+--------+-----------+--------+----------+-----------+--------+------------+------+--------------+-------------+---------------------+------------+---------------</span><br><span class="line"> repmgr_slot_1002 |        | physical  |        |          | f         | f      |     124985 |      |              | 0/3BC15070  |                     | reserved   |</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure><p>只有一個 slave node - <code>repmgr_slot_1002</code>。欄位 <code>active</code> &#x3D; <code>f</code> ，可以確定此 slot 未被用來執行 replication，同時也會造成 master node db 的 WAL 檔案持續增加。</p><p>刪除 slot，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> pg_drop_replication_slot(<span class="string">&#x27;repmgr_slot_1002&#x27;</span>);</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> pg_drop_replication_slot</span><br><span class="line">--------------------------</span><br><span class="line"></span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure><p>為了讓 <code>pg_wal</code> 資料夾的佔用空間下降，可手動執行 <code>checkpoint</code> 或是等待系統自動的 <code>checkpoint</code>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkpoint;</span><br></pre></td></tr></table></figure><p>離開 PostgreSQL，可用 <code>\q</code> 或 <code>exit</code>。</p><h4 id="3-1-1-刪除-WAL-files-optional"><a href="#3-1-1-刪除-WAL-files-optional" class="headerlink" title="3.1.1. 刪除 WAL files (optional)"></a>3.1.1. 刪除 WAL files (optional)</h4><p>如果 WAL 檔案仍然太多，可以在退出 PostgreSQL 後，在命令列執行 <code>pg_archivecleanup</code> 指令刪除已經 archive 的 WAL 檔。</p><p>進入 <code>pg_wal</code> 資料夾，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> `/path/to/data/pg_wal`</span><br></pre></td></tr></table></figure><p>查看 WAL 檔案完成 archive 的有哪些（副檔名有 <code>.done</code> 的才算完成），</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$  <span class="built_in">ls</span> -lh archive_status/</span><br><span class="line"></span><br><span class="line">-rw------- 1 1001 root 0 Mar 24 08:15 00000001000000000000000F.<span class="keyword">done</span></span><br><span class="line">-rw------- 1 1001 root 0 Mar 24 08:17 000000010000000000000010.<span class="keyword">done</span></span><br><span class="line">-rw------- 1 1001 root 0 Mar 24 08:19 000000010000000000000011.<span class="keyword">done</span></span><br><span class="line">-rw------- 1 1001 root 0 Mar 24 08:21 000000010000000000000012.<span class="keyword">done</span></span><br><span class="line">-rw------- 1 1001 root 0 Mar 24 08:23 000000010000000000000013.<span class="keyword">done</span></span><br><span class="line">-rw------- 1 1001 root 0 Mar 24 08:25 000000010000000000000014.<span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>執行刪除已經 archive 的 WAL 檔，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ pg_archivecleanup -d . 000000010000000000000014</span><br><span class="line"></span><br><span class="line">pg_archivecleanup: keeping WAL file <span class="string">&quot;./000000010000000000000014&quot;</span> and later</span><br><span class="line">pg_archivecleanup: removing file <span class="string">&quot;./000000010000000000000013&quot;</span></span><br><span class="line">pg_archivecleanup: removing file <span class="string">&quot;./000000010000000000000012&quot;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="3-2-將-slave-node-加回來"><a href="#3-2-將-slave-node-加回來" class="headerlink" title="3.2. 將 slave node 加回來"></a>3.2. 將 slave node 加回來</h3><p>在 slave node VM 命令列執行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker restart DB_CONTAINER_NAME</span><br></pre></td></tr></table></figure><p>Salve node db 加入並完成 replication，觀察 master node db 的 WAL 檔案，即刻會減少到一定程度，此後 master node db 的  <code>pg_wal</code> 的空間就不會再無限增長了，問題解決 :)</p><blockquote><p>NOTICE<br>如果 db container 無法正常啟動，只能重建了。也可以重新部署一個全新的 slave node。</p></blockquote><h3 id="3-3-檢查-replication-state-optional"><a href="#3-3-檢查-replication-state-optional" class="headerlink" title="3.3. 檢查 replication state (optional)"></a>3.3. 檢查 replication state (optional)</h3><p>再回到 master node 的 PostgreSQL 裡輸入，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> pg_stat_replication;</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  pid   | usesysid | usename | application_name |  client_addr   | client_hostname | client_port |         backend_start         | backend_xmin |   state   |  sent_lsn  | write_lsn  | flush_lsn  | replay_lsn |    write_lag    |    flush_lag    |   replay_lag    | sync_priority | sync_state |          reply_time</span><br><span class="line">--------+----------+---------+------------------+----------------+-----------------+-------------+-------------------------------+--------------+-----------+------------+------------+------------+------------+-----------------+-----------------+-----------------+---------------+------------+-------------------------------</span><br><span class="line"> 124985 |    16385 | repmgr  | irene_db-2       | 192.168.28.112 |                 |       52416 | 2023-03-24 09:26:19.384122+00 |              | streaming | 0/41B27290 | 0/41B27290 | 0/41B27290 | 0/41B27290 | 00:00:00.000768 | 00:00:00.001562 | 00:00:00.003225 |             0 | async      | 2023-03-24 09:49:35.682771+00</span><br><span class="line"></span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure><p>若 <code>replay_lsn</code> 的值未更新，就要檢查 slave node db 的狀態是否正常。</p><hr><h2 id="4-觀察紀錄"><a href="#4-觀察紀錄" class="headerlink" title="4. 觀察紀錄"></a>4. 觀察紀錄</h2><p>補充一些實驗過程的紀錄。</p><h3 id="4-1-加入-Slave-node"><a href="#4-1-加入-Slave-node" class="headerlink" title="4.1. 加入 Slave node"></a>4.1. 加入 Slave node</h3><p>Slave node db 加入後，會在 master node db 的 WAL 產生 <code>.backup</code> 檔案，以表示 <code>repmgr</code> 完成備份。</p><p>On master node VM,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ ll</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 17 08:34 000000010000000000000005</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 17 08:34 000000010000000000000006</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 17 08:47 000000010000000000000007</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 17 08:47 000000010000000000000008</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 17 10:12 000000010000000000000009</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 17 10:12 00000001000000000000000A</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 20 01:32 00000001000000000000000B</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 20 01:32 00000001000000000000000C</span><br><span class="line">-rw------- 1 1001 root      330 Mar 20 01:32 00000001000000000000000C.00000060.backup</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 20 01:37 00000001000000000000000D</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 17 03:15 00000001000000000000000E</span><br></pre></td></tr></table></figure><p><code>00000001000000000000000B</code> 檔案會即刻停止寫入，會產生 <code>00000001000000000000000C</code> 及 <code>00000001000000000000000C.00000060.backup</code>，並從 <code>00000001000000000000000D</code> 開始新的記錄。</p><p>In the db container, enter to <code>pg_wal</code> folder,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ pg_waldump 00000001000000000000000B</span><br><span class="line">rmgr: Transaction len (rec/tot):     34/    34, tx:      25661, lsn: 0/0B001370, prev 0/0B0012C8, desc: COMMIT 2023-03-17 10:12:12.351299 UTC</span><br><span class="line">rmgr: Standby     len (rec/tot):     50/    50, tx:          0, lsn: 0/0B001398, prev 0/0B001370, desc: RUNNING_XACTS nextXid 25662 latestCompletedXid 25661 oldestRunningXid 25662</span><br><span class="line">rmgr: Standby     len (rec/tot):     50/    50, tx:          0, lsn: 0/0B0013D0, prev 0/0B001398, desc: RUNNING_XACTS nextXid 25662 latestCompletedXid 25661 oldestRunningXid 25662</span><br><span class="line">rmgr: XLOG        len (rec/tot):    114/   114, tx:          0, lsn: 0/0B001408, prev 0/0B0013D0, desc: CHECKPOINT_ONLINE redo 0/B0013D0; tli 1; prev tli 1; fpw <span class="literal">true</span>; xid 0:25662; oid 24646; multi 1; offset 0; oldest xid 478 <span class="keyword">in</span> DB 1; oldest multi 1 <span class="keyword">in</span> DB 1; oldest/newest commit timestamp xid: 0/0; oldest running xid 25662; online</span><br><span class="line">rmgr: Standby     len (rec/tot):     50/    50, tx:          0, lsn: 0/0B001480, prev 0/0B001408, desc: RUNNING_XACTS nextXid 25662 latestCompletedXid 25661 oldestRunningXid 25662</span><br><span class="line">rmgr: XLOG        len (rec/tot):    114/   114, tx:          0, lsn: 0/0B0014B8, prev 0/0B001480, desc: CHECKPOINT_SHUTDOWN redo 0/B0014B8; tli 1; prev tli 1; fpw <span class="literal">true</span>; xid 0:25662; oid 24646; multi 1; offset 0; oldest xid 478 <span class="keyword">in</span> DB 1; oldest multi 1 <span class="keyword">in</span> DB 1; oldest/newest commit timestamp xid: 0/0; oldest running xid 0; shutdown</span><br><span class="line">rmgr: Heap        len (rec/tot):     54/  3214, tx:      25662, lsn: 0/0B001530, prev 0/0B0014B8, desc: INSERT off 26 flags 0x00, blkref <span class="comment">#0: rel 1663/16386/16406 blk 0 FPW</span></span><br><span class="line">rmgr: Transaction len (rec/tot):     34/    34, tx:      25662, lsn: 0/0B0021D8, prev 0/0B001530, desc: COMMIT 2023-03-20 01:30:54.817248 UTC</span><br><span class="line">rmgr: Standby     len (rec/tot):     50/    50, tx:          0, lsn: 0/0B002200, prev 0/0B0021D8, desc: RUNNING_XACTS nextXid 25663 latestCompletedXid 25662 oldestRunningXid 25663</span><br><span class="line">rmgr: XLOG        len (rec/tot):     24/    24, tx:          0, lsn: 0/0B002238, prev 0/0B002200, desc: SWITCH</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cat</span> 00000001000000000000000C.00000060.backup</span><br><span class="line">START WAL LOCATION: 0/C000060 (file 00000001000000000000000C)</span><br><span class="line">STOP WAL LOCATION: 0/C000138 (file 00000001000000000000000C)</span><br><span class="line">CHECKPOINT LOCATION: 0/C000098</span><br><span class="line">BACKUP METHOD: streamed</span><br><span class="line">BACKUP FROM: master</span><br><span class="line">START TIME: 2023-03-20 01:32:31 GMT</span><br><span class="line">LABEL: repmgr base backup</span><br><span class="line">START TIMELINE: 1</span><br><span class="line">STOP TIME: 2023-03-20 01:32:32 GMT</span><br><span class="line">STOP TIMELINE: 1</span><br></pre></td></tr></table></figure><ul><li>CHECKPOINT LOCATION: 0&#x2F;C000098</li><li>LABEL: repmgr base backup</li></ul><p>On slave node VM,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -l</span><br><span class="line">total 32772</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 20 01:32 00000001000000000000000C</span><br><span class="line">-rw------- 1 1001 root 16777216 Mar 20 01:37 00000001000000000000000D</span><br><span class="line">drwx------ 2 1001 root     4096 Mar 20 01:32 archive_status</span><br></pre></td></tr></table></figure><p>In the db container, enter to <code>pg_wal</code> folder,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ pg_waldump 00000001000000000000000C</span><br><span class="line">rmgr: Standby     len (rec/tot):     50/    50, tx:          0, lsn: 0/0C000028, prev 0/0B002238, desc: RUNNING_XACTS nextXid 25663 latestCompletedXid 25662 oldestRunningXid 25663</span><br><span class="line">rmgr: Standby     len (rec/tot):     50/    50, tx:          0, lsn: 0/0C000060, prev 0/0C000028, desc: RUNNING_XACTS nextXid 25663 latestCompletedXid 25662 oldestRunningXid 25663</span><br><span class="line">rmgr: XLOG        len (rec/tot):    114/   114, tx:          0, lsn: 0/0C000098, prev 0/0C000060, desc: CHECKPOINT_ONLINE redo 0/C000060; tli 1; prev tli 1; fpw <span class="literal">true</span>; xid 0:25663; oid 24646; multi 1; offset 0; oldest xid 478 <span class="keyword">in</span> DB 1; oldest multi 1 <span class="keyword">in</span> DB 1; oldest/newest commit timestamp xid: 0/0; oldest running xid 25663; online</span><br><span class="line">rmgr: XLOG        len (rec/tot):     34/    34, tx:          0, lsn: 0/0C000110, prev 0/0C000098, desc: BACKUP_END 0/C000060</span><br><span class="line">rmgr: XLOG        len (rec/tot):     24/    24, tx:          0, lsn: 0/0C000138, prev 0/0C000110, desc: SWITCH</span><br></pre></td></tr></table></figure><h3 id="4-2-舊檔再利用"><a href="#4-2-舊檔再利用" class="headerlink" title="4.2. 舊檔再利用"></a>4.2. 舊檔再利用</h3><p>當 master node db 裡的 WAL 增加到指超過 <code>max_wal_size</code> 許多後，slave node db 才加入（或恢復），雖然 WAL 檔案會減少到一定程度（略大於 <code>max_wal_size</code>），不過可以發現舊的 WAL 檔案會被重新命名再利用。而再利用的舊檔，並不一定是依據檔案建立的時間順序拿來使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ ll -h /sonic-cfg/irene_db/data/data/pg_wal/</span><br><span class="line">total 209M</span><br><span class="line">drwx------  3 1001 root 4.0K Mar 22 02:47 ./</span><br><span class="line">drwx------ 19 1001 root 4.0K Mar 22 01:00 ../</span><br><span class="line">-rw-------  1 1001 root  333 Mar 22 02:06 000000010000000000000011.00000028.backup</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:22 000000010000000000000016</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:26 000000010000000000000017</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:29 000000010000000000000018</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:32 000000010000000000000019</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:36 00000001000000000000001A</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:39 00000001000000000000001B</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:42 00000001000000000000001C</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:46 00000001000000000000001D</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:48 00000001000000000000001E</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:06 00000001000000000000001F</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:13 000000010000000000000020</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:19 000000010000000000000021</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:16 000000010000000000000022</span><br></pre></td></tr></table></figure><p>再利用的舊檔，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-rw-------  1 1001 root  16M Mar 22 02:06 00000001000000000000001F</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:13 000000010000000000000020</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:19 000000010000000000000021</span><br><span class="line">-rw-------  1 1001 root  16M Mar 22 02:16 000000010000000000000022</span><br></pre></td></tr></table></figure><p><code>000000010000000000000022</code> 的建立時間比 <code>000000010000000000000021</code> 早，但比後者晚被重新命名。</p><h3 id="4-3-If-the-slave’s-replay-is-paused"><a href="#4-3-If-the-slave’s-replay-is-paused" class="headerlink" title="4.3. If the slave’s replay is paused"></a>4.3. If the slave’s replay is paused</h3><p>實驗結果：</p><ul><li>Slave node database 內的資料會暫停更新</li><li>Master node db 會持續將異動資料傳送給 slave node db，以寫入 slave node db 的 WAL （持續增加檔案）</li></ul><p>在 slave node 的 PostgreSQL 裡輸入，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> pg_is_in_recovery();</span><br></pre></td></tr></table></figure><p>結果如下，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> pg_is_in_recovery</span><br><span class="line">-------------------</span><br><span class="line"> t</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure><p>若回傳值為 <code>t</code> 則表示 salve node 是在 recovery mode。</p><p>執行 <code>pause</code> 命令，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> pg_wal_replay_pause();</span><br></pre></td></tr></table></figure><p>再檢查 replay 狀態，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> pg_is_wal_replay_paused();</span><br></pre></td></tr></table></figure><p>回傳值為 <code>t</code> 表示 recovery process 被暫停了（paused）。這將會讓 slave node db 的資料暫停更新，同時 slave node 的 <code>pg_wal</code> 會持續增加 WAL 檔案，一直到恢復 recovery process。</p><p>執行 <code>resume</code> 命令，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> pg_wal_replay_resume();</span><br></pre></td></tr></table></figure><p>再檢查 replay 狀態，</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> pg_is_wal_replay_paused();</span><br></pre></td></tr></table></figure><p>回傳值為 <code>f</code> 表示 recovery process 已經恢復，此時 db 的資料會更新，同時消化掉 <code>pg_wal</code> 內的 WAL 檔案，可以觀察到 <code>pg_wal</code> 佔用空間小於 <code>max_wal_size</code>，會略大於 <code>wal_keep_size</code>。</p><hr><h2 id="5-References"><a href="#5-References" class="headerlink" title="5. References"></a>5. References</h2><ul><li><a href="https://pgdash.io/blog/postgres-monitor-wal-files.html">Monitoring PostgreSQL WAL Files</a></li><li><a href="https://stackoverflow.com/questions/63515668/postgres-does-streaming-slave-affect-master-health">Postgres, does streaming slave affect master health?</a></li><li><a href="https://blog.csdn.net/zhiboqingyun/article/details/124101319">PostgreSQL WAL 文件数量长期持续增加问题排查</a></li><li><a href="https://hevodata.com/learn/postgres-wal-replication/#wal">Postgres WAL Replication: Easy Step-By-Step Guide</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;有一實驗設備的 API 服務無法使用，檢查發現 database 用的磁碟空間為 0，佔用空間的竟然是 &lt;code&gt;pg_wal&lt;/code&gt; 資料夾裡的 WAL 檔案。因此需要分析在 PostgreSQL master-slave replication 的架構，master node 的 WAL 檔案為什麼會持續增加，導致磁碟空間不足，讓 database 無法正常服務。&lt;/p&gt;</summary>
    
    
    
    <category term="database" scheme="http://codefun.tw/categories/database/"/>
    
    
    <category term="postgresql" scheme="http://codefun.tw/tags/postgresql/"/>
    
  </entry>
  
  <entry>
    <title>Golang 檢查 IPv6 是否合法</title>
    <link href="http://codefun.tw/2022/2022102202-golang-ipv6-validation.html"/>
    <id>http://codefun.tw/2022/2022102202-golang-ipv6-validation.html</id>
    <published>2022-10-22T05:08:46.000Z</published>
    <updated>2022-10-22T05:08:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>以前都用 regular expression 檢查 IPv4 是否合法，那 IPv6 難道也得這樣做？沒有更方便的處理方式嗎？</p><span id="more"></span><h2 id="1-環境-Environment"><a href="#1-環境-Environment" class="headerlink" title="1. 環境  Environment"></a>1. 環境  Environment</h2><ul><li>macOS 12.5.1</li><li>go v1.18</li></ul><h2 id="2-Regular-expression-檢查-IPv4"><a href="#2-Regular-expression-檢查-IPv4" class="headerlink" title="2. Regular expression 檢查 IPv4"></a>2. Regular expression 檢查 IPv4</h2><p>以前我是這樣用，</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;regexp&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">t1 := MatchIPv4(<span class="string">&quot;10.40.210.253&quot;</span>)</span><br><span class="line">f1 := MatchIPv4(<span class="string">&quot;1000.40.210.253&quot;</span>)</span><br><span class="line">fmt.Println(t1)</span><br><span class="line">fmt.Println(f1)</span><br><span class="line"><span class="comment">// Output:</span></span><br><span class="line"><span class="comment">// true</span></span><br><span class="line"><span class="comment">// false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">MatchIPv4</span><span class="params">(s <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">re, _ := regexp.Compile(<span class="string">`^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$`</span>)</span><br><span class="line"><span class="keyword">return</span> re.MatchString(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-用-net-ParseIP-檢查"><a href="#3-用-net-ParseIP-檢查" class="headerlink" title="3. 用 net.ParseIP 檢查"></a>3. 用 <code>net.ParseIP</code> 檢查</h2><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;net&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">t1 := ValidIPv4(<span class="string">&quot;10.40.210.253&quot;</span>)</span><br><span class="line">f1 := ValidIPv4(<span class="string">&quot;1000.40.210.253&quot;</span>)</span><br><span class="line">t2 := ValidIPv6(<span class="string">&quot;2001:0db8:85a3:0000:0000:8a2e:0370:7334&quot;</span>)</span><br><span class="line">f2 := ValidIPv6(<span class="string">&quot;2001:0db8:85a3:0000:0000:8a2e:0370:7334:3445&quot;</span>)</span><br><span class="line">fmt.Println(t1)</span><br><span class="line">fmt.Println(f1)</span><br><span class="line">fmt.Println(t2)</span><br><span class="line">fmt.Println(f2)</span><br><span class="line"><span class="comment">// Output:</span></span><br><span class="line"><span class="comment">// true</span></span><br><span class="line"><span class="comment">// false</span></span><br><span class="line"><span class="comment">// true</span></span><br><span class="line"><span class="comment">// fasle</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValidIPv4</span><span class="params">(ip <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">if</span> net.ParseIP(ip).To4() != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ValidIPv6</span><span class="params">(ip <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line"><span class="keyword">if</span> net.ParseIP(ip).To16() != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ref: <a href="https://golangbyexample.com/check-ip-address-is-ipv4-or-ipv6-go/">Check if an IP address is IPV4 or IPV6 in Go</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;以前都用 regular expression 檢查 IPv4 是否合法，那 IPv6 難道也得這樣做？沒有更方便的處理方式嗎？&lt;/p&gt;</summary>
    
    
    
    <category term="development" scheme="http://codefun.tw/categories/development/"/>
    
    
    <category term="golang" scheme="http://codefun.tw/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>Golang 執行 IPv6 的 request</title>
    <link href="http://codefun.tw/2022/2022102201-golang-ipv6-local-address.html"/>
    <id>http://codefun.tw/2022/2022102201-golang-ipv6-local-address.html</id>
    <published>2022-10-22T04:24:46.000Z</published>
    <updated>2022-10-22T04:24:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>實驗設備只能以通過綁定了 IPv6 的 network interface <code>eth0.1002</code> 執行 curl 的請求，那在 golang 下要如何實作？</p><span id="more"></span><h2 id="1-環境-Environment"><a href="#1-環境-Environment" class="headerlink" title="1. 環境  Environment"></a>1. 環境  Environment</h2><ul><li>macOS 12.5.1</li><li>go v1.18</li></ul><h2 id="2-以-exec-Command-執行-curl"><a href="#2-以-exec-Command-執行-curl" class="headerlink" title="2. 以 exec.Command 執行 curl"></a>2. 以 <code>exec.Command</code> 執行 curl</h2><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;os/exec&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// curl --interface eth0.1002 http://[fe80::8ee3:8eff:fe00:6974]/redfish/v1/Fabrics/NVMe-oF/Connections</span></span><br><span class="line">curl := exec.Command(<span class="string">&quot;curl&quot;</span>, <span class="string">&quot;--interface&quot;</span>, <span class="string">&quot;eth0.1002&quot;</span>, <span class="string">&quot;http://[fe80::8ee3:8eff:fe00:6974]/redfish/v1/Fabrics/NVMe-oF/Connections&quot;</span>)</span><br><span class="line">out, err := curl.Output()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;error&quot;</span>, err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="type">string</span>(out))</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要留意 <code>exec.Command</code> 對應 curl 的參數時，是要分隔開來指定的，不可寫在同一個 string 裡。</p><p>要將 response 結果輸出到檔案，可以用下列方式，</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl := exec.Command(<span class="string">&quot;bash&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;curl https://www.google.com &gt; file&quot;</span>)</span><br></pre></td></tr></table></figure><p>Ref: <a href="https://segmentfault.com/q/1010000039064861">Golang 中如何执行带参的 curl 命令？</a></p><h2 id="3-以-net-http-執行"><a href="#3-以-net-http-執行" class="headerlink" title="3. 以 net/http 執行"></a>3. 以 <code>net/http</code> 執行</h2><p>完整的 IPv6 url 為</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://[fe80::8ee3:8eff:fe00:6974%25eth0.1002]/redfish/v1/Fabrics/NVMe-oF/Connections</span><br></pre></td></tr></table></figure><p>請注意 <code>%25</code> 在 url decode 後會是 <code>%</code> 這個符號。</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;log&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// http://[fe80::8ee3:8eff:fe00:6974%25eth0.1002]/redfish/v1/Fabrics/NVMe-oF/Connections</span></span><br><span class="line">ipv6 := <span class="string">&quot;fe80::8ee3:8eff:fe00:6974&quot;</span></span><br><span class="line">eth := <span class="string">&quot;eth0.1002&quot;</span></span><br><span class="line">url := fmt.Sprintf(<span class="string">&quot;http://[%s%%25%s]/redfish/v1/Fabrics/NVMe-oF/Connections&quot;</span>, ipv6, eth)</span><br><span class="line"></span><br><span class="line">response, err := http.Get(url)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> response.Body.Close()</span><br><span class="line">cnt, err := ioutil.ReadAll(response.Body)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;status code: %d, content: %s&quot;</span>, response.StatusCode, <span class="type">string</span>(cnt))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Refs:</p><ol><li><a href="https://labs.ripe.net/author/philip_homburg/whats-the-deal-with-ipv6-link-local-addresses/">What’s the Deal with IPv6 Link-Local Addresses?</a></li><li><a href="https://en.wikipedia.org/wiki/Percent-encoding">Percent-encoding</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;實驗設備只能以通過綁定了 IPv6 的 network interface &lt;code&gt;eth0.1002&lt;/code&gt; 執行 curl 的請求，那在 golang 下要如何實作？&lt;/p&gt;</summary>
    
    
    
    <category term="development" scheme="http://codefun.tw/categories/development/"/>
    
    
    <category term="golang" scheme="http://codefun.tw/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>在 VS code 設定 go linter</title>
    <link href="http://codefun.tw/2022/2022090601-golang-linter-in-vscode.html"/>
    <id>http://codefun.tw/2022/2022090601-golang-linter-in-vscode.html</id>
    <published>2022-09-06T05:56:18.000Z</published>
    <updated>2022-09-06T05:56:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 VS code 撰寫 <code>go</code> 程式的過程中，要檢查是否符合 coding style，以及提醒哪些變數或參數有定義卻沒使用，設定好 go linter 就沒有煩惱。</p><span id="more"></span><h2 id="1-環境-Environment"><a href="#1-環境-Environment" class="headerlink" title="1. 環境  Environment"></a>1. 環境  Environment</h2><ul><li>macOS 12.6.2</li><li>Visual Studio Code v1.74.3</li><li>go v1.19</li></ul><h2 id="2-開始設定-Configuration"><a href="#2-開始設定-Configuration" class="headerlink" title="2. 開始設定  Configuration"></a>2. 開始設定  Configuration</h2><h3 id="2-1-安裝-Extension"><a href="#2-1-安裝-Extension" class="headerlink" title="2.1. 安裝 Extension"></a>2.1. 安裝 Extension</h3><p>在 VS code 安裝 Extension: Go</p><p><img src="/uploads/2022/090501_01.extension_go.png" alt="extension go"></p><h3 id="2-2-安裝-Go-tools"><a href="#2-2-安裝-Go-tools" class="headerlink" title="2.2. 安裝 Go tools"></a>2.2. 安裝 Go tools</h3><p>按下 <code>cmd + shift + p</code> 開啟 Command Palette，並且輸入 <code>go install</code> 後選取 <code>Go: Install/Update Tools</code><br><img src="/uploads/2022/090501_02.go_install.png" alt="go install"></p><p>選取 <code>staticcheck</code> 及 <code>gopls</code> 後，按下 <code>OK</code> 即開始安裝。<br><img src="/uploads/2022/090501_03.install_tools.png" alt="install tools"></p><h3 id="2-3-設定參數"><a href="#2-3-設定參數" class="headerlink" title="2.3. 設定參數"></a>2.3. 設定參數</h3><blockquote><p>注意：完成下列的設定，一定要關閉 VS code 再重新開啟，才不會有怪怪的問題出現。</p></blockquote><p>按下 <code>cmd + shift + p</code> 開啟 Command Palette，並且輸入 <code>user</code> 後選取 <code>Preferences: Open User Settings (JSON)</code><br><img src="/uploads/2022/090501_04.user_settings.png" alt="open user settings"></p><p>先在 <code>settings.json</code> 檔案內貼上基本設定，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;[go]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment">// &quot;editor.snippetSuggestions&quot;: &quot;none&quot;,</span></span><br><span class="line">  <span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// &quot;editor.codeActionsOnSave&quot;: &#123;</span></span><br><span class="line">  <span class="comment">//     &quot;source.organizeImports&quot;: true,</span></span><br><span class="line">  <span class="comment">//     &quot;source.sortMembers&quot;: true</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p><code>&quot;editor.snippetSuggestions&quot;: &quot;none&quot;,</code> 這樣就不會出現提示了。 –可是我需要–</p><p>接著貼上關於 gopls formatting 的設定，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &quot;go.lintFlags&quot;: [&quot;-checks&quot;, &quot;all&quot;],</span></span><br><span class="line"><span class="attr">&quot;gopls&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;analyses&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ST1003&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ST1016&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ST1020&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ST1021&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ST1022&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;U1000&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;formatting.gofumpt&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;staticcheck&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ui.completion.usePlaceholders&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// &quot;ui.diagnostic.analyses&quot;: &#123;</span></span><br><span class="line">  <span class="comment">//   &quot;unusedparams&quot;: true</span></span><br><span class="line">  <span class="comment">// &#125;,</span></span><br><span class="line">  <span class="attr">&quot;ui.semanticTokens&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;completionDocumentation&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;go.useLanguageServer&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p><code>&quot;go.useLanguageServer&quot;: false,</code> 一定要設定成 false 才會有動作，這有點奇怪。</p><p>只要開啟 <code>.go</code> 檔案，就會連相同 package 的檔案一同檢查，可以看到 warning 如下圖，<br><img src="/uploads/2022/090501_05.warnings.png" alt="check results"></p><p>如果不想這麼自動的檢查，可以在 <code>settings.json</code> 將關於 gopls formatting 的設定改成以下，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;go.lintFlags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;-checks&quot;</span><span class="punctuation">,</span> <span class="string">&quot;all&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;gopls&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="comment">// &quot;analyses&quot;: &#123;</span></span><br><span class="line">  <span class="comment">//   &quot;ST1003&quot;: true,</span></span><br><span class="line">  <span class="comment">//   &quot;ST1016&quot;: true,</span></span><br><span class="line">  <span class="comment">//   &quot;ST1020&quot;: true,</span></span><br><span class="line">  <span class="comment">//   &quot;ST1021&quot;: true,</span></span><br><span class="line">  <span class="comment">//   &quot;ST1022&quot;: true,</span></span><br><span class="line">  <span class="comment">//   &quot;U1000&quot;: true</span></span><br><span class="line">  <span class="comment">// &#125;,</span></span><br><span class="line">  <span class="attr">&quot;formatting.gofumpt&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// &quot;staticcheck&quot;: true,</span></span><br><span class="line">  <span class="attr">&quot;ui.completion.usePlaceholders&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ui.diagnostic.analyses&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;unusedparams&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ui.semanticTokens&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;completionDocumentation&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// &quot;go.useLanguageServer&quot;: false,</span></span><br></pre></td></tr></table></figure><p>此時要檢查 <code>User Settings</code> 的 <code>Go: Lint Tool</code> 及 <code>Go: Lint Flags</code> 是否設定正確。<br><img src="/uploads/2022/090501_06.lint_tool_settings.png" alt="lint tool - staticcheck"></p><p>按下 <code>cmd + shift + p</code> 開啟 Command Palette，並且輸入 <code>lint</code> 後選取 <code>Go: Lint Current Package</code> （也可以選擇 <code>Go: Lint Workspace</code>）就可以看檢查的結果了<br><img src="/uploads/2022/090501_07.execute_lint.png" alt="lint tool - staticcheck"></p><p>補充說明：<br>在設定裡 <code>&quot;formatting.gofumpt&quot;: true,</code> 這行若設定為 <code>true</code> 時，會在存檔時執行 “Group imports” 及精簡程式碼。 以下是未執行 format，</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;errors&quot;</span></span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;haicds/internal/app/application/ebof&quot;</span></span><br><span class="line">  <span class="string">&quot;haicds/pkg/res&quot;</span></span><br><span class="line">  <span class="string">&quot;strconv&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;github.com/tidwall/gjson&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="keyword">var</span> webClientLogger = logger.WebClientAccessLog&#123;</span><br><span class="line">    Type:        accesslog.LogTypeValueList.EbofAction,</span><br><span class="line">    Description: <span class="string">&quot;FW upgrade by disk ID&quot;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  webClientLogger.Code = res.SuccessCode</span><br><span class="line">  <span class="keyword">var</span> cnt = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> qParams <span class="keyword">struct</span> &#123;</span><br><span class="line">    ID <span class="type">string</span> <span class="string">`uri:&quot;id&quot; binding:&quot;required&quot;`</span></span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按下 <code>cmd + s</code> 存檔時，會自動進行 format，結果如下，</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">&quot;errors&quot;</span></span><br><span class="line">  <span class="string">&quot;fmt&quot;</span></span><br><span class="line">  <span class="string">&quot;strconv&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;haicds/internal/app/application/ebof&quot;</span></span><br><span class="line">  <span class="string">&quot;haicds/pkg/res&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;github.com/tidwall/gjson&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">()</span></span> &#123;</span><br><span class="line">  webClientLogger := logger.WebClientAccessLog&#123;</span><br><span class="line">    Type:        accesslog.LogTypeValueList.EbofAction,</span><br><span class="line">    Description: <span class="string">&quot;FW upgrade by disk ID&quot;</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  webClientLogger.Code = res.SuccessCode</span><br><span class="line">  cnt := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> qParams <span class="keyword">struct</span> &#123;</span><br><span class="line">    ID <span class="type">string</span> <span class="string">`uri:&quot;id&quot; binding:&quot;required&quot;`</span></span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-後記"><a href="#3-後記" class="headerlink" title="3. 後記"></a>3. 後記</h2><p>真心推薦 <a href="https://www.jetbrains.com/go/">Goland</a>，不要做任何設定 ( ^.＜ )</p><h2 id="4-參考資料-References"><a href="#4-參考資料-References" class="headerlink" title="4. 參考資料  References"></a>4. 參考資料  References</h2><ul><li><a href="https://code.visualstudio.com/docs/languages/go">Go in Visual Studio Code</a></li><li><a href="https://qiita.com/yagi_eng/items/1c34f9691128c51846e7">【Go】デファクトなlinter staticcheckの設定方法</a></li><li><a href="https://scrapbox.io/kidaaam-92022284/go_staticcheck_%E3%81%AE%E3%83%87%E3%83%95%E3%82%A9%E3%83%AB%E3%83%88%E7%84%A1%E5%8A%B9%E3%81%AA%E9%A0%85%E7%9B%AE%E3%82%92%E4%B8%80%E9%83%A8%E6%9C%89%E5%8A%B9%E5%8C%96%E3%81%99%E3%82%8B">go staticcheck のデフォルト無効な項目を一部有効化する</a></li><li><a href="https://stackoverflow.com/questions/58018729/go-linter-in-vs-code-not-working-for-packages-across-multiple-files">Go linter in VS code not working for packages across multiple files?</a></li><li><a href="https://github.com/golang/vscode-go/discussions/1493">How to enable a check for staticcheck? #1493</a></li><li><a href="https://staticcheck.io/docs/checks#ST1020">STATICCHECK - Explanations for all checks in Staticcheck</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 VS code 撰寫 &lt;code&gt;go&lt;/code&gt; 程式的過程中，要檢查是否符合 coding style，以及提醒哪些變數或參數有定義卻沒使用，設定好 go linter 就沒有煩惱。&lt;/p&gt;</summary>
    
    
    
    <category term="development" scheme="http://codefun.tw/categories/development/"/>
    
    
    <category term="vscode" scheme="http://codefun.tw/tags/vscode/"/>
    
    <category term="coding style" scheme="http://codefun.tw/tags/coding-style/"/>
    
    <category term="golang" scheme="http://codefun.tw/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>PyCharm 設定 Interpreter - Python 2.7</title>
    <link href="http://codefun.tw/2022/2022061202-pycharm-interpreter-python2-7.html"/>
    <id>http://codefun.tw/2022/2022061202-pycharm-interpreter-python2-7.html</id>
    <published>2022-06-12T14:40:43.000Z</published>
    <updated>2022-06-12T14:40:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用 PyCharm Professional Edition 將專案的 interpreter 設定成前一篇 <a href="/2022/2022061201-python2-7-development-setting.html">Python 2.7 開發環境設置</a>自製的 docker image Python 2.7。</p><span id="more"></span><h2 id="寫在前面-Make-the-long-story-short"><a href="#寫在前面-Make-the-long-story-short" class="headerlink" title="寫在前面  Make the long story short"></a>寫在前面  Make the long story short</h2><p>付費的 PyCharm Professional Edition 是最佳選擇，真心不騙。PyCharm Professional Edition 才有支援 <a href="https://www.jetbrains.com/pycharm/features/">Remote development capabilities</a> 這很重要，因為需要設定 interpreter 指定目標是 docker image - Python 2.7.18，而且步驟很簡單。</p><p>雖然 VS Code 有支援 <a href="https://code.visualstudio.com/remote/advancedcontainers/develop-remote-host">Develop on a remote Docker host</a> ，也參考了 <a href="https://dev.to/alvarocavalcanti/setting-up-a-python-remote-interpreter-using-docker-1i24">Setting Up a Python Remote Interpreter Using Docker</a> ，苦戰了一下午，仍然無法將 interpreter 設定成 Python 2.7。最終參考 <a href="https://www.jetbrains.com/help/pycharm/using-docker-as-a-remote-interpreter.html">Configure an interpreter using Docker</a> 一下子就設定完成了！</p><h2 id="環境-Environment"><a href="#環境-Environment" class="headerlink" title="環境  Environment"></a>環境  Environment</h2><ul><li>macOS 12.3.1</li><li>PyCharm 2022.1.2</li></ul><h2 id="設定步驟-Steps"><a href="#設定步驟-Steps" class="headerlink" title="設定步驟  Steps"></a>設定步驟  Steps</h2><p>開啟 Preference（<code>CMD + ,</code>）。點選 <strong>Project: &lt;project name&gt; &gt; Python Interpreter</strong> ，點擊 <code>Python Interpreter</code> 欄位後方的齒輪圖示，並按下 <code>Add</code> 會開啟新視窗，<br><img src="/uploads/2022/0601_python_interpreter.png" alt="python_interpreter"></p><p>在新視窗中左列選取 <strong>Docker</strong> ，接著在視窗右列的 <code>Image name</code> 欄位，從下拉選項中選取 <code>my-py2.7-dev:latest</code> 後按下 <code>OK</code> 套用設定。<br><img src="/uploads/2022/0601_assign_docker_image.png" alt="assign_docker_image"></p><p>回到原來的視窗中，檢查 <code>Python Interpreter</code> 欄位，按下 <code>OK</code> 套用設定。<br><img src="/uploads/2022/0601_interpreter_docker_image.png" alt="interpreter_docker_image"></p><p>以上步驟即將專案的 interpreter 設定成自製的 docker image - <code>my-py2.7.dev</code>，<strong>是不是很簡單</strong> :)。</p><h2 id="參考資料-References"><a href="#參考資料-References" class="headerlink" title="參考資料  References"></a>參考資料  References</h2><ul><li><a href="https://www.jetbrains.com/help/pycharm/using-docker-as-a-remote-interpreter.html">Configure an interpreter using Docker</a></li><li><a href="https://code.visualstudio.com/remote/advancedcontainers/develop-remote-host">Develop on a remote Docker host</a></li><li><a href="https://dev.to/alvarocavalcanti/setting-up-a-python-remote-interpreter-using-docker-1i24">Setting Up a Python Remote Interpreter Using Docker</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用 PyCharm Professional Edition 將專案的 interpreter 設定成前一篇 &lt;a href=&quot;/2022/2022061201-python2-7-development-setting.html&quot;&gt;Python 2.7 開發環境設置&lt;/a&gt;自製的 docker image Python 2.7。&lt;/p&gt;</summary>
    
    
    
    <category term="development" scheme="http://codefun.tw/categories/development/"/>
    
    
    <category term="python" scheme="http://codefun.tw/tags/python/"/>
    
    <category term="pycharm" scheme="http://codefun.tw/tags/pycharm/"/>
    
  </entry>
  
  <entry>
    <title>Python 2.7 開發環境設置</title>
    <link href="http://codefun.tw/2022/2022061201-python2-7-development-setting.html"/>
    <id>http://codefun.tw/2022/2022061201-python2-7-development-setting.html</id>
    <published>2022-06-12T10:40:46.000Z</published>
    <updated>2022-06-12T10:40:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>Python 軟體基金會（Python Software Foundation）已在 2020&#x2F;01&#x2F;1，正式終止對 Python 2.7 的支援。那要如何在本地環境，進行基於 Python 2.7 的專案維護或開發呢？第一個想到的就是使用自製的 docker image。爬文找到這篇 <a href="https://dev.to/alvarocavalcanti/setting-up-a-python-remote-interpreter-using-docker-1i24">Setting Up a Python Remote Interpreter Using Docker</a> ，可以用 VS code 跟 PyCharm 進行搭配 Python 2.7 的 docker image 進行開發👍。</p><span id="more"></span><h2 id="環境-Environment"><a href="#環境-Environment" class="headerlink" title="環境  Environment"></a>環境  Environment</h2><ul><li>macOS 12.3.1</li><li>Docker version 20.10.12, build e91ed57</li><li>Task version: v3.12.0 (h1:viFy8kdDZ2iTcpTuxzzJCeKtTGt9U+5iXMVIpLjvIro&#x3D;)</li></ul><h2 id="事情準備"><a href="#事情準備" class="headerlink" title="事情準備"></a>事情準備</h2><p>開始動手前，先準備好一下檔案。以下檔案都放在 Git repository： <a href="https://github.com/jerry771230/my-py2.7-dev">jerry771230&#x2F;my-py2.7-dev</a></p><p>Dockerfile 內容，</p><ol><li>只安裝必要的 packages</li><li>建立 root 的密碼</li><li>設定可以通過 SSH 以帳號密碼登入</li><li>啟動 <code>ssh</code> 服務</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">FROM python:2.7-slim-buster</span><br><span class="line"></span><br><span class="line">RUN apt-get update &amp;&amp; \</span><br><span class="line">    apt-get install -y gcc file make libcurl4-openssl-dev libssl-dev openssh-server curl wget &amp;&amp; \</span><br><span class="line">    apt-get clean -y &amp;&amp; apt-get autoclean -y &amp;&amp; apt-get autoremove -y &amp;&amp; \</span><br><span class="line">    rm -rf /var/lib/apt/lists/* &amp;&amp; \</span><br><span class="line">    mkdir -p /srv</span><br><span class="line"></span><br><span class="line">RUN echo &#x27;root:password&#x27; | chpasswd</span><br><span class="line">RUN sed -i &#x27;s/#PermitRootLogin prohibit-password/PermitRootLogin yes/&#x27; /etc/ssh/sshd_config</span><br><span class="line">RUN sed &#x27;s@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g&#x27; -i /etc/pam.d/sshd</span><br><span class="line"># RUN mkdir /run/sshd</span><br><span class="line">RUN service ssh start</span><br><span class="line">EXPOSE 22</span><br><span class="line">EXPOSE 8787</span><br><span class="line">CMD [&quot;/usr/sbin/sshd&quot;, &quot;-D&quot;]</span><br></pre></td></tr></table></figure><blockquote><p>備註：<br>在文件 <a href="https://code.visualstudio.com/remote/advancedcontainers/develop-remote-host">Develop on a remote Docker host</a> 內有提到，VS code 可以使用 <code>SSH</code> 登入 container 進行開發。如果不需要 SSH 登入，其相關 packages 跟服務是都不需要的。</p></blockquote><p>Taskfile.yml 後續指令都是使用 <code>task</code> 來執行，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tasks:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">Build</span> <span class="string">&quot;py2.7-dev&quot;</span> <span class="string">image</span></span><br><span class="line">    <span class="attr">cmds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docker</span> <span class="string">build</span> <span class="string">-t</span> <span class="string">py2.7-dev</span> <span class="string">.</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">down:</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">Remove</span> <span class="string">containers</span></span><br><span class="line">    <span class="attr">cmds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docker-compose</span> <span class="string">down</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">up:</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">Run</span> <span class="string">containers</span></span><br><span class="line">    <span class="attr">cmds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docker-compose</span> <span class="string">up</span> <span class="string">-d</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">exec:</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">Get</span> <span class="string">into</span> <span class="string">&quot;py2.7&quot;</span> <span class="string">container</span></span><br><span class="line">    <span class="attr">cmds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docker</span> <span class="string">exec</span> <span class="string">-ti</span> <span class="string">py2.7</span> <span class="string">/bin/bash</span></span><br><span class="line">  <span class="attr">stop:</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">Stop</span> <span class="string">containers</span></span><br><span class="line">    <span class="attr">cmds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docker-compose</span> <span class="string">stop</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">start:</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">Start</span> <span class="string">containers</span></span><br><span class="line">    <span class="attr">cmds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docker-compose</span> <span class="string">start</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">restart:</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">Restart</span> <span class="string">containers</span></span><br><span class="line">    <span class="attr">cmds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docker-compose</span> <span class="string">restart</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">login:</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">SSH</span> <span class="string">to</span> <span class="string">&quot;py2.7&quot;</span> <span class="string">container</span></span><br><span class="line">    <span class="attr">cmds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ssh</span> <span class="string">-p</span> <span class="number">2222</span> <span class="string">-t</span> <span class="string">root@127.0.0.1</span> <span class="string">&#x27;cd /srv ; bash&#x27;</span></span><br></pre></td></tr></table></figure><p>基礎的 Python 2.7 docker image 建立後，就可以使用 <code>docker-compose</code> 進行操作， <code>docker-compose.yml</code> 如下，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.7&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">py:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">py2.7-dev:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">py2.7</span></span><br><span class="line">    <span class="attr">tty:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8787:8787&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;2222:22&quot;</span></span><br><span class="line">    <span class="attr">working_dir:</span> <span class="string">/srv</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./code:/srv</span></span><br></pre></td></tr></table></figure><p>Python 2.7 專案需要安裝的 packages 就靠 <code>code\requirement.txt</code> 管理了，</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Flask</span><br><span class="line">flask_restful</span><br><span class="line">flask-httpauth==4.5.0</span><br><span class="line">zerorpc</span><br><span class="line">urllib3</span><br><span class="line">strgen</span><br><span class="line">requests</span><br><span class="line">psycopg2-binary</span><br><span class="line">flask_sqlalchemy</span><br><span class="line">bcrypt</span><br><span class="line">ping</span><br><span class="line">psutil</span><br><span class="line">pyjwt</span><br><span class="line">pyOpenSSL</span><br><span class="line">python-dateutil</span><br><span class="line">flask-migrate</span><br></pre></td></tr></table></figure><h2 id="開始製作專案用-Python-2-7-docker-image"><a href="#開始製作專案用-Python-2-7-docker-image" class="headerlink" title="開始製作專案用 Python 2.7 docker image"></a>開始製作專案用 Python 2.7 docker image</h2><h3 id="1-建立-“py2-7-dev”-docker-image"><a href="#1-建立-“py2-7-dev”-docker-image" class="headerlink" title="1. 建立 “py2.7-dev” docker image"></a>1. 建立 “py2.7-dev” docker image</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">task build</span><br></pre></td></tr></table></figure><p>建立完成後, 列出 “py2.7-dev” docker image,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker images | grep py2.7</span><br><span class="line"></span><br><span class="line">py2.7-dev         latest           10e84e2626e0   9 seconds ago   329MB</span><br></pre></td></tr></table></figure><h3 id="2-運行-container"><a href="#2-運行-container" class="headerlink" title="2. 運行 container"></a>2. 運行 container</h3><p>使用剛才建立的 docker image <code>py2.7-dev:latest</code> 來運行 container</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">task up</span><br></pre></td></tr></table></figure><p>顯示已運行的 containers</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">CONTAINER ID   IMAGE              COMMAND               CREATED         STATUS         PORTS                                          NAMES</span><br><span class="line">f8dc4ba33f2e   py2.7-dev:latest   <span class="string">&quot;/usr/sbin/sshd -D&quot;</span>   5 seconds ago   Up 3 seconds   0.0.0.0:8787-&gt;8787/tcp, 0.0.0.0:2222-&gt;22/tcp   py2.7</span><br></pre></td></tr></table></figure><h3 id="3-SSH-to-container"><a href="#3-SSH-to-container" class="headerlink" title="3. SSH to container"></a>3. SSH to container</h3><p>使用 <code>SSH</code> 命令登入 “py2.7” container,</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">task login</span><br></pre></td></tr></table></figure><p>此時需要輸入密碼才能登入。</p><p>可以使用 <code>authorized_key</code> 進行 SSH 登入，這樣就可以免除輸入密碼。使用下方命令，將 key 複製到 container，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -p 2222 root@127.0.0.1</span><br></pre></td></tr></table></figure><p>完成後再次使用 <code>SSH</code> 命令登入，此時不需要密碼就可以登入 container 內。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">task login</span><br></pre></td></tr></table></figure><h3 id="4-Docker-命令進入-container"><a href="#4-Docker-命令進入-container" class="headerlink" title="4. Docker 命令進入 container"></a>4. Docker 命令進入 container</h3><p>在沒有安裝及設定 <code>SSH</code> 前，使用 <code>docker exec</code> 可以直接進入 container。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">task <span class="built_in">exec</span></span><br></pre></td></tr></table></figure><blockquote><p>備註：<br>沒有特別需求時，使用 <code>docker exec</code> 比 <code>SSH</code> 方便，也不需要安裝 <code>SSH</code> 相關的 packages（佔空間）。</p></blockquote><h3 id="5-安裝-Python-專案需要的-packages"><a href="#5-安裝-Python-專案需要的-packages" class="headerlink" title="5. 安裝 Python 專案需要的 packages"></a>5. 安裝 Python 專案需要的 packages</h3><p>在進入 container 後，執行下列命令，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /srv &amp;&amp;\</span><br><span class="line">pip install pip -U &amp;&amp;\</span><br><span class="line">pip install pycurl -U &amp;&amp;\</span><br><span class="line">pip install -r ./requirement.txt</span><br></pre></td></tr></table></figure><p>完成後離開 container，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h3 id="6-提交（Commit）修改到-image"><a href="#6-提交（Commit）修改到-image" class="headerlink" title="6. 提交（Commit）修改到 image"></a>6. 提交（Commit）修改到 image</h3><p>列出運行中的 container，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">CONTAINER ID   IMAGE              COMMAND               CREATED         STATUS         PORTS                                          NAMES</span><br><span class="line">f8dc4ba33f2e   py2.7-dev:latest   <span class="string">&quot;/usr/sbin/sshd -D&quot;</span>   2 minutes ago   Up 2 minutes   0.0.0.0:8787-&gt;8787/tcp, 0.0.0.0:2222-&gt;22/tcp   py2.7</span><br></pre></td></tr></table></figure><p>將 container NAMES 為 ‘py2.7’ 的 <code>CONTAINER ID</code> 複製起來。</p><p>使用 <code>docker commit</code> 將修改內容建立成新的 docker image。以下是命令的語法，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit [CONTAINER ID] [new_image_name]</span><br></pre></td></tr></table></figure><p>執行下列命令，將建立新的 docker image 命名成 <code>my-py2.7-dev</code>，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit f8dc4ba33f2e my-py2.7-dev</span><br></pre></td></tr></table></figure><p>完成後，列出 docker images，可以看到 <code>my-py2.7-dev</code> image 的容量長大了不少 :)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker images | grep py2.7</span><br><span class="line"></span><br><span class="line">my-py2.7-dev      latest           cd7c2ab0d9b3   6 seconds ago    453MB</span><br><span class="line">py2.7-dev         latest           10e84e2626e0   16 minutes ago   329MB</span><br></pre></td></tr></table></figure><h3 id="7-使用新的-image"><a href="#7-使用新的-image" class="headerlink" title="7. 使用新的 image"></a>7. 使用新的 image</h3><p>先移除運行中的 container，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">task down</span><br></pre></td></tr></table></figure><p>修改 <code>docker-compose.yml</code>，將 ‘services &gt; py &gt; image: py2.7-dev:latest’ 改成剛才建立的 ‘image: my-py2.7-dev:latest’。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">py:</span></span><br><span class="line">    <span class="comment"># image: py2.7-dev:latest</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">my-py2.7-dev:latest</span></span><br></pre></td></tr></table></figure><p>再次運行 container，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">task up</span><br></pre></td></tr></table></figure><p>列出運行中的 container，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line">CONTAINER ID   IMAGE                 COMMAND               CREATED              STATUS              PORTS                                          NAMES</span><br><span class="line">f462db97314f   my-py2.7-dev:latest   <span class="string">&quot;/usr/sbin/sshd -D&quot;</span>   About a minute ago   Up About a minute   0.0.0.0:8787-&gt;8787/tcp, 0.0.0.0:2222-&gt;22/tcp   py2.7</span><br></pre></td></tr></table></figure><p>以上步驟完成後，就可以依賴 docker image - ‘my-py2.7-dev:latest’，來設定 VS code 或 PyCharm 以 docker container 進行 Python 2.7 的開發（希望如此 XD）。</p><hr><h2 id="其他好用的-docker-命令"><a href="#其他好用的-docker-命令" class="headerlink" title="其他好用的 docker 命令"></a>其他好用的 docker 命令</h2><p>Get IP Address of container</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> py2.7</span><br></pre></td></tr></table></figure><p>Use <code>docker</code> command to run container</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -td --name py2.7 \</span><br><span class="line">         -p <span class="string">&quot;8787:8787&quot;</span> \</span><br><span class="line">         -p <span class="string">&quot;2222:22&quot;</span> \</span><br><span class="line">         -v <span class="variable">$PWD</span>:/srv \</span><br><span class="line">         -w /srv \</span><br><span class="line">         my-py2.7-dev:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="參考資料-References"><a href="#參考資料-References" class="headerlink" title="參考資料  References"></a>參考資料  References</h2><ul><li><a href="https://www.python.org/doc/sunset-python-2/">Sunsetting Python 2</a></li><li><a href="https://www.cyberciti.biz/faq/use-ssh-copy-id-with-an-openssh-server-listing-on-a-different-port/">Use ssh-copy-id with an OpenSSH Server Listening On a Different Port</a></li><li><a href="https://www.ssh.com/academy/ssh/copy-id">Ssh-copy-id for copying SSH keys to servers</a></li><li><a href="https://phoenixnap.com/kb/how-to-commit-changes-to-docker-image">How to Commit Changes to a Docker Image with Examples</a></li><li><a href="https://dev.to/alvarocavalcanti/setting-up-a-python-remote-interpreter-using-docker-1i24">Setting Up a Python Remote Interpreter Using Docker</a></li><li><a href="https://code.visualstudio.com/remote/advancedcontainers/develop-remote-host">Develop on a remote Docker host</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Python 軟體基金會（Python Software Foundation）已在 2020&amp;#x2F;01&amp;#x2F;1，正式終止對 Python 2.7 的支援。那要如何在本地環境，進行基於 Python 2.7 的專案維護或開發呢？第一個想到的就是使用自製的 docker image。爬文找到這篇 &lt;a href=&quot;https://dev.to/alvarocavalcanti/setting-up-a-python-remote-interpreter-using-docker-1i24&quot;&gt;Setting Up a Python Remote Interpreter Using Docker&lt;/a&gt; ，可以用 VS code 跟 PyCharm 進行搭配 Python 2.7 的 docker image 進行開發👍。&lt;/p&gt;</summary>
    
    
    
    <category term="development" scheme="http://codefun.tw/categories/development/"/>
    
    
    <category term="python" scheme="http://codefun.tw/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Makefile 的另一個選擇 Taskfile</title>
    <link href="http://codefun.tw/2022/20220521-taskfile-a-makefile-alternative.html"/>
    <id>http://codefun.tw/2022/20220521-taskfile-a-makefile-alternative.html</id>
    <published>2022-05-21T06:34:15.000Z</published>
    <updated>2022-05-21T06:34:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 macOS 環境，除了使用 Makefile 之外，還有另一個選擇 Taskfile。</p><span id="more"></span><h2 id="環境-Environment"><a href="#環境-Environment" class="headerlink" title="環境  Environment"></a>環境  Environment</h2><ul><li>macOS 12.3.1</li><li>Homebrew 3.4.5</li></ul><h2 id="安裝-Taskfile"><a href="#安裝-Taskfile" class="headerlink" title="安裝 Taskfile"></a>安裝 Taskfile</h2><p>Use <code>brew</code> command to install <code>task</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install go-task/tap/go-task</span><br></pre></td></tr></table></figure><h2 id="新增-Taskfile"><a href="#新增-Taskfile" class="headerlink" title="新增 Taskfile"></a>新增 Taskfile</h2><p>Create <code>Taskfile.yml</code> and insert the following,</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tasks:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">Build</span> <span class="string">the</span> <span class="string">app</span></span><br><span class="line">    <span class="attr">cmds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GOFLAGS=-mod=mod</span> <span class="string">go</span> <span class="string">build</span> <span class="string">-o</span> <span class="string">./bin/app</span> <span class="string">./internal/main.go</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">run:</span></span><br><span class="line">    <span class="attr">desc:</span> <span class="string">Run</span> <span class="string">the</span> <span class="string">app</span></span><br><span class="line">    <span class="attr">cmds:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GOFLAGS=-mod=mod</span> <span class="string">go</span> <span class="string">run</span> <span class="string">./internal/main.go</span></span><br></pre></td></tr></table></figure><p>Display the list of available tasks:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ task --list</span><br><span class="line">task: Available tasks <span class="keyword">for</span> this project:</span><br><span class="line">* build:  Build the app</span><br><span class="line">* run:   Run the app</span><br></pre></td></tr></table></figure><h2 id="執行-Taskfile-command"><a href="#執行-Taskfile-command" class="headerlink" title="執行 Taskfile command"></a>執行 Taskfile command</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ task run</span><br><span class="line">task: [run] GOFLAGS=-mod=mod go run ./internal/main.go</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>進階使用可參考 <a href="https://dev.to/stack-labs/introduction-to-taskfile-a-makefile-alternative-h92">Introduction to Taskfile: a Makefile alternative</a> 。</p><h2 id="參考資料-References"><a href="#參考資料-References" class="headerlink" title="參考資料  References"></a>參考資料  References</h2><ul><li><a href="https://dev.to/stack-labs/introduction-to-taskfile-a-makefile-alternative-h92">Introduction to Taskfile: a Makefile alternative</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 macOS 環境，除了使用 Makefile 之外，還有另一個選擇 Taskfile。&lt;/p&gt;</summary>
    
    
    
    <category term="development" scheme="http://codefun.tw/categories/development/"/>
    
    
    <category term="makefile" scheme="http://codefun.tw/tags/makefile/"/>
    
    <category term="taskfile" scheme="http://codefun.tw/tags/taskfile/"/>
    
  </entry>
  
  <entry>
    <title>被 curl 命令輸出的 &quot;* Expire in 0 ms for 1 (transfer 0x7f85f6002000)&quot; 洗版了</title>
    <link href="http://codefun.tw/2021/2021120801-curl-command-outputs-expire-in-x-ms-for-1.html"/>
    <id>http://codefun.tw/2021/2021120801-curl-command-outputs-expire-in-x-ms-for-1.html</id>
    <published>2021-12-08T08:48:34.000Z</published>
    <updated>2021-12-08T08:48:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用 curl 命令，被一堆 <code>* Expire in 0 ms for 1 (transfer 0x7f85f6002000)</code> 洗版很傻眼。。。</p><span id="more"></span><h2 id="環境-Environment"><a href="#環境-Environment" class="headerlink" title="環境  Environment"></a>環境  Environment</h2><ul><li>macOS: v10.14.6</li><li>iTerm2: Build 3.4.14</li><li>curl: v7.64.0</li></ul><h2 id="狀況"><a href="#狀況" class="headerlink" title="狀況"></a>狀況</h2><p>終於受不了每次使用 curl 命令，畫面會出現非常多的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">* Expire <span class="keyword">in</span> 2 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 0 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 0 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 2 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 0 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 0 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 2 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 0 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 0 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 2 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 0 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br><span class="line">* Expire <span class="keyword">in</span> 0 ms <span class="keyword">for</span> 1 (transfer 0x7f85f6002000)</span><br></pre></td></tr></table></figure><p>爬文看到有人跟我有一樣的困擾，看起來是某一版的 curl 才會出現這樣的 log output。解法就是升級 curl。</p><p>查看 curl 版本，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -V</span><br><span class="line">curl 7.64.0 (x86_64-apple-darwin13.4.0) libcurl/7.64.0 OpenSSL/1.1.1b zlib/1.2.11 libssh2/1.8.0</span><br><span class="line">Release-Date: 2019-02-06</span><br><span class="line">Protocols: dict file ftp ftps gopher http https imap imaps pop3 pop3s rtsp scp sftp smb smbs smtp smtps telnet tftp</span><br><span class="line">Features: AsynchDNS IPv6 Largefile GSS-API Kerberos SPNEGO NTLM NTLM_WB SSL libz TLS-SRP UnixSockets HTTPS-proxy</span><br></pre></td></tr></table></figure><h2 id="處理方式"><a href="#處理方式" class="headerlink" title="處理方式"></a>處理方式</h2><p>使用 homebrew 更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brew upgrade curl</span><br><span class="line"></span><br><span class="line">==&gt; Upgrading curl</span><br><span class="line">  7.79.1_1 -&gt; 7.80.0_1</span><br></pre></td></tr></table></figure><p>務必要執行以下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/curl/bin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><h2 id="參考資料-References"><a href="#參考資料-References" class="headerlink" title="參考資料  References"></a>參考資料  References</h2><ul><li><a href="https://stackoverflow.com/questions/63191648/curl-error-expire-in-1-ms-for-1-transfer-0x">CURL error “Expire in 1 ms for 1 (transfer 0x…)”</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用 curl 命令，被一堆 &lt;code&gt;* Expire in 0 ms for 1 (transfer 0x7f85f6002000)&lt;/code&gt; 洗版很傻眼。。。&lt;/p&gt;</summary>
    
    
    
    <category term="development" scheme="http://codefun.tw/categories/development/"/>
    
    
    <category term="curl" scheme="http://codefun.tw/tags/curl/"/>
    
  </entry>
  
  <entry>
    <title>我的日常 git 操作</title>
    <link href="http://codefun.tw/2019/2019062601-my-version-control-specification.html"/>
    <id>http://codefun.tw/2019/2019062601-my-version-control-specification.html</id>
    <published>2019-06-26T03:45:09.000Z</published>
    <updated>2019-06-26T03:45:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>將日常的 git 操作記錄下來作為團隊的開發規範。</p><span id="more"></span><h2 id="開發"><a href="#開發" class="headerlink" title="開發"></a>開發</h2><h3 id="遵循-Git-flow"><a href="#遵循-Git-flow" class="headerlink" title="遵循 Git flow"></a>遵循 Git flow</h3><ol><li>務必在個人開發環境安裝 git flow</li><li>可依據個人習慣使用 command 或是 <a href="https://www.sourcetreeapp.com/">sourcetree</a> 進行 git 各項操作</li><li>Git flow 的說明可參考 <a href="https://gitbook.tw/chapters/gitflow/why-need-git-flow.html">Git Flow 是什麼？為什麼需要這種東西？</a></li><li>各項操作參照 <a href="https://danielkummer.github.io/git-flow-cheatsheet/">git-flow cheatsheet</a> 文章內的方式進行</li></ol><h3 id="工作規範"><a href="#工作規範" class="headerlink" title="工作規範"></a>工作規範</h3><h4 id="Checkout"><a href="#Checkout" class="headerlink" title="Checkout"></a>Checkout</h4><ol><li>工作的 branch 一定從 develop 切（checkout）出 feature branch</li><li>每一 feature branch 只開發最小單位功能，以避免與 develop 產生過大的差異，導致 merge 的難度提高</li></ol><h4 id="Commit"><a href="#Commit" class="headerlink" title="Commit"></a>Commit</h4><ol><li>第一行為必填的標題（Subject），需重點說明，建議少於 50 字元</li><li>空一行後可撰寫詳細描述（Body），為選填，僅摘要描述</li><li>Commit 寫法可參考 <a href="https://juffalow.com/other/write-good-git-commit-message">Write good git commit message</a></li><li>僅可能使用英文（Google translator 是好幫手 :thumbsup: ）</li></ol><h4 id="Pull-及-Push"><a href="#Pull-及-Push" class="headerlink" title="Pull 及 Push"></a>Pull 及 Push</h4><ol><li>每次進行 pull&#x2F; push 前，先執行 fetch，以取得最新的 branches 的狀態，並依據當下情境進行更新</li><li>從 develop 進行 checkout 前，需 pull 取得最新狀態</li><li>每日下午 5 點將 feature branch push 到 remote 進行保存（買保險的概念 :smile: ）</li></ol><h4 id="Pull-Request"><a href="#Pull-Request" class="headerlink" title="Pull Request"></a>Pull Request</h4><ol><li>feature branch 項目完成後，不可直接 merge 回 develop</li><li>請至 repository server 發出 pull request，請求其他人進行 code review</li></ol><h4 id="Merge-to-develop"><a href="#Merge-to-develop" class="headerlink" title="Merge to develop"></a>Merge to develop</h4><ol><li>Code review 完成後，由最後一位將 issue close，並將該 feature branch merge 到 develop</li></ol><hr><h2 id="Repository-備份"><a href="#Repository-備份" class="headerlink" title="Repository 備份"></a>Repository 備份</h2><p>可行方式如下：</p><ol><li>每日排程備份 repository server 的資料</li><li>repository server 的資料存放在如 <a href="https://www.gluster.org/">Gluster</a> 的 file system</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;將日常的 git 操作記錄下來作為團隊的開發規範。&lt;/p&gt;</summary>
    
    
    
    <category term="development" scheme="http://codefun.tw/categories/development/"/>
    
    
    <category term="git" scheme="http://codefun.tw/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>使用 Git pre-commit 自動修正 PHP 的 Coding Style</title>
    <link href="http://codefun.tw/2019/2019051901-php-coding-style-fix-with-git.html"/>
    <id>http://codefun.tw/2019/2019051901-php-coding-style-fix-with-git.html</id>
    <published>2019-05-19T04:09:38.000Z</published>
    <updated>2019-05-19T04:09:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 VS Code 下，除了[使用 extension - <code>junstyle.php-cs-fixer</code> 進行 PHP 的 Coding Style 修正] <a href="2017/2017102302-vscode-extension-php-cs-fixer.html">1</a> 之外，也可以使用 [Git hooks] <a href="https://githooks.com/">2</a> 的功能，在 commit 之前執行指定的 script，稱為 [pre-commit] <a href="https://github.com/git/git/blob/master/templates/hooks--pre-commit.sample">3</a>，搭配 [php-cs-fixer] <a href="https://github.com/friendsofphp/php-cs-fixer">4</a> 就能自動化的對有差異的 PHP 檔案進行 Coding Style 的修正。</p><span id="more"></span><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><ol><li>macOS 10.13.6 High Sierra</li><li>PHP 7.3.5</li></ol><h2 id="開始設定-pre-commit"><a href="#開始設定-pre-commit" class="headerlink" title="開始設定 pre-commit"></a>開始設定 pre-commit</h2><h3 id="Step-1-檢查是否有-hooks-目錄"><a href="#Step-1-檢查是否有-hooks-目錄" class="headerlink" title="Step 1. 檢查是否有 hooks 目錄"></a>Step 1. 檢查是否有 hooks 目錄</h3><p>檢查 workspace 下的 <code>.git</code> 目錄是否有 <code>hooks</code> 子目錄，如下，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ ll ./.git</span><br><span class="line">total 64</span><br><span class="line">-rw-r--r--    1 jerryhuang  staff     8B May 17 18:02 COMMIT_EDITMSG</span><br><span class="line">-rw-r--r--    1 jerryhuang  staff     0B May 19 12:54 FETCH_HEAD</span><br><span class="line">-rw-r--r--    1 jerryhuang  staff    24B May 17 17:23 HEAD</span><br><span class="line">-rw-r--r--    1 jerryhuang  staff   371B May 17 17:30 config</span><br><span class="line">-rw-r--r--    1 jerryhuang  staff    73B May 17 17:30 description</span><br><span class="line">drwxr-xr-x   14 jerryhuang  staff   448B May 17 17:59 hooks</span><br><span class="line">-rw-r--r--    1 jerryhuang  staff    11K May 17 18:02 index</span><br><span class="line">drwxr-xr-x    3 jerryhuang  staff    96B May 17 17:30 info</span><br><span class="line">drwxr-xr-x    4 jerryhuang  staff   128B May  7 12:15 logs</span><br><span class="line">drwxr-xr-x  143 jerryhuang  staff   4.5K May 17 18:02 objects</span><br><span class="line">drwxr-xr-x    5 jerryhuang  staff   160B May  7 12:16 refs</span><br><span class="line">-rw-r--r--@   1 jerryhuang  staff   174B May 17 18:07 sourcetreeconfig</span><br></pre></td></tr></table></figure><p>如果有 <code>hooks</code>，則跳過 Step 2。</p><h3 id="Step-2-建立-hooks-目錄"><a href="#Step-2-建立-hooks-目錄" class="headerlink" title="Step 2. 建立 hooks 目錄"></a>Step 2. 建立 hooks 目錄</h3><p>同樣地在 workspace 目錄下，執行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br></pre></td></tr></table></figure><p>此時會重新建立 git 及其子目錄 hooks 與該目錄內的 sample 檔案。</p><h3 id="Step-3-新增-pre-commit-檔案內容"><a href="#Step-3-新增-pre-commit-檔案內容" class="headerlink" title="Step 3. 新增 pre-commit 檔案內容"></a>Step 3. 新增 pre-commit 檔案內容</h3><p>在 workspace 下執行 <code>vim ./.git/hooks/pre-commit</code>，新增如下的檔案內容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">pass=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">files=$(git diff --cached --name-only --diff-filter=ACMR | grep -E <span class="string">&#x27;\.(php|phtml)$&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$files</span>&quot;</span> != <span class="string">&quot;&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Run php syntax check before commit</span></span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">read</span> -r file; <span class="keyword">do</span></span><br><span class="line">        php -l <span class="string">&quot;<span class="variable">$file</span>&quot;</span></span><br><span class="line">        <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">            pass=<span class="literal">false</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span> &lt;&lt;&lt; <span class="string">&quot;<span class="variable">$files</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Run php-cs-fixer validation before commit</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$files</span>&quot;</span> | xargs ./vendor/bin/php-cs-fixer fix --diff --config .php_cs</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">        pass=<span class="literal">false</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Automatically add files that may have been fixed by php-cs-fixer</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$files</span>&quot;</span> | xargs git add</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">$pass</span>; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;PRE-COMMIT HOOK FAILED:&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Code style validation failed. Please fix errors and try committing again.&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>請留意 <code>echo &quot;$files&quot; | xargs ./vendor/bin/php-cs-fixer fix --diff --config .php_cs</code> 這段，</p><ol><li><code>./vendor/bin/php-cs-fixer</code>： 是使用 <code>composer require --dev friendsofphp/php-cs-fixer</code> 安裝在 project 內 vendor 目錄中的 php-cs-fixer 進行 Coding Style 修正。Global 安裝方式請參考 [FriendsOfPHP&#x2F;PHP-CS-Fixer] <a href="https://github.com/friendsofphp/php-cs-fixer">6</a>。</li><li><code>.php_cs</code>： 使用 [在 vs code 使用 php cs fixer 進行 coding style 的格式修正] <a href="2017/2017102302-vscode-extension-php-cs-fixer.html">1</a> 一文內建立的檔案，或參考 [FriendsOfPHP&#x2F;PHP-CS-Fixer] <a href="https://github.com/friendsofphp/php-cs-fixer">6</a> 內的 <code>.php_cs.dist</code> 再依據需求修改。</li></ol><h3 id="Step-4-修改-pre-commit-的權限"><a href="#Step-4-修改-pre-commit-的權限" class="headerlink" title="Step 4. 修改 pre-commit 的權限"></a>Step 4. 修改 pre-commit 的權限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">chmod</span> +x .git/hooks/pre-commit</span><br></pre></td></tr></table></figure><p>必須修改 <code>pre-commit</code> 的權限，這樣才能在 commit 前正確執行寫 php-cs-fixer。</p><p>完成以上設定後，每次在 commit 前，只要有產生差異的 PHP 檔案，就會自動進行 Coding Style 修正。</p><h2 id="參考資料-References"><a href="#參考資料-References" class="headerlink" title="參考資料  References"></a>參考資料  References</h2><ul><li>[Automating Code Style Fixes with Git and PHP Coding Standards Fixer] <a href="https://victor.4devs.io/en/clean-code/automating-code-style-fixes-with-git-and-php-cs-fixer.html">5</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 VS Code 下，除了[使用 extension - &lt;code&gt;junstyle.php-cs-fixer&lt;/code&gt; 進行 PHP 的 Coding Style 修正] &lt;a href=&quot;2017/2017102302-vscode-extension-php-cs-fixer.html&quot;&gt;1&lt;/a&gt; 之外，也可以使用 [Git hooks] &lt;a href=&quot;https://githooks.com/&quot;&gt;2&lt;/a&gt; 的功能，在 commit 之前執行指定的 script，稱為 [pre-commit] &lt;a href=&quot;https://github.com/git/git/blob/master/templates/hooks--pre-commit.sample&quot;&gt;3&lt;/a&gt;，搭配 [php-cs-fixer] &lt;a href=&quot;https://github.com/friendsofphp/php-cs-fixer&quot;&gt;4&lt;/a&gt; 就能自動化的對有差異的 PHP 檔案進行 Coding Style 的修正。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="http://codefun.tw/categories/php/"/>
    
    
    <category term="coding style" scheme="http://codefun.tw/tags/coding-style/"/>
    
    <category term="php-cs-fixer" scheme="http://codefun.tw/tags/php-cs-fixer/"/>
    
  </entry>
  
  <entry>
    <title>使用 Homebrew 安裝 anaconda</title>
    <link href="http://codefun.tw/2019/2019042601-install-anaconda-with-homebrew.html"/>
    <id>http://codefun.tw/2019/2019042601-install-anaconda-with-homebrew.html</id>
    <published>2019-04-26T09:20:10.000Z</published>
    <updated>2019-04-26T09:20:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>只要簡單幾行命令，就可以快速安裝好 [anaconda] <a href="https://www.anaconda.com/" title="anaconda">1</a>，並且使用 [jupyter notebook] <a href="https://jupyter.org/">2</a>。</p><span id="more"></span><h2 id="使用-Homebrew-安裝-anaconda"><a href="#使用-Homebrew-安裝-anaconda" class="headerlink" title="使用 Homebrew 安裝 anaconda"></a>使用 Homebrew 安裝 anaconda</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><span class="line">$ brew cask install anaconda</span><br><span class="line"></span><br><span class="line">==&gt; Satisfying dependencies</span><br><span class="line">==&gt; Downloading https://repo.anaconda.com/archive/Anaconda3-2019.03-MacOSX-x86_64.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">###### ################################################################## 100.0%</span></span><br><span class="line"></span><br><span class="line">==&gt; Verifying SHA-256 checksum <span class="keyword">for</span> Cask <span class="string">&#x27;anaconda&#x27;</span>.</span><br><span class="line">==&gt; Installing Cask anaconda</span><br><span class="line">==&gt; Running installer script <span class="string">&#x27;Anaconda3-2019.03-MacOSX-x86_64.sh&#x27;</span></span><br><span class="line">Password:</span><br><span class="line">PREFIX=/usr/local/anaconda3</span><br><span class="line">installing: python-3.7.3-h359304d_0 ...</span><br><span class="line">Python 3.7.3</span><br><span class="line">installing: conda-env-2.6.0-1 ...</span><br><span class="line">installing: blas-1.0-mkl ...</span><br><span class="line">installing: bzip2-1.0.6-h1de35cc_5 ...</span><br><span class="line">installing: ca-certificates-2019.1.23-0 ...</span><br><span class="line">installing: intel-openmp-2019.3-199 ...</span><br><span class="line">installing: jbig-2.1-h4d881f8_0 ...</span><br><span class="line">installing: jpeg-9b-he5867d9_2 ...</span><br><span class="line">installing: libcxxabi-4.0.1-hcfea43d_1 ...</span><br><span class="line">installing: libgfortran-3.0.1-h93005f0_2 ...</span><br><span class="line">installing: libiconv-1.15-hdd342a3_7 ...</span><br><span class="line">installing: libsodium-1.0.16-h3efe00b_0 ...</span><br><span class="line">installing: lz4-c-1.8.1.2-h1de35cc_0 ...</span><br><span class="line">installing: lzo-2.10-h362108e_2 ...</span><br><span class="line">installing: pandoc-2.2.3.2-0 ...</span><br><span class="line">installing: xz-5.2.4-h1de35cc_4 ...</span><br><span class="line">installing: yaml-0.1.7-hc338f04_2 ...</span><br><span class="line">installing: zlib-1.2.11-h1de35cc_3 ...</span><br><span class="line">installing: libcxx-4.0.1-hcfea43d_1 ...</span><br><span class="line">installing: libpng-1.6.36-ha441bb4_0 ...</span><br><span class="line">installing: mkl-2019.3-199 ...</span><br><span class="line">installing: openssl-1.1.1b-h1de35cc_1 ...</span><br><span class="line">installing: tk-8.6.8-ha441bb4_0 ...</span><br><span class="line">installing: zstd-1.3.7-h5bba6e5_0 ...</span><br><span class="line">installing: expat-2.2.6-h0a44026_0 ...</span><br><span class="line">installing: freetype-2.9.1-hb4e5f40_0 ...</span><br><span class="line">installing: gmp-6.1.2-hb37e062_1 ...</span><br><span class="line">installing: hdf5-1.10.4-hfa1e0ec_0 ...</span><br><span class="line">installing: icu-58.2-h4b95b61_1 ...</span><br><span class="line">installing: libffi-3.2.1-h475c297_4 ...</span><br><span class="line">installing: liblief-0.9.0-h2a1bed3_2 ...</span><br><span class="line">installing: libssh2-1.8.0-ha12b0ac_4 ...</span><br><span class="line">installing: libtiff-4.0.10-hcb84e12_2 ...</span><br><span class="line">installing: ncurses-6.1-h0a44026_1 ...</span><br><span class="line">installing: pcre-8.43-h0a44026_0 ...</span><br><span class="line">installing: snappy-1.1.7-he62c110_3 ...</span><br><span class="line">installing: zeromq-4.3.1-h0a44026_3 ...</span><br><span class="line">installing: blosc-1.15.0-hd9629dc_0 ...</span><br><span class="line">installing: gettext-0.19.8.1-h15daf44_3 ...</span><br><span class="line">installing: libedit-3.1.20181209-hb402a30_0 ...</span><br><span class="line">installing: libxml2-2.9.9-hab757c2_0 ...</span><br><span class="line">installing: mpfr-4.0.1-h3018a27_3 ...</span><br><span class="line">installing: readline-7.0-h1de35cc_5 ...</span><br><span class="line">installing: glib-2.56.2-hd9629dc_0 ...</span><br><span class="line">installing: krb5-1.16.1-hddcf347_7 ...</span><br><span class="line">installing: libarchive-3.3.3-h786848e_5 ...</span><br><span class="line">installing: libxslt-1.1.33-h33a18ac_0 ...</span><br><span class="line">installing: mpc-1.1.0-h6ef4df4_1 ...</span><br><span class="line">installing: sqlite-3.27.2-ha441bb4_0 ...</span><br><span class="line">installing: unixodbc-2.3.7-h1de35cc_0 ...</span><br><span class="line">installing: dbus-1.13.6-h90a0687_0 ...</span><br><span class="line">installing: libcurl-7.64.0-h051b688_2 ...</span><br><span class="line">installing: qt-5.9.7-h468cd18_1 ...</span><br><span class="line">installing: alabaster-0.7.12-py37_0 ...</span><br><span class="line">installing: appnope-0.1.0-py37_0 ...</span><br><span class="line">installing: appscript-1.1.0-py37h1de35cc_0 ...</span><br><span class="line">installing: asn1crypto-0.24.0-py37_0 ...</span><br><span class="line">installing: atomicwrites-1.3.0-py37_1 ...</span><br><span class="line">installing: attrs-19.1.0-py37_1 ...</span><br><span class="line">installing: backcall-0.1.0-py37_0 ...</span><br><span class="line">installing: backports-1.0-py37_1 ...</span><br><span class="line">installing: bitarray-0.8.3-py37h1de35cc_0 ...</span><br><span class="line">installing: boto-2.49.0-py37_0 ...</span><br><span class="line">installing: certifi-2019.3.9-py37_0 ...</span><br><span class="line">installing: chardet-3.0.4-py37_1 ...</span><br><span class="line">installing: click-7.0-py37_0 ...</span><br><span class="line">installing: cloudpickle-0.8.0-py37_0 ...</span><br><span class="line">installing: colorama-0.4.1-py37_0 ...</span><br><span class="line">installing: contextlib2-0.5.5-py37_0 ...</span><br><span class="line">installing: curl-7.64.0-ha441bb4_2 ...</span><br><span class="line">installing: dask-core-1.1.4-py37_1 ...</span><br><span class="line">installing: decorator-4.4.0-py37_1 ...</span><br><span class="line">installing: defusedxml-0.5.0-py37_1 ...</span><br><span class="line">installing: docutils-0.14-py37_0 ...</span><br><span class="line">installing: entrypoints-0.3-py37_0 ...</span><br><span class="line">installing: et_xmlfile-1.0.1-py37_0 ...</span><br><span class="line">installing: fastcache-1.0.2-py37h1de35cc_2 ...</span><br><span class="line">installing: filelock-3.0.10-py37_0 ...</span><br><span class="line">installing: future-0.17.1-py37_0 ...</span><br><span class="line">installing: glob2-0.6-py37_1 ...</span><br><span class="line">installing: gmpy2-2.0.8-py37h6ef4df4_2 ...</span><br><span class="line">installing: greenlet-0.4.15-py37h1de35cc_0 ...</span><br><span class="line">installing: heapdict-1.0.0-py37_2 ...</span><br><span class="line">installing: idna-2.8-py37_0 ...</span><br><span class="line">installing: imagesize-1.1.0-py37_0 ...</span><br><span class="line">installing: ipython_genutils-0.2.0-py37_0 ...</span><br><span class="line">installing: itsdangerous-1.1.0-py37_0 ...</span><br><span class="line">installing: jdcal-1.4-py37_0 ...</span><br><span class="line">installing: kiwisolver-1.0.1-py37h0a44026_0 ...</span><br><span class="line">installing: lazy-object-proxy-1.3.1-py37h1de35cc_2 ...</span><br><span class="line">installing: llvmlite-0.28.0-py37h8c7ce04_0 ...</span><br><span class="line">installing: locket-0.2.0-py37_1 ...</span><br><span class="line">installing: lxml-4.3.2-py37hef8c89e_0 ...</span><br><span class="line">installing: markupsafe-1.1.1-py37h1de35cc_0 ...</span><br><span class="line">installing: mccabe-0.6.1-py37_1 ...</span><br><span class="line">installing: mistune-0.8.4-py37h1de35cc_0 ...</span><br><span class="line">installing: mkl-service-1.1.2-py37hfbe908c_5 ...</span><br><span class="line">installing: more-itertools-6.0.0-py37_0 ...</span><br><span class="line">installing: mpmath-1.1.0-py37_0 ...</span><br><span class="line">installing: msgpack-python-0.6.1-py37h04f5b5a_1 ...</span><br><span class="line">installing: numpy-base-1.16.2-py37h6575580_0 ...</span><br><span class="line">installing: olefile-0.46-py37_0 ...</span><br><span class="line">installing: pandocfilters-1.4.2-py37_1 ...</span><br><span class="line">installing: parso-0.3.4-py37_0 ...</span><br><span class="line">installing: pep8-1.7.1-py37_0 ...</span><br><span class="line">installing: pickleshare-0.7.5-py37_0 ...</span><br><span class="line">installing: pkginfo-1.5.0.1-py37_0 ...</span><br><span class="line">installing: pluggy-0.9.0-py37_0 ...</span><br><span class="line">installing: ply-3.11-py37_0 ...</span><br><span class="line">installing: prometheus_client-0.6.0-py37_0 ...</span><br><span class="line">installing: psutil-5.6.1-py37h1de35cc_0 ...</span><br><span class="line">installing: ptyprocess-0.6.0-py37_0 ...</span><br><span class="line">installing: py-1.8.0-py37_0 ...</span><br><span class="line">installing: py-lief-0.9.0-py37h1413db1_2 ...</span><br><span class="line">installing: pycodestyle-2.5.0-py37_0 ...</span><br><span class="line">installing: pycosat-0.6.3-py37h1de35cc_0 ...</span><br><span class="line">installing: pycparser-2.19-py37_0 ...</span><br><span class="line">installing: pycrypto-2.6.1-py37h1de35cc_9 ...</span><br><span class="line">installing: pycurl-7.43.0.2-py37ha12b0ac_0 ...</span><br><span class="line">installing: pyflakes-2.1.1-py37_0 ...</span><br><span class="line">installing: pyodbc-4.0.26-py37h0a44026_0 ...</span><br><span class="line">installing: pyparsing-2.3.1-py37_0 ...</span><br><span class="line">installing: pysocks-1.6.8-py37_0 ...</span><br><span class="line">installing: python-libarchive-c-2.8-py37_6 ...</span><br><span class="line">installing: python.app-2-py37_9 ...</span><br><span class="line">installing: pytz-2018.9-py37_0 ...</span><br><span class="line">installing: pyyaml-5.1-py37h1de35cc_0 ...</span><br><span class="line">installing: pyzmq-18.0.0-py37h0a44026_0 ...</span><br><span class="line">installing: qtpy-1.7.0-py37_1 ...</span><br><span class="line">installing: rope-0.12.0-py37_0 ...</span><br><span class="line">installing: ruamel_yaml-0.15.46-py37h1de35cc_0 ...</span><br><span class="line">installing: send2trash-1.5.0-py37_0 ...</span><br><span class="line">installing: simplegeneric-0.8.1-py37_2 ...</span><br><span class="line">installing: sip-4.19.8-py37h0a44026_0 ...</span><br><span class="line">installing: six-1.12.0-py37_0 ...</span><br><span class="line">installing: snowballstemmer-1.2.1-py37_0 ...</span><br><span class="line">installing: sortedcontainers-2.1.0-py37_0 ...</span><br><span class="line">installing: soupsieve-1.8-py37_0 ...</span><br><span class="line">installing: sphinxcontrib-1.0-py37_1 ...</span><br><span class="line">installing: sqlalchemy-1.3.1-py37h1de35cc_0 ...</span><br><span class="line">installing: tblib-1.3.2-py37_0 ...</span><br><span class="line">installing: testpath-0.4.2-py37_0 ...</span><br><span class="line">installing: toolz-0.9.0-py37_0 ...</span><br><span class="line">installing: tornado-6.0.2-py37h1de35cc_0 ...</span><br><span class="line">installing: tqdm-4.31.1-py37_1 ...</span><br><span class="line">installing: unicodecsv-0.14.1-py37_0 ...</span><br><span class="line">installing: wcwidth-0.1.7-py37_0 ...</span><br><span class="line">installing: webencodings-0.5.1-py37_1 ...</span><br><span class="line">installing: werkzeug-0.14.1-py37_0 ...</span><br><span class="line">installing: wrapt-1.11.1-py37h1de35cc_0 ...</span><br><span class="line">installing: wurlitzer-1.0.2-py37_0 ...</span><br><span class="line">installing: xlrd-1.2.0-py37_0 ...</span><br><span class="line">installing: xlsxwriter-1.1.5-py37_0 ...</span><br><span class="line">installing: xlwt-1.3.0-py37_0 ...</span><br><span class="line">installing: zipp-0.3.3-py37_1 ...</span><br><span class="line">installing: babel-2.6.0-py37_0 ...</span><br><span class="line">installing: backports.os-0.1.1-py37_0 ...</span><br><span class="line">installing: backports.shutil_get_terminal_size-1.0.0-py37_2 ...</span><br><span class="line">installing: beautifulsoup4-4.7.1-py37_1 ...</span><br><span class="line">installing: cffi-1.12.2-py37hb5b8e2f_1 ...</span><br><span class="line">installing: cycler-0.10.0-py37_0 ...</span><br><span class="line">installing: cytoolz-0.9.0.1-py37h1de35cc_1 ...</span><br><span class="line">installing: html5lib-1.0.1-py37_0 ...</span><br><span class="line">installing: importlib_metadata-0.8-py37_0 ...</span><br><span class="line">installing: jedi-0.13.3-py37_0 ...</span><br><span class="line">installing: keyring-18.0.0-py37_0 ...</span><br><span class="line">installing: mkl_random-1.0.2-py37h27c97d8_0 ...</span><br><span class="line">installing: multipledispatch-0.6.0-py37_0 ...</span><br><span class="line">installing: nltk-3.4-py37_1 ...</span><br><span class="line">installing: openpyxl-2.6.1-py37_1 ...</span><br><span class="line">installing: packaging-19.0-py37_0 ...</span><br><span class="line">installing: partd-0.3.10-py37_1 ...</span><br><span class="line">installing: pathlib2-2.3.3-py37_0 ...</span><br><span class="line">installing: pexpect-4.6.0-py37_0 ...</span><br><span class="line">installing: pillow-5.4.1-py37hb68e598_0 ...</span><br><span class="line">installing: pyqt-5.9.2-py37h655552a_2 ...</span><br><span class="line">installing: pyrsistent-0.14.11-py37h1de35cc_0 ...</span><br><span class="line">installing: python-dateutil-2.8.0-py37_0 ...</span><br><span class="line">installing: qtawesome-0.5.7-py37_1 ...</span><br><span class="line">installing: setuptools-40.8.0-py37_0 ...</span><br><span class="line">installing: singledispatch-3.4.0.3-py37_0 ...</span><br><span class="line">installing: sortedcollections-1.1.2-py37_0 ...</span><br><span class="line">installing: sphinxcontrib-websupport-1.1.0-py37_1 ...</span><br><span class="line">installing: sympy-1.3-py37_0 ...</span><br><span class="line">installing: terminado-0.8.1-py37_1 ...</span><br><span class="line">installing: traitlets-4.3.2-py37_0 ...</span><br><span class="line">installing: xlwings-0.15.4-py37_0 ...</span><br><span class="line">installing: zict-0.1.4-py37_0 ...</span><br><span class="line">installing: astroid-2.2.5-py37_0 ...</span><br><span class="line">installing: bleach-3.1.0-py37_0 ...</span><br><span class="line">installing: clyent-1.2.2-py37_1 ...</span><br><span class="line">installing: cryptography-2.6.1-py37ha12b0ac_0 ...</span><br><span class="line">installing: cython-0.29.6-py37h0a44026_0 ...</span><br><span class="line">installing: distributed-1.26.0-py37_1 ...</span><br><span class="line">installing: get_terminal_size-1.0.0-h7520d66_0 ...</span><br><span class="line">installing: gevent-1.4.0-py37h1de35cc_0 ...</span><br><span class="line">installing: isort-4.3.16-py37_0 ...</span><br><span class="line">installing: jinja2-2.10-py37_0 ...</span><br><span class="line">installing: jsonschema-3.0.1-py37_0 ...</span><br><span class="line">installing: jupyter_core-4.4.0-py37_0 ...</span><br><span class="line">installing: navigator-updater-0.2.1-py37_0 ...</span><br><span class="line">installing: networkx-2.2-py37_1 ...</span><br><span class="line">installing: nose-1.3.7-py37_2 ...</span><br><span class="line">installing: path.py-11.5.0-py37_0 ...</span><br><span class="line">installing: pygments-2.3.1-py37_0 ...</span><br><span class="line">installing: pytest-4.3.1-py37_0 ...</span><br><span class="line">installing: wheel-0.33.1-py37_0 ...</span><br><span class="line">installing: conda-verify-3.1.1-py37_0 ...</span><br><span class="line">installing: flask-1.0.2-py37_1 ...</span><br><span class="line">installing: jupyter_client-5.2.4-py37_0 ...</span><br><span class="line">installing: nbformat-4.4.0-py37_0 ...</span><br><span class="line">installing: pip-19.0.3-py37_0 ...</span><br><span class="line">installing: prompt_toolkit-2.0.9-py37_0 ...</span><br><span class="line">installing: pylint-2.3.1-py37_0 ...</span><br><span class="line">installing: pyopenssl-19.0.0-py37_0 ...</span><br><span class="line">installing: pytest-openfiles-0.3.2-py37_0 ...</span><br><span class="line">installing: pytest-remotedata-0.3.1-py37_0 ...</span><br><span class="line">installing: ipython-7.4.0-py37h39e3cac_0 ...</span><br><span class="line">installing: nbconvert-5.4.1-py37_3 ...</span><br><span class="line">installing: urllib3-1.24.1-py37_0 ...</span><br><span class="line">installing: ipykernel-5.1.0-py37h39e3cac_0 ...</span><br><span class="line">installing: requests-2.21.0-py37_0 ...</span><br><span class="line">installing: anaconda-client-1.7.2-py37_0 ...</span><br><span class="line">installing: conda-4.6.11-py37_0 ...</span><br><span class="line">installing: jupyter_console-6.0.0-py37_0 ...</span><br><span class="line">installing: notebook-5.7.8-py37_0 ...</span><br><span class="line">installing: qtconsole-4.4.3-py37_0 ...</span><br><span class="line">installing: sphinx-1.8.5-py37_0 ...</span><br><span class="line">installing: spyder-kernels-0.4.2-py37_0 ...</span><br><span class="line">installing: anaconda-navigator-1.9.7-py37_0 ...</span><br><span class="line">installing: anaconda-project-0.8.2-py37_0 ...</span><br><span class="line">installing: conda-build-3.17.8-py37_0 ...</span><br><span class="line">installing: jupyterlab_server-0.2.0-py37_0 ...</span><br><span class="line">installing: numpydoc-0.8.0-py37_0 ...</span><br><span class="line">installing: widgetsnbextension-3.4.2-py37_0 ...</span><br><span class="line">installing: ipywidgets-7.4.2-py37_0 ...</span><br><span class="line">installing: jupyterlab-0.35.4-py37hf63ae98_0 ...</span><br><span class="line">installing: spyder-3.3.3-py37_0 ...</span><br><span class="line">installing: _ipyw_jlab_nb_ext_conf-0.1.0-py37_0 ...</span><br><span class="line">installing: jupyter-1.0.0-py37_7 ...</span><br><span class="line">installing: bokeh-1.0.4-py37_0 ...</span><br><span class="line">installing: bottleneck-1.2.1-py37h1d22016_1 ...</span><br><span class="line">installing: h5py-2.9.0-py37h3134771_0 ...</span><br><span class="line">installing: imageio-2.5.0-py37_0 ...</span><br><span class="line">installing: matplotlib-3.0.3-py37h54f8f79_0 ...</span><br><span class="line">installing: mkl_fft-1.0.10-py37h5e564d8_0 ...</span><br><span class="line">installing: numpy-1.16.2-py37hacdab7b_0 ...</span><br><span class="line">installing: numba-0.43.1-py37h6440ff4_0 ...</span><br><span class="line">installing: numexpr-2.6.9-py37h7413580_0 ...</span><br><span class="line">installing: pandas-0.24.2-py37h0a44026_0 ...</span><br><span class="line">installing: pytest-arraydiff-0.3-py37h39e3cac_0 ...</span><br><span class="line">installing: pytest-doctestplus-0.3.0-py37_0 ...</span><br><span class="line">installing: pywavelets-1.0.2-py37h1d22016_0 ...</span><br><span class="line">installing: scipy-1.2.1-py37h1410ff5_0 ...</span><br><span class="line">installing: bkcharts-0.2-py37_0 ...</span><br><span class="line">installing: dask-1.1.4-py37_1 ...</span><br><span class="line">installing: patsy-0.5.1-py37_0 ...</span><br><span class="line">installing: pytables-3.5.1-py37h5bccee9_0 ...</span><br><span class="line">installing: pytest-astropy-0.5.0-py37_0 ...</span><br><span class="line">installing: scikit-image-0.14.2-py37h0a44026_0 ...</span><br><span class="line">installing: scikit-learn-0.20.3-py37h27c97d8_0 ...</span><br><span class="line">installing: astropy-3.1.2-py37h1de35cc_0 ...</span><br><span class="line">installing: statsmodels-0.9.0-py37h1d22016_0 ...</span><br><span class="line">installing: seaborn-0.9.0-py37_0 ...</span><br><span class="line">installing: anaconda-2019.03-py37_0 ...</span><br><span class="line">installation finished.</span><br><span class="line">==&gt; Changing ownership of paths required by anaconda; your password may be necessary</span><br><span class="line">🍺  anaconda was successfully installed!</span><br></pre></td></tr></table></figure><h2 id="設定環境路徑"><a href="#設定環境路徑" class="headerlink" title="設定環境路徑"></a>設定環境路徑</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim ~/.zshrc</span><br></pre></td></tr></table></figure><p>加入 anaconda 的安裝路徑，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/anaconda3/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure><p> 重啓 terminal 或是執行 <code>source ~/.zshrc</code> 重載入環境變數。</p><h2 id="開始使用-jupyter-notebook"><a href="#開始使用-jupyter-notebook" class="headerlink" title="開始使用 jupyter notebook"></a>開始使用 jupyter notebook</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ jupyter notebook</span><br><span class="line"></span><br><span class="line">[I 17:11:37.762 NotebookApp] Writing notebook server cookie secret to /Users/jerryhuang/Library/Jupyter/runtime/notebook_cookie_secret</span><br><span class="line">[I 17:11:38.780 NotebookApp] JupyterLab extension loaded from /usr/local/anaconda3/lib/python3.7/site-packages/jupyterlab</span><br><span class="line">[I 17:11:38.780 NotebookApp] JupyterLab application directory is /usr/local/anaconda3/share/jupyter/lab</span><br><span class="line">[I 17:11:38.781 NotebookApp] Serving notebooks from <span class="built_in">local</span> directory: /Users/jerryhuang/workspace/redfalcon/brazil/carnival.2019</span><br><span class="line">[I 17:11:38.781 NotebookApp] The Jupyter Notebook is running at:</span><br><span class="line">[I 17:11:38.781 NotebookApp] http://localhost:8888/?token=7644583630c119f4ce453430fa6993b6cc8c9fe6258d2026</span><br><span class="line">[I 17:11:38.782 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).</span><br><span class="line">[C 17:11:38.793 NotebookApp]</span><br><span class="line"></span><br><span class="line">    To access the notebook, open this file <span class="keyword">in</span> a browser:</span><br><span class="line">        file:///Users/jerryhuang/Library/Jupyter/runtime/nbserver-50420-open.html</span><br><span class="line">    Or copy and <span class="built_in">paste</span> one of these URLs:</span><br><span class="line">        http://localhost:8888/?token=7644583630c119f4ce453430fa6993b6cc8c9fe6258d2026</span><br><span class="line">^C[I 17:12:02.475 NotebookApp] interrupted</span><br><span class="line">Serving notebooks from <span class="built_in">local</span> directory: /Users/jerryhuang/workspace/redfalcon/brazil/carnival.2019</span><br><span class="line">0 active kernels</span><br><span class="line">The Jupyter Notebook is running at:</span><br><span class="line">http://localhost:8888/?token=7644583630c119f4ce453430fa6993b6cc8c9fe6258d2026</span><br></pre></td></tr></table></figure><h2 id="參考資料-References"><a href="#參考資料-References" class="headerlink" title="參考資料  References"></a>參考資料  References</h2><ul><li>[Install anaconda on macOS with homebrew] <a href="https://medium.com/ayuth/install-anaconda-on-macos-with-homebrew-c94437d63a37">3</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;只要簡單幾行命令，就可以快速安裝好 [anaconda] &lt;a href=&quot;https://www.anaconda.com/&quot; title=&quot;anaconda&quot;&gt;1&lt;/a&gt;，並且使用 [jupyter notebook] &lt;a href=&quot;https://jupyter.org/&quot;&gt;2&lt;/a&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="python" scheme="http://codefun.tw/categories/python/"/>
    
    
    <category term="jupyter notebook" scheme="http://codefun.tw/tags/jupyter-notebook/"/>
    
  </entry>
  
  <entry>
    <title>分隔 Laravel log file 以解決 Permission Deny 問題</title>
    <link href="http://codefun.tw/2019/2019042401-laravel-isolate-log-file.html"/>
    <id>http://codefun.tw/2019/2019042401-laravel-isolate-log-file.html</id>
    <published>2019-04-24T04:32:48.000Z</published>
    <updated>2019-04-24T04:32:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>Laravel 理當會將發生的例外錯誤（Exception）寫到 <code>storage/logs/laravel-yyyy-mm-dd.log</code>，但查詢該檔案，卻看不到應有的錯誤內容！</p><span id="more"></span><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>Docker 安裝的內容，</p><ol><li>Ubuntu 18.04</li><li>Nginx 1.14</li><li>php7.3-fpm</li></ol><h2 id="權限問題-Permission-Deny"><a href="#權限問題-Permission-Deny" class="headerlink" title="權限問題 Permission Deny"></a>權限問題 Permission Deny</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ll storage/logs/</span><br><span class="line"></span><br><span class="line">-rw-r--r--. 1 www-data www-data  30283 Apr 16 23:55 laravel-2019-04-16.log</span><br><span class="line">-rw-r--r--. 1 www-data www-data  30079 Apr 17 23:55 laravel-2019-04-17.log</span><br><span class="line">-rw-r--r--. 1 root     root      30283 Apr 18 23:55 laravel-2019-04-18.log</span><br><span class="line">-rw-r--r--. 1 root     root      38283 Apr 19 23:55 laravel-2019-04-19.log</span><br></pre></td></tr></table></figure><p>系統有 crontab 定時處理事務，在處理的同時會以 <code>Log::info()</code> 輸出，所以產生的 log 檔案，其 owner 會是 root。<br>網站程式運行的 user 是 <code>www-data</code>，所以若發生程式的 Exception 就會因為 Permission Deny 而無法寫入，</p><h2 id="解決方式"><a href="#解決方式" class="headerlink" title="解決方式"></a>解決方式</h2><h3 id="成功的解法-Success"><a href="#成功的解法-Success" class="headerlink" title="成功的解法  Success"></a>成功的解法  Success</h3><p>在 <code>bootstrap/app.php</code> 檔案內加入以下程式碼，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// isolate artisan console log and laravel service log</span></span><br><span class="line"><span class="comment">// https://stackoverflow.com/questions/27674597/laravel-daily-log-created-with-wrong-permissions</span></span><br><span class="line"><span class="variable">$app</span>-&gt;<span class="title function_ invoke__">configureMonologUsing</span>(function (Monolog\Logger <span class="variable">$monolog</span>) &#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">storage_path</span>(<span class="string">&#x27;logs/&#x27;</span> . <span class="title function_ invoke__">php_sapi_name</span>() . <span class="string">&#x27;-&#x27;</span> . <span class="title function_ invoke__">posix_getpwuid</span>(<span class="title function_ invoke__">posix_geteuid</span>())[<span class="string">&#x27;name&#x27;</span>] . <span class="string">&#x27;.log&#x27;</span>);</span><br><span class="line">    <span class="variable">$monolog</span>-&gt;<span class="title function_ invoke__">pushHandler</span>(<span class="variable">$handler</span> = <span class="keyword">new</span> <span class="title class_">Monolog\Handler\RotatingFileHandler</span>(<span class="variable">$filename</span>, <span class="number">60</span>));</span><br><span class="line">    <span class="variable">$handler</span>-&gt;<span class="title function_ invoke__">setFilenameFormat</span>(<span class="string">&#x27;laravel-&#123;date&#125;-&#123;filename&#125;&#x27;</span>, <span class="string">&#x27;Y-m-d&#x27;</span>);</span><br><span class="line">    <span class="variable">$formatter</span> = <span class="keyword">new</span> <span class="title class_">LineFormatter</span>(<span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="variable">$formatter</span>-&gt;<span class="title function_ invoke__">includeStacktraces</span>();</span><br><span class="line">    <span class="variable">$handler</span>-&gt;<span class="title function_ invoke__">setFormatter</span>(<span class="variable">$formatter</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>以 <code>php artisan command</code> 執行或是 crontab 所產生的 log file，其 owner 都會是 <code>root</code>，<br>如果是網站運行時的 Exception 所建立的 log file，則 owner 會是 <code>www-data</code>，符合要的結果。 😄</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ll storage/logs/</span><br><span class="line"></span><br><span class="line">-rw-r--r--. 1 root     root     2652 Apr 24 06:30 laravel-2019-04-24-cli-root.log</span><br><span class="line">-rw-r--r--. 1 www-data www-data  78B Apr 24 04:24 laravel-2019-04-24-fpm-fcgi-www-data.log</span><br></pre></td></tr></table></figure><h3 id="無法得到預期效果的處理方式-failed"><a href="#無法得到預期效果的處理方式-failed" class="headerlink" title="無法得到預期效果的處理方式  failed"></a>無法得到預期效果的處理方式  failed</h3><h4 id="用-www-data-執行"><a href="#用-www-data-執行" class="headerlink" title="用 www-data 執行"></a>用 www-data 執行</h4><p>以 <code>www-data</code> user 運行 <code>php artisan command</code>？</p><p>切換執行的 user 身份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ su www-data</span><br><span class="line"></span><br><span class="line">This account is currently not available.</span><br></pre></td></tr></table></figure><p>查看 <code>www-data</code> user</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /etc/passwd | grep www</span><br><span class="line"></span><br><span class="line">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br></pre></td></tr></table></figure><p>因 <code>/usr/sbin/nologin</code> 的關係，所以無法切換 user，<br>修改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/passwd</span><br><span class="line"></span><br><span class="line">www-data:x:33:33:www-data:/var/www:/bin/bash</span><br></pre></td></tr></table></figure><p>然後以 <code>www-data</code> 身份執行 php artisan 以產生 log file，會得到 owner 為 <code>www-data</code> 的 log file，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ su www-data</span><br><span class="line">$ php artisan <span class="built_in">command</span>:xxxx</span><br><span class="line">$ ll storage/logs/</span><br></pre></td></tr></table></figure><p><strong>BUT</strong> crontab 執行產生的 log file 仍然 root，Orz</p><h4 id="修改-crontab"><a href="#修改-crontab" class="headerlink" title="修改 crontab"></a>修改 crontab</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ crontab -e</span><br><span class="line"></span><br><span class="line">* * * * * /usr/bin/php /home/www/code/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>修改成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * www-data /usr/bin/php /home/www/code/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>然後執行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service cron reload</span><br></pre></td></tr></table></figure><p>結果 cron 無法運作，😳</p><h5 id="可能需要這樣做（未驗證）"><a href="#可能需要這樣做（未驗證）" class="headerlink" title="可能需要這樣做（未驗證）"></a>可能需要這樣做（未驗證）</h5><p>為 <code>www-data</code> 建立自己的 crontab 排程，可參考 [关于 Laravel 日志权限] <a href="https://learnku.com/articles/6775/about-laravel-log-permissions" title="关于 Laravel 日志权限">1</a> 下方留言</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ su www-data</span><br><span class="line">$ crontab -u www-data -e</span><br></pre></td></tr></table></figure><h4 id="放棄測試"><a href="#放棄測試" class="headerlink" title="放棄測試"></a>放棄測試</h4><p>因環境是在 Docker 內，上述的步驟已經無法輕易以撰寫 shell script 達成要的結果，若需要人工介入修改，則不符合使用 Docker 無痛開發原則 XD。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://stackoverflow.com/questions/27674597/laravel-daily-log-created-with-wrong-permissions">Laravel daily log created with wrong permissions</a></li><li><a href="https://laravel.com/docs/5.5/errors#configuration">Laravel 5.5 - Errors &amp; Logging - Configuration</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;Laravel 理當會將發生的例外錯誤（Exception）寫到 &lt;code&gt;storage/logs/laravel-yyyy-mm-dd.log&lt;/code&gt;，但查詢該檔案，卻看不到應有的錯誤內容！&lt;/p&gt;</summary>
    
    
    
    <category term="development" scheme="http://codefun.tw/categories/development/"/>
    
    
    <category term="laravel" scheme="http://codefun.tw/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>如何在 workspace 快速開啟 VS Code 進行編輯</title>
    <link href="http://codefun.tw/2019/2019042301-open-vs-code-from-command-line.html"/>
    <id>http://codefun.tw/2019/2019042301-open-vs-code-from-command-line.html</id>
    <published>2019-04-23T04:19:59.000Z</published>
    <updated>2019-04-23T04:19:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>一定要會的技巧 - 從 command line 直接開啟 VS Code!</p><span id="more"></span><h2 id="操作環境"><a href="#操作環境" class="headerlink" title="操作環境"></a>操作環境</h2><ol><li>macOS: 10.13.6 High Sierra</li><li>iTerm2</li></ol><h2 id="只要四個步驟"><a href="#只要四個步驟" class="headerlink" title="只要四個步驟"></a>只要四個步驟</h2><ol><li>開啟 VS Code，按下快速鍵 <code>command + shift + p</code></li><li>在跳出的對話框命令列後輸入或找到 <code>&gt;Shell Command: Install &#39;code&#39; command in PATH</code></li><li>等待安裝完成後，開啟 iTerm2</li><li>進入 workspace，然後在 command line 輸入 <code>code .</code> 就可以開始使用 VS Code 編輯整個工作目錄了 :)</li></ol><h2 id="參考資料-References"><a href="#參考資料-References" class="headerlink" title="參考資料  References"></a>參考資料  References</h2><ul><li><a href="https://code.visualstudio.com/docs/setup/mac">Visual Studio Code on macOS</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;一定要會的技巧 - 從 command line 直接開啟 VS Code!&lt;/p&gt;</summary>
    
    
    
    <category term="editor" scheme="http://codefun.tw/categories/editor/"/>
    
    
    <category term="vscode" scheme="http://codefun.tw/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>使用 Telnet 測試 TCP Port</title>
    <link href="http://codefun.tw/2019/2019041002-use-telnet-to-test-tcp-port.html"/>
    <id>http://codefun.tw/2019/2019041002-use-telnet-to-test-tcp-port.html</id>
    <published>2019-04-10T11:11:56.000Z</published>
    <updated>2019-04-10T11:11:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>想知道遠端 port 是否由開通，使用 telnet 測試就對了！</p><span id="more"></span><h2 id="安裝-Telnet"><a href="#安裝-Telnet" class="headerlink" title="安裝 Telnet"></a>安裝 Telnet</h2><p>在 Mac 下使用 <code>Homebrew</code> 安裝</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install telnet</span><br></pre></td></tr></table></figure><h2 id="測試遠端-port"><a href="#測試遠端-port" class="headerlink" title="測試遠端 port"></a>測試遠端 port</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ telnet 172.28.7.100 80</span><br><span class="line"></span><br><span class="line">Trying 172.28.7.100...</span><br><span class="line">Connected to 172.28.7.100.</span><br><span class="line">Escape character is <span class="string">&#x27;^]&#x27;</span>.</span><br></pre></td></tr></table></figure><p>遠端連線成功，表示 80 port 已開啟。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ telnet 172.28.7.100 25</span><br><span class="line"></span><br><span class="line">Trying 172.28.7.100...</span><br><span class="line">telnet: connect to address 172.28.7.100: Connection refused</span><br><span class="line">telnet: Unable to connect to remote host</span><br></pre></td></tr></table></figure><p>遠端拒絕連線，表示 25 port 未開啟。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://blog.gtwang.org/linux/troubleshooting-telnet/">使用 Telnet 診斷各種伺服器與網路連線問題</a></li><li><a href="https://netbeez.net/blog/telnet-to-test-connectivity-to-tcp/">How to use telnet to test connectivity to TCP ports</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;想知道遠端 port 是否由開通，使用 telnet 測試就對了！&lt;/p&gt;</summary>
    
    
    
    <category term="development" scheme="http://codefun.tw/categories/development/"/>
    
    
    <category term="telnet" scheme="http://codefun.tw/tags/telnet/"/>
    
  </entry>
  
  <entry>
    <title>HAProxy 負載模式設定</title>
    <link href="http://codefun.tw/2019/2019041001-haproxy-configuration-balance.html"/>
    <id>http://codefun.tw/2019/2019041001-haproxy-configuration-balance.html</id>
    <published>2019-04-10T07:47:29.000Z</published>
    <updated>2019-04-10T07:47:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="情境"><a href="#情境" class="headerlink" title="情境"></a>情境</h2><p>某天收到客戶端提出帳號登入後，只要登出後，就無法再登入了。這情況在專案驗收後一段時間都未發生，而是在客戶的網管單位進行了重設網路存取設定後才發生。</p> <span id="more"></span><h2 id="部署架構及驗證"><a href="#部署架構及驗證" class="headerlink" title="部署架構及驗證"></a>部署架構及驗證</h2><p>部署架構，</p><ol><li>Web server * 2</li><li>HAProxy * 2</li><li>DB server * 3 （以 db cluster 方式部署）</li><li>登入採用 JWT 方式</li></ol><p>同樣的設定及部署方式，包含程式設計、Web 及 DB 的部署，在其他二個地方都沒有發生（攤手<br>但基於某些因素，無法直接請客戶的網管單位協助（Orz</p><h2 id="只是一個設定值，結果大不同"><a href="#只是一個設定值，結果大不同" class="headerlink" title="只是一個設定值，結果大不同"></a>只是一個設定值，結果大不同</h2><p>由原建置 HAProxy 的同事提出，更改 balance 參數值，讓同一來源的 client 可以持續訪問同一 web server，或許可以解決（吧？</p><h3 id="修改-config-file"><a href="#修改-config-file" class="headerlink" title="修改 config file"></a>修改 config file</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/haproxy/haproxy.cnf</span><br></pre></td></tr></table></figure><p>找到 web server 相關的設定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">listen webserver</span><br><span class="line">    <span class="built_in">bind</span> 172.28.7.100:80 transparent</span><br><span class="line">    balance roundrobin</span><br><span class="line">    mode http</span><br><span class="line">    server web1 192.168.99.244:8080 check fall 5 inter 2000 rise 2</span><br><span class="line">    server web2 192.168.99.245:8080 check fall 5 inter 2000 rise 2</span><br></pre></td></tr></table></figure><blockquote><p>balance source<br>Of these options only the “balance source” requires any real discusion. This method will ensure that a request from the IP address 1.2.3.4 will always go to the same backend, assuming it remains alive. This allows you to sidestep any issues with cookie persistence if sessions are stored locally.</p></blockquote><p>將 <code>balance roundrobin</code> 修改成 <code>balance source</code>，再重啓 HAProxy</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl restart haproxy</span><br></pre></td></tr></table></figure><p>檢查 HAProxy 是否正常運作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl status haproxy</span><br></pre></td></tr></table></figure><p>二個 HAProxy 服務都進行了以上修改，就解決了！！</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://cbonte.github.io/haproxy-dconv/2.0/configuration.html#balance">HAProxy Documentation - Configuration Manual - balance</a></li><li><a href="https://ssorc.tw/5937">HAProxy 實現 load balance 負載平衡</a></li><li><a href="http://network.51cto.com/art/201108/286178.htm">HAProxy负载均衡器的配置与算法</a></li><li><a href="http://benjr.tw/95644">HAProxy 負載模式</a></li><li><a href="https://blog.51cto.com/jinyudong/1910320">Haproxy的三种保持客户端会话保持方式</a></li><li><a href="https://segmentfault.com/a/1190000012745434">基于Cookie的Haproxy防止过速请求的方法</a></li><li><a href="https://www.suse.com/zh-tw/documentation/sle-ha-12/book_sleha/data/sec_ha_lb_haproxy.html">使用 HAProxy 設定負載平衡</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;情境&quot;&gt;&lt;a href=&quot;#情境&quot; class=&quot;headerlink&quot; title=&quot;情境&quot;&gt;&lt;/a&gt;情境&lt;/h2&gt;&lt;p&gt;某天收到客戶端提出帳號登入後，只要登出後，就無法再登入了。這情況在專案驗收後一段時間都未發生，而是在客戶的網管單位進行了重設網路存取設定後才發生。&lt;/p&gt;</summary>
    
    
    
    <category term="architecture" scheme="http://codefun.tw/categories/architecture/"/>
    
    
    <category term="haproxy" scheme="http://codefun.tw/tags/haproxy/"/>
    
  </entry>
  
  <entry>
    <title>iTerm2 + oh-my-zsh = 好用的終端機</title>
    <link href="http://codefun.tw/2019/2019011001-osx-iterm-2-oh-my-zsh.html"/>
    <id>http://codefun.tw/2019/2019011001-osx-iterm-2-oh-my-zsh.html</id>
    <published>2019-01-10T04:58:42.000Z</published>
    <updated>2019-01-10T04:58:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://www.iterm2.com/">iTerm2</a> 是 macOS 下好用的 terminal 軟體，在 iTerm2 下安裝 <a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a> 以打造個人專屬酷炫好用的 zsh command line 環境 :)</p> <span id="more"></span><h2 id="安裝-iTerm2"><a href="#安裝-iTerm2" class="headerlink" title="安裝 iTerm2"></a>安裝 iTerm2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">brew tap caskroom/cask</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">brew cask instal iterm2</span></span><br><span class="line">==&gt; Satisfying dependencies</span><br><span class="line">==&gt; Downloading https://iterm2.com/downloads/stable/iTerm2-3_2_0.zip</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Verifying SHA-256 checksum for Cask &#x27;iterm2&#x27;.</span><br><span class="line">==&gt; Installing Cask iterm2</span><br><span class="line">==&gt; Moving App &#x27;iTerm.app&#x27; to &#x27;/Applications/iTerm.app&#x27;.</span><br><span class="line">🍺  iterm2 was successfully installed!</span><br></pre></td></tr></table></figure><h2 id="設定-iTerm2"><a href="#設定-iTerm2" class="headerlink" title="設定 iTerm2"></a>設定 iTerm2</h2><h3 id="設定-Terminal-顏色"><a href="#設定-Terminal-顏色" class="headerlink" title="設定 Terminal 顏色"></a>設定 Terminal 顏色</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Preferences &gt; Profiles &gt; Terminal &gt; Report Terminal Type</span><br></pre></td></tr></table></figure><p>設定成  <code>xterm-256color</code>。</p><h3 id="修改-color-scheme"><a href="#修改-color-scheme" class="headerlink" title="修改 color scheme"></a>修改 color scheme</h3><p>從 <a href="https://github.com/mbadolato/iTerm2-Color-Schemes">mbadolato&#x2F;iTerm2-Color-Schemes</a> 下載 <code>Solarized Dark - Patched.itermcolors</code>，然後再從</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Preferences &gt; Profiles &gt; Colors &gt; Color Presets...</span><br></pre></td></tr></table></figure><p>按 <code>import…</code> 將它載入，再從 <code>Color Presets…</code> 選定 <code>Solarized Dark - Patched.itermcolors</code> 作為 iTerm2 的 theme。</p><h2 id="字型管理"><a href="#字型管理" class="headerlink" title="字型管理"></a>字型管理</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">brew tap caskroom/fonts</span></span><br><span class="line"></span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Auto-updated Homebrew!</span><br><span class="line">Updated 1 tap (homebrew/core).</span><br><span class="line">==&gt; Updated Formulae</span><br><span class="line">pulumi</span><br><span class="line"></span><br><span class="line">==&gt; Tapping homebrew/cask-fonts</span><br><span class="line">Cloning into &#x27;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask-fonts&#x27;...</span><br><span class="line">remote: Counting objects: 1198, done.</span><br><span class="line">remote: Compressing objects: 100% (729/729), done.</span><br><span class="line">remote: Total 1198 (delta 762), reused 571 (delta 466), pack-reused 0</span><br><span class="line">Receiving objects: 100% (1198/1198), 228.83 KiB | 134.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (762/762), done.</span><br><span class="line">Tapped 1175 casks (1,215 files, 1MB).</span><br></pre></td></tr></table></figure><h3 id="安裝-powerline-font-字型"><a href="#安裝-powerline-font-字型" class="headerlink" title="安裝 powerline font 字型"></a>安裝 powerline font 字型</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">brew cask install font-sourcecodepro-nerd-font</span></span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Tapping homebrew/cask</span><br><span class="line">Cloning into &#x27;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask&#x27;...</span><br><span class="line">remote: Counting objects: 4139, done.</span><br><span class="line">remote: Compressing objects: 100% (4126/4126), done.</span><br><span class="line">remote: Total 4139 (delta 25), reused 624 (delta 10), pack-reused 0</span><br><span class="line">Receiving objects: 100% (4139/4139), 1.30 MiB | 1.36 MiB/s, done.</span><br><span class="line">Resolving deltas: 100% (25/25), done.</span><br><span class="line">Tapped 1 command and 4041 casks (4,148 files, 4.1MB).</span><br><span class="line">==&gt; Satisfying dependencies</span><br><span class="line">==&gt; Downloading https://github.com/ryanoasis/nerd-fonts/releases/download/v2.0.0</span><br><span class="line">==&gt; Downloading from https://github-production-release-asset-2e65be.s3.amazonaws</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Verifying SHA-256 checksum for Cask &#x27;font-sourcecodepro-nerd-font&#x27;.</span><br><span class="line">==&gt; Installing Cask font-sourcecodepro-nerd-font</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Light Italic Nerd Font Complete.ttf&#x27; to &#x27;/Users/</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Bold Italic Nerd Font Complete.ttf&#x27; to &#x27;/Users/j</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Medium Nerd Font Complete.ttf&#x27; to &#x27;/Users/jerry/</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Medium Italic Nerd Font Complete.ttf&#x27; to &#x27;/Users</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro ExtraLight Nerd Font Complete.ttf&#x27; to &#x27;/Users/je</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro ExtraLight Italic Nerd Font Complete.ttf&#x27; to &#x27;/U</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Black Nerd Font Complete.ttf&#x27; to &#x27;/Users/jerry/L</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Black Italic Nerd Font Complete.ttf&#x27; to &#x27;/Users/</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Nerd Font Complete.ttf&#x27; to &#x27;/Users/jerry/Library</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Semibold Nerd Font Complete.ttf&#x27; to &#x27;/Users/jerr</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Semibold Italic Nerd Font Complete.ttf&#x27; to &#x27;/Use</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Light Nerd Font Complete.ttf&#x27; to &#x27;/Users/jerry/L</span><br><span class="line">==&gt; Moving Font &#x27;Sauce Code Pro Bold Nerd Font Complete.ttf&#x27; to &#x27;/Users/jerry/Li</span><br><span class="line">🍺  font-sourcecodepro-nerd-font was successfully installed!</span><br></pre></td></tr></table></figure><h3 id="iTerm2-設定"><a href="#iTerm2-設定" class="headerlink" title="iTerm2 設定"></a>iTerm2 設定</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Preferences &gt; Profiles &gt; Text &gt; Change Font</span><br></pre></td></tr></table></figure><p>選擇 <code>SauceCodePro Nerd Font</code>。</p><p>查詢其他 nerd 字型，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">brew cask search nerd</span></span><br></pre></td></tr></table></figure><h2 id="安裝-zsh"><a href="#安裝-zsh" class="headerlink" title="安裝 zsh"></a>安裝 zsh</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">brew install zsh</span></span><br><span class="line"></span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/zsh-5.6.2.high_sierra.bottl</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Pouring zsh-5.6.2.high_sierra.bottle.tar.gz</span><br><span class="line">🍺  /usr/local/Cellar/zsh/5.6.2: 1,478 files, 12.8MB</span><br></pre></td></tr></table></figure><h3 id="設為預設的-shell"><a href="#設為預設的-shell" class="headerlink" title="設為預設的 shell"></a>設為預設的 shell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo sh -c <span class="string">&quot;echo <span class="subst">$(which zsh)</span> &gt;&gt; /etc/shells&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">chsh -s $(<span class="built_in">which</span> zsh)</span></span><br></pre></td></tr></table></figure><h3 id="安裝-oh-my-zsh"><a href="#安裝-oh-my-zsh" class="headerlink" title="安裝 oh-my-zsh"></a>安裝 oh-my-zsh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span></span><br><span class="line"></span><br><span class="line">Cloning Oh My Zsh...</span><br><span class="line">Cloning into &#x27;/Users/jerry/.oh-my-zsh&#x27;...</span><br><span class="line">remote: Counting objects: 898, done.</span><br><span class="line">remote: Compressing objects: 100% (754/754), done.</span><br><span class="line">remote: Total 898 (delta 25), reused 732 (delta 17), pack-reused 0</span><br><span class="line">Receiving objects: 100% (898/898), 595.72 KiB | 755.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (25/25), done.</span><br><span class="line">Looking for an existing zsh config...</span><br><span class="line">Found ~/.zshrc. Backing up to ~/.zshrc.pre-oh-my-zsh</span><br><span class="line">Using the Oh My Zsh template file and adding it to ~/.zshrc</span><br><span class="line">         __                                     __</span><br><span class="line">  ____  / /_     ____ ___  __  __   ____  _____/ /_</span><br><span class="line"> / __ \/ __ \   / __ `__ \/ / / /  /_  / / ___/ __ \</span><br><span class="line">/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /</span><br><span class="line">\____/_/ /_/  /_/ /_/ /_/\__, /    /___/____/_/ /_/</span><br><span class="line">                        /____/                       ....is now installed!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Please look over the ~/.zshrc file to select plugins, themes, and options.</span><br><span class="line"></span><br><span class="line">p.s. Follow us at https://twitter.com/ohmyzsh.</span><br><span class="line"></span><br><span class="line">p.p.s. Get stickers and t-shirts at https://shop.planetargon.com.</span><br></pre></td></tr></table></figure><p>安裝完成後會建立資料夾 <code>~/.oh-my-zsh</code></p><h3 id="套用主題"><a href="#套用主題" class="headerlink" title="套用主題"></a>套用主題</h3><p><strong>1. 開啟 <code>.zshrc</code></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim ~/.zshrc</span></span><br></pre></td></tr></table></figure><p><strong>2. 套用主題</strong></p><p>預設風格為 <code>ZSH_THEME=&quot;robbyrussell&quot;</code>，修改如下，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 使用agnoster主題預設為robbyrussell</span></span></span><br><span class="line">ZSH_THEME=&quot;agnoster&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 隱藏用戶名稱(user@hostname)</span></span></span><br><span class="line">DEFAULT_USER=`id -un`</span><br></pre></td></tr></table></figure><p><strong>3. 立即套用</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">exec</span> <span class="variable">$SHELL</span></span></span><br></pre></td></tr></table></figure><h2 id="安裝-powerlevel9k-主題"><a href="#安裝-powerlevel9k-主題" class="headerlink" title="安裝 powerlevel9k 主題"></a>安裝 powerlevel9k 主題</h2><p><strong>1. 下載 powerlevel9k</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k</span></span><br><span class="line"></span><br><span class="line">Cloning into &#x27;/Users/jerry/.oh-my-zsh/custom/themes/powerlevel9k&#x27;...</span><br><span class="line">remote: Enumerating objects: 29, done.</span><br><span class="line">remote: Counting objects: 100% (29/29), done.</span><br><span class="line">remote: Compressing objects: 100% (23/23), done.</span><br><span class="line">remote: Total 6963 (delta 7), reused 16 (delta 6), pack-reused 6934</span><br><span class="line">Receiving objects: 100% (6963/6963), 1.96 MiB | 881.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (4447/4447), done.</span><br></pre></td></tr></table></figure><p><strong>2. 套用</strong></p><p>修改 <code>~/.zshrc</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用powerlevel9k主題亦可選擇使用agnoster或預設robbyrussell</span></span><br><span class="line">ZSH_THEME=&quot;powerlevel9k/powerlevel9k&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">隱藏用戶名稱(user@hostname)</span></span><br><span class="line">DEFAULT_USER=`id -un`</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">含有icon的字型</span></span><br><span class="line">POWERLEVEL9K_MODE=&#x27;nerdfont-complete&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">command</span> line 左邊想顯示的內容(資料夾路徑、資料夾讀寫狀態、版本控制資訊)</span></span><br><span class="line">POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir dir_writable vcs) # &lt;= left prompt 設了 &quot;dir&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">command</span> line 右邊想顯示的內容(狀態、RAM、CPU、時間)</span></span><br><span class="line">POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status ram load time)</span><br><span class="line">POWERLEVEL9K_PROMPT_ON_NEWLINE=true</span><br></pre></td></tr></table></figure><p>其他顯示指令可參考 <a href="https://github.com/bhilburn/powerlevel9k#available-prompt-segments">Available Prompt Segments</a></p><h2 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h2><h3 id="安裝-zsh-completions"><a href="#安裝-zsh-completions" class="headerlink" title="安裝 zsh-completions"></a>安裝 zsh-completions</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">brew install zsh-completions</span></span><br><span class="line"></span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Auto-updated Homebrew!</span><br><span class="line">Updated 2 taps (homebrew/core, homebrew/cask).</span><br><span class="line">==&gt; Updated Formulae</span><br><span class="line">ark               bullet            hapi-fhir-cli     nano              prettier          rustup-init       vips</span><br><span class="line">bind              convox            libphonenumber    ntopng            qt                skaffold          xcodegen</span><br><span class="line"></span><br><span class="line">==&gt; Downloading https://github.com/zsh-users/zsh-completions/archive/0.28.0.tar.gz</span><br><span class="line">==&gt; Downloading from https://codeload.github.com/zsh-users/zsh-completions/tar.gz/0.28.0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Caveats</span><br><span class="line">To activate these completions, add the following to your .zshrc:</span><br><span class="line"></span><br><span class="line">  fpath=(/usr/local/share/zsh-completions $fpath)</span><br><span class="line"></span><br><span class="line">You may also need to force rebuild `zcompdump`:</span><br><span class="line"></span><br><span class="line">  rm -f ~/.zcompdump; compinit</span><br><span class="line"></span><br><span class="line">Additionally, if you receive &quot;zsh compinit: insecure directories&quot; warnings when attempting</span><br><span class="line">to load these completions, you may need to run this:</span><br><span class="line"></span><br><span class="line">  chmod go-w &#x27;/usr/local/share&#x27;</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/local/Cellar/zsh-completions/0.28.0: 145 files, 1MB, built in 9 seconds</span><br></pre></td></tr></table></figure><p>修改 <code>~/.zshrc</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">ZSH=$HOME/.oh-my-zsh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">zsh-completions</span></span><br><span class="line">fpath=(/usr/local/share/zsh-completions $fpath)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Rebuild <code>.zcompdump</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">rm</span> -f ~/.zcompdump; compinit</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="安裝-zsh-autosuggestions"><a href="#安裝-zsh-autosuggestions" class="headerlink" title="安裝 zsh-autosuggestions"></a>安裝 zsh-autosuggestions</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span></span><br><span class="line"></span><br><span class="line">Cloning into &#x27;/Users/jerry/.oh-my-zsh/custom/plugins/zsh-autosuggestions&#x27;...</span><br><span class="line">remote: Counting objects: 1783, done.</span><br><span class="line">remote: Total 1783 (delta 0), reused 0 (delta 0), pack-reused 1783</span><br><span class="line">Receiving objects: 100% (1783/1783), 394.96 KiB | 267.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (1126/1126), done.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-users&#x2F;zsh-autosuggestions</a> - Fish-like autosuggestions for zsh</p><h3 id="安裝-autojump"><a href="#安裝-autojump" class="headerlink" title="安裝 autojump"></a>安裝 autojump</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">brew install autojump</span></span><br><span class="line"></span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Auto-updated Homebrew!</span><br><span class="line">Updated 2 taps (homebrew/core, homebrew/cask).</span><br><span class="line">==&gt; Updated Formulae</span><br><span class="line">git-archive-all</span><br><span class="line"></span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/autojump-22.5.1.high_sierra.bottle.tar.gz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################################################################### 100.0%</span></span></span><br><span class="line">==&gt; Pouring autojump-22.5.1.high_sierra.bottle.tar.gz</span><br><span class="line">==&gt; Caveats</span><br><span class="line">Add the following line to your ~/.bash_profile or ~/.zshrc file (and remember</span><br><span class="line">to source the file to update your current session):</span><br><span class="line">  [ -f /usr/local/etc/profile.d/autojump.sh ] &amp;&amp; . /usr/local/etc/profile.d/autojump.sh</span><br><span class="line"></span><br><span class="line">If you use the Fish shell then add the following line to your ~/.config/fish/config.fish:</span><br><span class="line">  [ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish</span><br><span class="line"></span><br><span class="line">zsh completions have been installed to:</span><br><span class="line">  /usr/local/share/zsh/site-functions</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/local/Cellar/autojump/22.5.1: 20 files, 168.2KB</span><br></pre></td></tr></table></figure><p><a href="https://github.com/wting">wting&#x2F;autojump</a> - A cd command that learns - easily navigate directories from the command line</p><h3 id="啟用-plugin"><a href="#啟用-plugin" class="headerlink" title="啟用 plugin"></a>啟用 plugin</h3><p>oh-my-zsh 內建的 plugin 都放在 <code>~/.oh-my-zsh/plugins</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> ~/.oh-my-zsh/plugins</span></span><br></pre></td></tr></table></figure><p>修改 <code>.zshrc</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plugins=(git autojump zsh-autosuggestions)</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://medium.com/statementdog-engineering/prettify-your-zsh-command-line-prompt-3ca2acc967f">超簡單！十分鐘打造漂亮又好用的 zsh command line 環境</a></li><li><a href="https://andy6804tw.github.io/2018/01/01/iterm2-zsh-intro/#%E5%A5%97%E7%94%A8%E4%B8%BB%E9%A1%8C">macOS好用的終端機(iterm2+zsh+oh-my-zsh)</a></li><li><a href="http://huli.logdown.com/posts/402147-iterm2-zsh-better-environment">[心得] iTerm2 + zsh，打造更好的工作環境</a></li><li><a href="https://code.tutsplus.com/tutorials/how-to-customize-your-command-prompt--net-24083">How to Customize Your Command Prompt</a></li><li>oh-my-zsh 的 <a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes">Themes</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.iterm2.com/&quot;&gt;iTerm2&lt;/a&gt; 是 macOS 下好用的 terminal 軟體，在 iTerm2 下安裝 &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;oh-my-zsh&lt;/a&gt; 以打造個人專屬酷炫好用的 zsh command line 環境 :)&lt;/p&gt;</summary>
    
    
    
    <category term="macos" scheme="http://codefun.tw/categories/macos/"/>
    
    
    <category term="iterm2" scheme="http://codefun.tw/tags/iterm2/"/>
    
    <category term="zsh" scheme="http://codefun.tw/tags/zsh/"/>
    
    <category term="oh-my-zsh" scheme="http://codefun.tw/tags/oh-my-zsh/"/>
    
  </entry>
  
  <entry>
    <title>使用 git mv 解決 macOS 預設對檔案不分大小寫問題</title>
    <link href="http://codefun.tw/2018/2018030201-macos-correct-case-sentitive.html"/>
    <id>http://codefun.tw/2018/2018030201-macos-correct-case-sentitive.html</id>
    <published>2018-03-02T02:14:53.000Z</published>
    <updated>2018-03-02T02:14:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>macOS 的 Disk 預設對檔案是不分大小寫的，當程式部署到 linux 下，才會知道有大小寫錯誤問題。</p> <span id="more"></span><h2 id="使用-git-mv-指令進行修正"><a href="#使用-git-mv-指令進行修正" class="headerlink" title="使用 git mv 指令進行修正"></a>使用 <code>git mv</code> 指令進行修正</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># way 1</span><br><span class="line">$ git mv --force filename Filename</span><br><span class="line">$ git commit -m &quot;Set correct case for filename&quot;</span><br><span class="line"></span><br><span class="line"># way 2</span><br><span class="line">$ git mv filename tmp_filename</span><br><span class="line">$ git mv tmp_filename Filename</span><br><span class="line">$ git commit -m &quot;Set correct case for filename&quot;</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://coderwall.com/p/mgi8ja/case-sensitive-git-in-mac-os-x-like-a-pro">Case-sensitive git in Mac OS X like a Pro</a> - 文章有提到，外接一個 disk，並且格式化成 “Mac OS Extended (Case-sensitive, Journaled)”，就不會有這樣的困擾。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;macOS 的 Disk 預設對檔案是不分大小寫的，當程式部署到 linux 下，才會知道有大小寫錯誤問題。&lt;/p&gt;</summary>
    
    
    
    <category term="macos" scheme="http://codefun.tw/categories/macos/"/>
    
    
    <category term="git" scheme="http://codefun.tw/tags/git/"/>
    
    <category term="macos" scheme="http://codefun.tw/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>docker-compose 開發環境，如何建立 storage 的 symbolic link？</title>
    <link href="http://codefun.tw/2017/2017110701-create-laravel-storage-symbolic-link-docker.html"/>
    <id>http://codefun.tw/2017/2017110701-create-laravel-storage-symbolic-link-docker.html</id>
    <published>2017-11-07T07:10:08.000Z</published>
    <updated>2017-11-07T07:10:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>團隊使用 <code>docker-compose</code> 建立開發環境，方便前端工程師在不安裝 PHP 及 MySQL 的情況下也可以進行基於 Laravel framework 的專案開發。<br>但問題剛好發生在使用 <a href="https://laravel.com/docs/5.5/filesystem">Laravel File Storage</a> 存放的圖片檔，無法通過 Browser 瀏覽。查到的原因是 <a href="https://laravel.com/docs/5.5/filesystem#configuration"><code>storage</code></a> 這個 symbolic link 的指向錯誤了。<br>目前找到的解法是手動進入到 docker 的 nginx container 後再建立。而<strong>不是</strong>直接使用 <code>$ php artisan storage:link</code></p> <span id="more"></span><h2 id="操作步驟"><a href="#操作步驟" class="headerlink" title="操作步驟"></a>操作步驟</h2><ol><li><p>移除工作目錄下的 <code>public/storage</code> 這個 symbolic link</p></li><li><p>找到 docker 的 nginx 容器 CONTAINER ID</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE                           COMMAND                  CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">baba480659ee        nginx:latest                    &quot;nginx -g &#x27;daemon ...&quot;   16 minutes ago      Up 16 minutes       0.0.0.0:80-&gt;80/tcp       hpclaravelpaganinipluscom_web_1</span><br></pre></td></tr></table></figure></li><li><p>進入 docker 的 nginx 容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker exec -ti &#123;CONTAINER ID&#125; bash</span><br></pre></td></tr></table></figure></li><li><p>在 docker 的 nginx 容器執行 symbolic link 的建立</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ln -s /code/storage/app/public /code/public/storage</span><br></pre></td></tr></table></figure></li><li><p>檢查建立的結果是否正確</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l</span><br><span class="line">drwxr-xr-x 13 root root  442 Nov  7 06:28 assets</span><br><span class="line">drwxr-xr-x 24 root root  816 Oct 26 04:08 css</span><br><span class="line">-rw-r--r--  1 root root 5430 Oct 26 04:08 favicon.ico</span><br><span class="line">drwxr-xr-x 13 root root  442 Nov  7 04:49 images</span><br><span class="line">-rw-r--r--  1 root root 1823 Sep 19 04:07 index.php</span><br><span class="line">drwxr-xr-x  6 root root  204 Oct 26 04:08 js</span><br><span class="line">-rw-r--r--  1 root root   24 Sep 19 04:07 robots.txt</span><br><span class="line">lrwxrwxrwx  1 root root   24 Nov  7 06:31 storage -&gt; /code/storage/app/public</span><br><span class="line">drwxr-xr-x 10 root root  340 Oct 26 04:08 vendor</span><br><span class="line">-rw-r--r--  1 root root  914 Sep 19 04:07 web.config</span><br><span class="line">drwxr-xr-x  5 root root  170 Nov  7 01:32 yaml</span><br></pre></td></tr></table></figure></li><li><p>Browser 開啟圖片網站，例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/storage/4BWGjwW0p6iENjseaHZphhorGBUJTPkd888oiMNh.jpeg</span><br></pre></td></tr></table></figure></li></ol><h2 id="參考資料-References"><a href="#參考資料-References" class="headerlink" title="參考資料  References"></a>參考資料  References</h2><ul><li><a href="https://laravel.com/docs/5.5/filesystem">Laravel File Storage</a></li><li><a href="https://philipzheng.gitbooks.io/docker_practice/content/container/enter.html">《Docker —— 從入門到實踐》正體中文版 - 進入容器</a></li><li><a href="https://docs.docker.com/engine/reference/commandline/exec/#run-docker-exec-on-a-running-container">docker docs - Run docker exec on a running container</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;團隊使用 &lt;code&gt;docker-compose&lt;/code&gt; 建立開發環境，方便前端工程師在不安裝 PHP 及 MySQL 的情況下也可以進行基於 Laravel framework 的專案開發。&lt;br&gt;但問題剛好發生在使用 &lt;a href=&quot;https://laravel.com/docs/5.5/filesystem&quot;&gt;Laravel File Storage&lt;/a&gt; 存放的圖片檔，無法通過 Browser 瀏覽。查到的原因是 &lt;a href=&quot;https://laravel.com/docs/5.5/filesystem#configuration&quot;&gt;&lt;code&gt;storage&lt;/code&gt;&lt;/a&gt; 這個 symbolic link 的指向錯誤了。&lt;br&gt;目前找到的解法是手動進入到 docker 的 nginx container 後再建立。而&lt;strong&gt;不是&lt;/strong&gt;直接使用 &lt;code&gt;$ php artisan storage:link&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="docker" scheme="http://codefun.tw/categories/docker/"/>
    
    
    <category term="laravel" scheme="http://codefun.tw/tags/laravel/"/>
    
    <category term="docker" scheme="http://codefun.tw/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>在 vs code 使用 php cs fixer 進行 coding style 的格式修正</title>
    <link href="http://codefun.tw/2017/2017102302-vscode-extension-php-cs-fixer.html"/>
    <id>http://codefun.tw/2017/2017102302-vscode-extension-php-cs-fixer.html</id>
    <published>2017-10-23T12:17:00.000Z</published>
    <updated>2019-08-07T01:26:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 vs code 中，使用 PSR1、PSR2 及 Symfony 的 Coding Style 進行格式修正。</p><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><ol><li><p>在 command line 使用 homebrew 安裝 php cs fixer</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install php-cs-fixer</span><br></pre></td></tr></table></figure> <span id="more"></span></li><li><p>在 vs code 安裝 extension - 由 junstyle 開發的 php cs fixer，extension_id <code>junstyle.php-cs-fixer</code></p></li><li><p>其他安裝方式可參考 <a href="https://github.com/FriendsOfPHP/PHP-CS-Fixer#installation">Install guide</a></p></li></ol><h2 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h2><ol><li><p>快速鍵 <code>cmd + shift + p</code> 後輸入 <code>workspace settings</code> 貼上</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;php.suggest.basic&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php.validate.executablePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;php&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.executablePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;php-cs-fixer&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.executablePathWindows&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span>   <span class="comment">//eg: php-cs-fixer.bat</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.onsave&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.rules&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.config&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.php_cs&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.allowRisky&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.pathMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;override&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.autoFixByBracket&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.autoFixBySemicolon&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.formatHtml&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;php-cs-fixer.documentFormattingProvider&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p> 說明：</p><ul><li><code>&quot;php-cs-fixer.onsave&quot;: true,</code>: true 為存檔時即執行。我個人習慣是設定成 false，在確定程式沒問題後才執行檢查，因此必須按右鍵，再從選單中點擊「Format Document」進行檢查。</li><li><code>&quot;php-cs-fixer.rules&quot;: &quot;&quot;,</code>: 留空字串</li><li><code>&quot;php-cs-fixer.config&quot;: &quot;.php_cs&quot;,</code>: 使用 project root path 下的 config file 最為 formating 基準</li></ul></li><li><p>在 project root 新增檔案 <code>.php_cs</code>，內容如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$header</span> = &lt;&lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">This file is part of PHP CS Fixer.</span><br><span class="line"></span><br><span class="line">(c) Fabien Potencier &lt;fabien@symfony.com&gt;</span><br><span class="line">    Dariusz Rumiński &lt;dariusz.ruminski@gmail.com&gt;</span><br><span class="line"></span><br><span class="line">This source file is subject to the MIT license that is bundled</span><br><span class="line">with this source code in the file LICENSE.</span><br><span class="line">EOF;</span><br><span class="line"></span><br><span class="line"><span class="variable">$finder</span> = <span class="title class_">PhpCsFixer\Finder</span>::<span class="title function_ invoke__">create</span>()</span><br><span class="line">    -&gt;<span class="title function_ invoke__">exclude</span>(<span class="string">&#x27;tests/Fixtures&#x27;</span>)</span><br><span class="line">    -&gt;<span class="title function_ invoke__">in</span>(<span class="keyword">__DIR__</span>)</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="variable">$config</span> = <span class="title class_">PhpCsFixer\Config</span>::<span class="title function_ invoke__">create</span>()</span><br><span class="line">    -&gt;<span class="title function_ invoke__">setRiskyAllowed</span>(<span class="literal">true</span>)</span><br><span class="line">    -&gt;<span class="title function_ invoke__">setRules</span>([</span><br><span class="line">        <span class="string">&#x27;@PHP56Migration&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;@PHPUnit60Migration:risky&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;@PSR1&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;@PSR2&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;@Symfony&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;@Symfony:risky&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;align_multiline_comment&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;array_indentation&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;array_syntax&#x27;</span> =&gt; [<span class="string">&#x27;syntax&#x27;</span> =&gt; <span class="string">&#x27;short&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;blank_line_before_statement&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;binary_operator_spaces&#x27;</span> =&gt; [</span><br><span class="line">            <span class="string">&#x27;align_double_arrow&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&#x27;align_equals&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;combine_consecutive_issets&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;combine_consecutive_unsets&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;comment_to_phpdoc&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;compact_nullable_typehint&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;concat_space&#x27;</span> =&gt; [<span class="string">&#x27;spacing&#x27;</span> =&gt; <span class="string">&#x27;one&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;escape_implicit_backslashes&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;explicit_indirect_variable&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;explicit_string_variable&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;final_internal_class&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;fully_qualified_strict_types&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;function_to_constant&#x27;</span> =&gt; [<span class="string">&#x27;functions&#x27;</span> =&gt; [<span class="string">&#x27;get_class&#x27;</span>, <span class="string">&#x27;get_called_class&#x27;</span>, <span class="string">&#x27;php_sapi_name&#x27;</span>, <span class="string">&#x27;phpversion&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>]],</span><br><span class="line">        //<span class="string">&#x27;header_comment&#x27;</span> =&gt; [<span class="string">&#x27;header&#x27;</span> =&gt; <span class="variable">$header</span>],</span><br><span class="line">        <span class="string">&#x27;heredoc_to_nowdoc&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;increment_style&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&#x27;list_syntax&#x27;</span> =&gt; [<span class="string">&#x27;syntax&#x27;</span> =&gt; <span class="string">&#x27;short&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;logical_operators&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;method_argument_space&#x27;</span> =&gt; [<span class="string">&#x27;on_multiline&#x27;</span> =&gt; <span class="string">&#x27;ensure_fully_multiline&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;method_chaining_indentation&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;multiline_comment_opening_closing&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_alternative_syntax&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_binary_string&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_extra_blank_lines&#x27;</span> =&gt; [<span class="string">&#x27;tokens&#x27;</span> =&gt; [<span class="string">&#x27;break&#x27;</span>, <span class="string">&#x27;continue&#x27;</span>, <span class="string">&#x27;extra&#x27;</span>, <span class="string">&#x27;return&#x27;</span>, <span class="string">&#x27;throw&#x27;</span>, <span class="string">&#x27;use&#x27;</span>, <span class="string">&#x27;parenthesis_brace_block&#x27;</span>, <span class="string">&#x27;square_brace_block&#x27;</span>, <span class="string">&#x27;curly_brace_block&#x27;</span>]],</span><br><span class="line">        <span class="string">&#x27;no_null_property_initialization&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_short_echo_tag&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_superfluous_elseif&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_unneeded_curly_braces&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_unneeded_final_method&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_unreachable_default_argument_value&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_unset_on_property&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_useless_else&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;no_useless_return&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;ordered_class_elements&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;ordered_imports&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;php_unit_internal_class&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;php_unit_ordered_covers&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;php_unit_set_up_tear_down_visibility&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;php_unit_strict&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;php_unit_test_annotation&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;php_unit_test_case_static_method_calls&#x27;</span> =&gt; [<span class="string">&#x27;call_type&#x27;</span> =&gt; <span class="string">&#x27;this&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;php_unit_test_class_requires_covers&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;phpdoc_add_missing_param_annotation&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;phpdoc_order&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;phpdoc_trim_consecutive_blank_line_separation&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;phpdoc_types_order&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;return_assignment&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;semicolon_after_instruction&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;single_line_comment_style&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;strict_comparison&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;strict_param&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;string_line_ending&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;ternary_operator_spaces&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;trim_array_spaces&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;unary_operator_spaces&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;yoda_style&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;whitespace_after_comma_in_array&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">    ])</span><br><span class="line">    -&gt;<span class="title function_ invoke__">setFinder</span>(<span class="variable">$finder</span>)</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"><span class="comment">// special handling of fabbot.io service if it&#x27;s using too old PHP CS Fixer version</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">false</span> !== <span class="title function_ invoke__">getenv</span>(<span class="string">&#x27;FABBOT_IO&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="title class_">PhpCsFixer\FixerFactory</span>::<span class="title function_ invoke__">create</span>()</span><br><span class="line">            -&gt;<span class="title function_ invoke__">registerBuiltInFixers</span>()</span><br><span class="line">            -&gt;<span class="title function_ invoke__">registerCustomFixers</span>(<span class="variable">$config</span>-&gt;<span class="title function_ invoke__">getCustomFixers</span>())</span><br><span class="line">            -&gt;<span class="title function_ invoke__">useRuleSet</span>(<span class="keyword">new</span> <span class="title class_">PhpCsFixer\RuleSet</span>(<span class="variable">$config</span>-&gt;<span class="title function_ invoke__">getRules</span>()));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (PhpCsFixer\ConfigurationException\InvalidConfigurationException <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="variable">$config</span>-&gt;<span class="title function_ invoke__">setRules</span>([]);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="built_in">UnexpectedValueException</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="variable">$config</span>-&gt;<span class="title function_ invoke__">setRules</span>([]);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="built_in">InvalidArgumentException</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="variable">$config</span>-&gt;<span class="title function_ invoke__">setRules</span>([]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$config</span>;</span><br></pre></td></tr></table></figure><p> 說明：</p><ul><li>加入 <code>&#39;@PSR1&#39; =&gt; true,</code> 及 <code>&#39;@Symfony&#39; =&gt; true,</code></li></ul></li><li><p>重新啟動 vs code（建議使用 <code>cmd + Q</code>，再重新啟動）</p></li><li><p>編輯檔案後存檔，即自動執行 php-cs-fixer 進行 coding style 修正</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 vs code 中，使用 PSR1、PSR2 及 Symfony 的 Coding Style 進行格式修正。&lt;/p&gt;
&lt;h2 id=&quot;安裝&quot;&gt;&lt;a href=&quot;#安裝&quot; class=&quot;headerlink&quot; title=&quot;安裝&quot;&gt;&lt;/a&gt;安裝&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在 command line 使用 homebrew 安裝 php cs fixer&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ brew install php-cs-fixer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="editor" scheme="http://codefun.tw/categories/editor/"/>
    
    
    <category term="vscode" scheme="http://codefun.tw/tags/vscode/"/>
    
    <category term="coding style" scheme="http://codefun.tw/tags/coding-style/"/>
    
    <category term="extensions" scheme="http://codefun.tw/tags/extensions/"/>
    
    <category term="php cs fixer" scheme="http://codefun.tw/tags/php-cs-fixer/"/>
    
  </entry>
  
  <entry>
    <title>管理或分享 vs code 的 workspace extensions</title>
    <link href="http://codefun.tw/2017/2017102301-vscode-workspace-recommended-extensions.html"/>
    <id>http://codefun.tw/2017/2017102301-vscode-workspace-recommended-extensions.html</id>
    <published>2017-10-23T10:24:24.000Z</published>
    <updated>2020-06-24T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>多人開發使用 vs code 當成預設的 editor 時，透過分享 <code>Workspace Recommended Extensions</code> 的方式讓大家都使用同樣的 extension 達成開發或檢查的一致性。</p> <span id="more"></span><h2 id="列出已經安裝的-extensions"><a href="#列出已經安裝的-extensions" class="headerlink" title="列出已經安裝的 extensions"></a>列出已經安裝的 extensions</h2><p>Command line 執行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ code --list-extensions</span><br></pre></td></tr></table></figure><p>結果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">2gua.rainbow-brackets</span><br><span class="line">alefragnani.project-manager</span><br><span class="line">alexdima.copy-relative-path</span><br><span class="line">apility.beautify-blade</span><br><span class="line">batisteo.vscode-django</span><br><span class="line">bmewburn.vscode-intelephense-client</span><br><span class="line">christian-kohler.npm-intellisense</span><br><span class="line">christian-kohler.path-intellisense</span><br><span class="line">cmstead.jsrefactor</span><br><span class="line">codezombiech.gitignore</span><br><span class="line">DavidAnson.vscode-markdownlint</span><br><span class="line">dbaeumer.vscode-eslint</span><br><span class="line">donjayamanne.githistory</span><br><span class="line">dracula-theme.theme-dracula</span><br><span class="line">eamodio.gitlens</span><br><span class="line">EditorConfig.EditorConfig</span><br><span class="line">eg2.vscode-npm-script</span><br><span class="line">felipecaputo.git-project-manager</span><br><span class="line">felixfbecker.php-debug</span><br><span class="line">formulahendry.auto-close-tag</span><br><span class="line">formulahendry.auto-rename-tag</span><br><span class="line">golang.Go</span><br><span class="line">henriiik.docker-linter</span><br><span class="line">HookyQR.beautify</span><br><span class="line">humao.rest-client</span><br><span class="line">janisdd.vscode-edit-csv</span><br><span class="line">JerryHong.autofilename</span><br><span class="line">joelday.docthis</span><br><span class="line">junstyle.php-cs-fixer</span><br><span class="line">magicstack.MagicPython</span><br><span class="line">marclipovsky.string-manipulation</span><br><span class="line">mikestead.dotenv</span><br><span class="line">ms-azuretools.vscode-docker</span><br><span class="line">ms-python.python</span><br><span class="line">neilbrayfield.php-docblocker</span><br><span class="line">nhoizey.gremlins</span><br><span class="line">octref.vetur</span><br><span class="line">oderwat.indent-rainbow</span><br><span class="line">odubuc.mysql-inline-decorator</span><br><span class="line">onecentlin.laravel-blade</span><br><span class="line">onecentlin.laravel5-snippets</span><br><span class="line">PKief.material-icon-theme</span><br><span class="line">quicktype.quicktype</span><br><span class="line">redhat.vscode-yaml</span><br><span class="line">richie5um2.vscode-sort-json</span><br><span class="line">robinbentley.sass-indented</span><br><span class="line">shardulm94.trailing-spaces</span><br><span class="line">shd101wyy.markdown-preview-enhanced</span><br><span class="line">SirTori.indenticator</span><br><span class="line">streetsidesoftware.code-spell-checker</span><br><span class="line">Tyriar.sort-lines</span><br><span class="line">VisualStudioExptTeam.vscodeintellicode</span><br><span class="line">vscode-icons-team.vscode-icons</span><br><span class="line">wholroyd.jinja</span><br><span class="line">wix.vscode-import-cost</span><br><span class="line">wmaurer.change-case</span><br><span class="line">wwm.better-align</span><br><span class="line">xabikos.JavaScriptSnippets</span><br><span class="line">yomed.theme-dracula-soft</span><br><span class="line">yzhang.markdown-all-in-one</span><br></pre></td></tr></table></figure><p>將列出的 extensions 全部複製起來，後續會用到。</p><h2 id="在-workspace-匯入及安裝-extensions"><a href="#在-workspace-匯入及安裝-extensions" class="headerlink" title="在 workspace 匯入及安裝 extensions"></a>在 workspace 匯入及安裝 extensions</h2><ol><li>打開 vs code 按下快速鍵 <code>command + shift + p</code></li><li>在跳出的對話框命令列後輸入或找到 <code>&gt;Extensions: Configure Recommended Extensions (Workspace Folder)</code></li><li>接著修改開啟的 <code>.vscode/extensions.json</code> 檔案，以 JOSN 格式編輯貼上剛才複製的 extensions<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  // See http://go.microsoft.com/fwlink/?LinkId=827846 to learn about workspace recommendations.</span><br><span class="line">  // Extension identifier format: $&#123;publisher&#125;.$&#123;name&#125;. Example: vscode.csharp</span><br><span class="line">  // List of extensions which should be recommended for users of this workspace.</span><br><span class="line">  &quot;recommendations&quot;: [</span><br><span class="line">    &quot;2gua.rainbow-brackets&quot;,</span><br><span class="line">    &quot;alefragnani.project-manager&quot;,</span><br><span class="line">    &quot;alexdima.copy-relative-path&quot;,</span><br><span class="line">    &quot;apility.beautify-blade&quot;,</span><br><span class="line">    &quot;batisteo.vscode-django&quot;,</span><br><span class="line">    &quot;bmewburn.vscode-intelephense-client&quot;,</span><br><span class="line">    &quot;christian-kohler.npm-intellisense&quot;,</span><br><span class="line">    &quot;christian-kohler.path-intellisense&quot;,</span><br><span class="line">    &quot;cmstead.jsrefactor&quot;,</span><br><span class="line">    &quot;codezombiech.gitignore&quot;,</span><br><span class="line">    &quot;DavidAnson.vscode-markdownlint&quot;,</span><br><span class="line">    &quot;dbaeumer.vscode-eslint&quot;,</span><br><span class="line">    &quot;donjayamanne.githistory&quot;,</span><br><span class="line">    &quot;dracula-theme.theme-dracula&quot;,</span><br><span class="line">    &quot;eamodio.gitlens&quot;,</span><br><span class="line">    &quot;EditorConfig.EditorConfig&quot;,</span><br><span class="line">    &quot;eg2.vscode-npm-script&quot;,</span><br><span class="line">    &quot;felipecaputo.git-project-manager&quot;,</span><br><span class="line">    &quot;felixfbecker.php-debug&quot;,</span><br><span class="line">    &quot;formulahendry.auto-close-tag&quot;,</span><br><span class="line">    &quot;formulahendry.auto-rename-tag&quot;,</span><br><span class="line">    &quot;golang.Go&quot;,</span><br><span class="line">    &quot;henriiik.docker-linter&quot;,</span><br><span class="line">    &quot;HookyQR.beautify&quot;,</span><br><span class="line">    &quot;humao.rest-client&quot;,</span><br><span class="line">    &quot;janisdd.vscode-edit-csv&quot;,</span><br><span class="line">    &quot;JerryHong.autofilename&quot;,</span><br><span class="line">    &quot;joelday.docthis&quot;,</span><br><span class="line">    &quot;junstyle.php-cs-fixer&quot;,</span><br><span class="line">    &quot;magicstack.MagicPython&quot;,</span><br><span class="line">    &quot;marclipovsky.string-manipulation&quot;,</span><br><span class="line">    &quot;mikestead.dotenv&quot;,</span><br><span class="line">    &quot;ms-azuretools.vscode-docker&quot;,</span><br><span class="line">    &quot;ms-python.python&quot;,</span><br><span class="line">    &quot;neilbrayfield.php-docblocker&quot;,</span><br><span class="line">    &quot;nhoizey.gremlins&quot;,</span><br><span class="line">    &quot;octref.vetur&quot;,</span><br><span class="line">    &quot;oderwat.indent-rainbow&quot;,</span><br><span class="line">    &quot;odubuc.mysql-inline-decorator&quot;,</span><br><span class="line">    &quot;onecentlin.laravel-blade&quot;,</span><br><span class="line">    &quot;onecentlin.laravel5-snippets&quot;,</span><br><span class="line">    &quot;PKief.material-icon-theme&quot;,</span><br><span class="line">    &quot;quicktype.quicktype&quot;,</span><br><span class="line">    &quot;redhat.vscode-yaml&quot;,</span><br><span class="line">    &quot;richie5um2.vscode-sort-json&quot;,</span><br><span class="line">    &quot;robinbentley.sass-indented&quot;,</span><br><span class="line">    &quot;shardulm94.trailing-spaces&quot;,</span><br><span class="line">    &quot;shd101wyy.markdown-preview-enhanced&quot;,</span><br><span class="line">    &quot;SirTori.indenticator&quot;,</span><br><span class="line">    &quot;streetsidesoftware.code-spell-checker&quot;,</span><br><span class="line">    &quot;Tyriar.sort-lines&quot;,</span><br><span class="line">    &quot;VisualStudioExptTeam.vscodeintellicode&quot;,</span><br><span class="line">    &quot;vscode-icons-team.vscode-icons&quot;,</span><br><span class="line">    &quot;wholroyd.jinja&quot;,</span><br><span class="line">    &quot;wix.vscode-import-cost&quot;,</span><br><span class="line">    &quot;wmaurer.change-case&quot;,</span><br><span class="line">    &quot;wwm.better-align&quot;,</span><br><span class="line">    &quot;xabikos.JavaScriptSnippets&quot;,</span><br><span class="line">    &quot;yomed.theme-dracula-soft&quot;,</span><br><span class="line">    &quot;yzhang.markdown-all-in-one&quot;</span><br><span class="line">  ],</span><br><span class="line">  // List of extensions recommended by VS Code that should not be recommended for users of this workspace.</span><br><span class="line">  &quot;unwantedRecommendations&quot;: [</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="安裝-Recommended-Extensions"><a href="#安裝-Recommended-Extensions" class="headerlink" title="安裝 Recommended Extensions"></a>安裝 Recommended Extensions</h3><p>點擊左側 <code>EXPLOER</code> 選單 ICON 的 <code>Extensions</code>（或快速鍵 <code>shift + command + x</code>），在展開的清單視窗右上角點擊 <code>...</code> 圖示，選取 <code>Show Recommended Extensions</code>，然後挑選想要的 extension 進行安裝。也可以全部安裝後，再把不想使用的 extension disable :)</p><h3 id="設定-Workspace-Settings"><a href="#設定-Workspace-Settings" class="headerlink" title="設定 Workspace Settings"></a>設定 Workspace Settings</h3><ol><li>打開 vs code 按下快速鍵 <code>command + shift + p</code></li><li>在跳出的對話框命令列後輸入或找到 <code>&gt;Preferences: Open User Settings</code></li><li>點擊搜尋列下方的 <code>...</code> 圖示，並選取 「Open settings.json」，即可進行編輯</li></ol><h3 id="Extensions-的安裝路徑"><a href="#Extensions-的安裝路徑" class="headerlink" title="Extensions 的安裝路徑"></a>Extensions 的安裝路徑</h3><ul><li><strong>Windows</strong> <code>%USERPROFILE%\.vscode\extensions</code></li><li><strong>Mac</strong> <code>~/.vscode/extensions</code></li><li><strong>Linux</strong> <code>~/.vscode/extensions</code></li></ul><h2 id="設定-User-Settings"><a href="#設定-User-Settings" class="headerlink" title="設定 User Settings"></a>設定 User Settings</h2><ol><li>打開 vs code 按下快速鍵 <code>command + shift + p</code></li><li>在跳出的對話框命令列後輸入或找到 <code>&gt;Preferences: Open User Settings</code></li><li>點擊搜尋列下方的 <code>...</code> 圖示，並選取 「Open settings.json」，貼上下列內容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;auto-rename-tag.activationOnLanguage&quot;: [</span><br><span class="line">        &quot;html&quot;,</span><br><span class="line">        &quot;xml&quot;,</span><br><span class="line">        &quot;php&quot;,</span><br><span class="line">        &quot;javascript&quot;,</span><br><span class="line">        &quot;vue&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;editor.formatOnSave&quot;: false,</span><br><span class="line">    &quot;editor.minimap.enabled&quot;: false,</span><br><span class="line">    &quot;editor.minimap.renderCharacters&quot;: false,</span><br><span class="line">    &quot;editor.rulers&quot;: [</span><br><span class="line">        80,</span><br><span class="line">        120</span><br><span class="line">    ],</span><br><span class="line">    &quot;gitlens.advanced.messages&quot;: &#123;</span><br><span class="line">        &quot;suppressShowKeyBindingsNotice&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;prettier.singleQuote&quot;: true,</span><br><span class="line">    &quot;todo-tree.customHighlight&quot;: &#123;</span><br><span class="line">        &quot;FIXME&quot;: &#123;&#125;,</span><br><span class="line">        &quot;TODO&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;todo-tree.defaultHighlight&quot;: &#123;</span><br><span class="line">        &quot;foreground&quot;: &quot;green&quot;,</span><br><span class="line">        &quot;type&quot;: &quot;none&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;todohighlight.include&quot;: [</span><br><span class="line">        &quot;**/*.js&quot;,</span><br><span class="line">        &quot;**/*.jsx&quot;,</span><br><span class="line">        &quot;**/*.ts&quot;,</span><br><span class="line">        &quot;**/*.tsx&quot;,</span><br><span class="line">        &quot;**/*.html&quot;,</span><br><span class="line">        &quot;**/*.php&quot;,</span><br><span class="line">        &quot;**/*.css&quot;,</span><br><span class="line">        &quot;**/*.scss&quot;,</span><br><span class="line">        &quot;**/*.cs&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;workbench.colorTheme&quot;: &quot;Dracula Soft&quot;,</span><br><span class="line">    &quot;workbench.iconTheme&quot;: &quot;vscode-icons&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="參考資料-References"><a href="#參考資料-References" class="headerlink" title="參考資料  References"></a>參考資料  References</h2><ul><li><a href="https://code.visualstudio.com/docs/editor/extension-gallery#_command-line-extension-management">Command line extension management</a></li><li><a href="https://code.visualstudio.com/docs/editor/extension-gallery#_workspace-recommended-extensions">Workspace Recommended Extensions</a></li><li><a href="http://www.css88.com/archives/9507">使用顶级 VSCode 扩展来加快开发 JavaScript</a></li><li><a href="https://gist.github.com/doggy8088/6539a140f28924d3a1f053a8d3a9f49e">Will 保哥的 VSCode 使用者設定檔</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;多人開發使用 vs code 當成預設的 editor 時，透過分享 &lt;code&gt;Workspace Recommended Extensions&lt;/code&gt; 的方式讓大家都使用同樣的 extension 達成開發或檢查的一致性。&lt;/p&gt;</summary>
    
    
    
    <category term="editor" scheme="http://codefun.tw/categories/editor/"/>
    
    
    <category term="vscode" scheme="http://codefun.tw/tags/vscode/"/>
    
    <category term="extensions" scheme="http://codefun.tw/tags/extensions/"/>
    
  </entry>
  
</feed>
