<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Codefun</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.codefun.tw/"/>
  <updated>2017-06-03T06:18:08.000Z</updated>
  <id>http://blog.codefun.tw/</id>
  
  <author>
    <name>Jerry Huang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在本地端使用 Nodejs &amp; Ngrok 進行 Line Bot 開發測試</title>
    <link href="http://blog.codefun.tw/2017/06/02/20170602-nodejs-line-bot-p1/"/>
    <id>http://blog.codefun.tw/2017/06/02/20170602-nodejs-line-bot-p1/</id>
    <published>2017-06-02T07:07:27.000Z</published>
    <updated>2017-06-03T06:18:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="開發環境"><a href="#開發環境" class="headerlink" title="# 開發環境"></a># 開發環境</h2><ul>
<li>macOS Sierra 10.12.5</li>
<li>Nodejs 7.10.0</li>
<li>Packages：<ul>
<li><a href="https://www.npmjs.com/package/express" target="_blank" rel="external">express</a></li>
<li><a href="https://www.npmjs.com/package/linebot" target="_blank" rel="external">linebot</a></li>
</ul>
</li>
</ul>
<h2 id="本次實作有以下階段："><a href="#本次實作有以下階段：" class="headerlink" title="# 本次實作有以下階段："></a># 本次實作有以下階段：</h2><ul>
<li><a href="#linebotaccount">申請 Line Bot 帳號</a></li>
<li><a href="#usingngrok">ngrok 讓 localhost 也可以使用 HTTPS</a></li>
<li><a href="#webhookservice">使用 Nodejs 在本地端部署 webhook service</a></li>
<li><a href="#sendlinebot">使用 Line App 傳訊息給 Line Bot</a></li>
</ul>
<h2 id="申請-Line-Bot-帳號"><a href="#申請-Line-Bot-帳號" class="headerlink" title="# 申請 Line Bot 帳號"></a><a id="linebotaccount"></a># 申請 Line Bot 帳號</h2><ol>
<li><p>到 <a href="https://business.line.me/zh-hant" target="_blank" rel="external">LINE Business Center</a> 申請商用帳號。點擊「帳號清單」，再點擊「建立商用帳號」<br><img src="https://lh3.googleusercontent.com/maPhifD7BVwbpWvElCZzWdhXqULQfbGYofmqazlAE8S0ArKXVb5kWk2r8JmAb-CBZvpH2WuQ_NubG63u-5rW0GYIpBE4-7ryoDbXmJn-YwnZWn9x2xaAuhm-0M0FsLEyBfoe=w715-h409-no" alt="申請商用帳戶"></p>
</li>
<li><p>找到 Messageing API，點擊「開始使用Developer Trial」<br><img src="https://lh3.googleusercontent.com/2s8QshZMPK-b4hRv3fkYZGzP0Pw_7iKf9vMnpOOyv6G6J0jtDrSrFm4NSdoGdxEC8khRDLpzsDsUKZDQ4UWQyx4JPvWYcPFh7-HRiy_g12Q5ON861Aj8oWStncau_0ZubOl5=w1022-h480-no" alt="開始使用Developer Trial"></p>
</li>
<li><p>輸入 Bot 的帳號名稱，更換圖片以及選擇業種，再按下確定就會建立機器人專用帳號<br><img src="https://lh3.googleusercontent.com/eKQOGxTfs3hb3rgwyQIQ9qnLWkI7pcWyHt9BOBmXEiDEOON6upYlcJMM50vahJvA03M5WKT_V5o_x-CZ68ttR8EMGh1RJSE-Hk6eMYFwpMQHlw6dCVXBBm4whOwCohEFXw4DyQ=w481-h639-no" alt="建立機器人專用帳號"></p>
</li>
<li><p>在申請完成的頁面下方點擊「前往LINE@MANAGER」<br><img src="https://lh3.googleusercontent.com/YH-sM08j0AJpFLwzbU00WMYXlnskuQBaiq7qhwXZ0LT5qFeBx6re1L8CXsMT1pLUj3K3dxb0SHEMJXbMe5h--YlYOBe0-P2G5oL94srLxVCl-KRz4GUnE5ls2hIW4F0AdHlHPw=w529-h639-no" alt=""></p>
</li>
<li><p>開始使用 API。進入 LINE@ MANAGER 後，在左邊選單 「Settings」-&gt; 點擊「Bot Settings」-&gt; 再按下「Enable API」<br><img src="https://lh3.googleusercontent.com/g0NzW_h7LR7bAlgPEwkdbxMolf5yW-MqNg2RahHGiFvuW__r2kbsh5mn7nayUb3gGC10BFX8uwBg2o4kAoIr8ukP1ksws83y6o5kfCy4MnD6Jn_y3qMOyFHbu13nJYyMTj5o4A=w957-h639-no" alt="Enable API"></p>
<p><img src="https://lh3.googleusercontent.com/QSvYxtP7f-wSNrPryDskR7VjB6OtpYDU8WCA-37YuC3j_QfdXH3wrraumzypogezaX7kd6-A83kh7Kpsc1xK3l1_Jg9v90X2kdaRy-1g2J15sJrEq1X3NAu4_-8ld7JbvViZRw=w611-h393-no" alt="Enabling Confirm"><br>註：LINE@ MANAGER 的網址會是 <code>https://admin-official.line.me/</code> 開頭</p>
</li>
<li><p>Bot Settings 的部份要留意 Usable APIs 是否有 <code>REPLY_MESSAGE</code> 及 <code>PUSH_MESSAGE</code>。如果沒有 <code>PUSH_MESSAGE</code> 是不能進行 Bot 主動發訊息給 Client App 的。<br><img src="https://lh3.googleusercontent.com/hZmeGk-OPkAUxrjMuIqYgYbfmWmv1jVEWxQA8KT-FpjncQ-KD34K3Ur-IqGZlYg1Gp1c_QPqmdvbhNC55nOmC-NG2Gzz1frSfUNWASVxHO-F4tcsS2clrtU0Hmm8lMYNfTIj6A=w871-h639-no" alt="Use webhooks"><br>Request Settings 裡的 Use webhooks 請勾選 「Allow」。<br>Details 的 Allow Bot to join group chats、Auto Reply Message 及 Greeting Message 都勾選 「Don’t Allow」。</p>
</li>
</ol>
<h2 id="ngrok-讓-localhost-也可以使用-HTTPS"><a href="#ngrok-讓-localhost-也可以使用-HTTPS" class="headerlink" title="# ngrok 讓 localhost 也可以使用 HTTPS"></a><a id="usingngrok"></a># ngrok 讓 localhost 也可以使用 HTTPS</h2><p>Line Bot 需要有 HTTPS 的 webhook service 才能接受及轉發訊息，這時候後端開發必備神器 - <a href="https://ngrok.com/" target="_blank" rel="external">ngrok</a>，可以讓 localhost 使用 HTTPS 的隨機網址，達成 webhook service 測試，省去了必須上傳到 Server 後才能得到測試結果的時間花費。</p>
<h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><p>Mac 的部份可以在 <a href="https://ngrok.com/" target="_blank" rel="external">ngrok</a> 官網下載程式，解壓縮後就可以使用了。或者是丟到 <code>/usr/local/bin</code>，方便之後使用。</p>
<p>Termial 指令</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> ngrok http 8080</div></pre></td></tr></table></figure>
<p>代表把外界的流量導到 localhost 的 8080 port。執行後會有以下畫面：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ngrok by @inconshreveable          (Ctrl+C to quit)</div><div class="line"></div><div class="line">Session Status                online</div><div class="line">Account                       YOUR_ACCOUNT (Plan: Free)</div><div class="line">Version                       2.2.4</div><div class="line">Region                        United States (us)</div><div class="line">Web Interface                 http://127.0.0.1:4040</div><div class="line">Forwarding                    http://85ceccf9.ngrok.io -&gt; localhost:8080</div><div class="line"></div><div class="line">Connections                   ttl     opn     rt1     rt5     p50     p90</div><div class="line">                              0       0       0.00    0.00    0.00    0.00</div></pre></td></tr></table></figure>
<p>按下 <code>Ctrl + C</code> 跳出並停止運作。</p>
<h3 id="申請-HTTPS-protocol"><a href="#申請-HTTPS-protocol" class="headerlink" title="申請 HTTPS protocol"></a>申請 HTTPS protocol</h3><p>到 <a href="https://ngrok.com/" target="_blank" rel="external">ngrok</a> 官網註冊，可以使用 Github 或 Google 登入。<br>登入的畫面如下：<br><img src="https://lh3.googleusercontent.com/ZRyTQA8tuz-QiC3bJh3MjzC6U2_AliofTUUfHdnieoQJ4vO3rYt80AqR7yNyXA2KBERCuS0KXIcaTbX0ay3G2-Msz9oEj6TylLSQOqY-uYOOMKm-1M1IC4as3lP6kMkRuGdWhQ=w742-h639-no" alt="ngrok Dashborad"></p>
<p>在 Terminal 下執行指令，這樣就可以使用 https 的網址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ ngrok authtoken &#123;token&#125;</div><div class="line">$ ngrok http 8080</div><div class="line"></div><div class="line">ngrok by @inconshreveable           (Ctrl+C to quit)</div><div class="line"></div><div class="line">Session Status                online</div><div class="line">Account                       YOUR_ACCOUNT (Plan: Free)</div><div class="line">Version                       2.2.4</div><div class="line">Region                        United States (us)</div><div class="line">Web Interface                 http://127.0.0.1:4040</div><div class="line">Forwarding                    http://ec041dbf.ngrok.io -&gt; localhost:8080</div><div class="line">Forwarding                    https://ec041dbf.ngrok.io -&gt; localhost:8080</div><div class="line"></div><div class="line">Connections                   ttl     opn     rt1     rt5     p50     p90</div><div class="line">                              0       0       0.00    0.00    0.00    0.00</div></pre></td></tr></table></figure>
<p>其他指令參考</p>
<ul>
<li>HTTP Auth</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> ngrok http -auth "user:passwd" 80</div></pre></td></tr></table></figure>
<ul>
<li>轉址到 local domain（修改 /etc/hosts）</li>
</ul>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> ngrok http -host-header=myweb.dev myweb.dev:80</div></pre></td></tr></table></figure>
<p>以上 ngrok 的基本使用是參考 <a href="https://coder.tw/?p=7211" target="_blank" rel="external">Ngrok – 讓本機也可以開發 webhook 免部署環境的神器</a></p>
<h2 id="使用-Nodejs-在本地端部署-webhook-service"><a href="#使用-Nodejs-在本地端部署-webhook-service" class="headerlink" title="# 使用 Nodejs 在本地端部署 webhook service"></a><a id="webhookservice"></a># 使用 Nodejs 在本地端部署 webhook service</h2><h3 id="開始建立-Nodejs-專案"><a href="#開始建立-Nodejs-專案" class="headerlink" title="開始建立 Nodejs 專案"></a>開始建立 Nodejs 專案</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> mkdir node-line-bot</div><div class="line"><span class="meta">$</span> cd node-line-bot</div></pre></td></tr></table></figure>
<p>建立 <code>package.json</code> 檔案，並修改 “scripts”，增加 <code>&quot;start&quot;: &quot;node .&quot;</code></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> npm init</div><div class="line"></div><div class="line">&#123;</div><div class="line">  "name": "node-line-bot",</div><div class="line">  "version": "1.0.0",</div><div class="line">  "description": "",</div><div class="line">  "main": "index.js",</div><div class="line">  "scripts": &#123;</div><div class="line">    "start": "node ."</div><div class="line">  &#125;,</div><div class="line">  "author": "Jerry Huang",</div><div class="line">  "license": "MIT"</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>安裝模組 <code>linebot</code> 及 <code>express</code></p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> npm install linebot express --save</div><div class="line"></div><div class="line">node-line-bot@1.0.0 /Users/jerryhuang/workspace/practice/nodejs/node-line-bot</div><div class="line">├─┬ express@4.15.3</div><div class="line">│ ├─┬ accepts@1.3.3</div><div class="line">│ │ ├─┬ mime-types@2.1.15</div><div class="line">│ │ │ └── mime-db@1.27.0</div><div class="line">│ │ └── negotiator@0.6.1</div><div class="line">│ ├── array-flatten@1.1.1</div><div class="line">│ ├── content-disposition@0.5.2</div><div class="line">│ ├── content-type@1.0.2</div><div class="line">│ ├── cookie@0.3.1</div><div class="line">│ ├── cookie-signature@1.0.6</div><div class="line">│ ├─┬ debug@2.6.7</div><div class="line">│ │ └── ms@2.0.0</div><div class="line">│ ├── depd@1.1.0</div><div class="line">│ ├── encodeurl@1.0.1</div><div class="line">│ ├── escape-html@1.0.3</div><div class="line">│ ├── etag@1.8.0</div><div class="line">│ ├─┬ finalhandler@1.0.3</div><div class="line">│ │ └── unpipe@1.0.0</div><div class="line">│ ├── fresh@0.5.0</div><div class="line">│ ├── merge-descriptors@1.0.1</div><div class="line">│ ├── methods@1.1.2</div><div class="line">│ ├─┬ on-finished@2.3.0</div><div class="line">│ │ └── ee-first@1.1.1</div><div class="line">│ ├── parseurl@1.3.1</div><div class="line">│ ├── path-to-regexp@0.1.7</div><div class="line">│ ├─┬ proxy-addr@1.1.4</div><div class="line">│ │ ├── forwarded@0.1.0</div><div class="line">│ │ └── ipaddr.js@1.3.0</div><div class="line">│ ├── qs@6.4.0</div><div class="line">│ ├── range-parser@1.2.0</div><div class="line">│ ├─┬ send@0.15.3</div><div class="line">│ │ ├── destroy@1.0.4</div><div class="line">│ │ ├─┬ http-errors@1.6.1</div><div class="line">│ │ │ └── inherits@2.0.3</div><div class="line">│ │ └── mime@1.3.4</div><div class="line">│ ├── serve-static@1.12.3</div><div class="line">│ ├── setprototypeof@1.0.3</div><div class="line">│ ├── statuses@1.3.1</div><div class="line">│ ├─┬ type-is@1.6.15</div><div class="line">│ │ └── media-typer@0.3.0</div><div class="line">│ ├── utils-merge@1.0.0</div><div class="line">│ └── vary@1.1.1</div><div class="line">└─┬ linebot@1.3.0</div><div class="line">  ├─┬ body-parser@1.17.2</div><div class="line">  │ ├── bytes@2.4.0</div><div class="line">  │ ├── iconv-lite@0.4.15</div><div class="line">  │ └── raw-body@2.2.0</div><div class="line">  └─┬ node-fetch@1.7.0</div><div class="line">    ├── encoding@0.1.12</div><div class="line">    └── is-stream@1.1.0</div><div class="line"></div><div class="line">npm WARN node-line-bot@1.0.0 No description</div><div class="line">npm WARN node-line-bot@1.0.0 No repository field.</div></pre></td></tr></table></figure>
<p>建立 <code>index.js</code> 檔案的內容如下</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">let</span> linebot = <span class="built_in">require</span>(<span class="string">'linebot'</span>),</div><div class="line">    express = <span class="built_in">require</span>(<span class="string">'express'</span>);</div><div class="line"></div><div class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">'./config.json'</span>),</div><div class="line">    util = <span class="built_in">require</span>(<span class="string">'util'</span>);</div><div class="line"></div><div class="line"><span class="keyword">let</span> bot = linebot(&#123;</div><div class="line">    <span class="attr">channelId</span>: <span class="string">'Line Bot Channel ID'</span>,</div><div class="line">    <span class="attr">channelSecret</span>: <span class="string">'Line Bot Channel Secret'</span>,</div><div class="line">    <span class="attr">channelAccessToken</span>: <span class="string">'Line Bot Access Token'</span></div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="keyword">const</span> linebotParser = bot.parser(),</div><div class="line">    app = express();</div><div class="line"></div><div class="line">bot.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">    <span class="comment">// 把收到訊息的 event 印出來</span></div><div class="line">    <span class="built_in">console</span>.log(event);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">app.post(<span class="string">'/webhook'</span>, linebotParser);</div><div class="line"></div><div class="line"><span class="comment">// 在 localhost 走 8080 port</span></div><div class="line"><span class="keyword">let</span> server = app.listen(process.env.PORT || <span class="number">8080</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">let</span> port = server.address().port;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"My Line bot App running on port"</span>, port);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="如何取得-Line-Bot-的-Channel-ID-及設定-Webhook"><a href="#如何取得-Line-Bot-的-Channel-ID-及設定-Webhook" class="headerlink" title="如何取得 Line Bot 的 Channel ID 及設定 Webhook"></a>如何取得 Line Bot 的 Channel ID 及設定 Webhook</h3><p>Channel ID、Channel Secret 及 Channel Access Token 可以從 LINE Business Center 進入後取得</p>
<h4 id="取得-Channel-ID、Channel-Secret-及-Channel-Access-Token"><a href="#取得-Channel-ID、Channel-Secret-及-Channel-Access-Token" class="headerlink" title="取得 Channel ID、Channel Secret 及 Channel Access Token"></a>取得 Channel ID、Channel Secret 及 Channel Access Token</h4><p>回到 LINE Business Center 按下 Messaging API 右邊的「LINE Developers」<br> <img src="https://lh3.googleusercontent.com/i2ZbXKUPnLO3EB-GpOH7CwbwLHB5xVFTI8J5ZSHm2GyGNmfIFmkpyjWLBoGA0Lo7J-xAS0OwC4C4jiqOG1SAKCksmeNr_LRmVB5pn0E5EZBg9C9Xx_rq0EyywNEWJZpkqDHriw=w738-h583-no" alt="前往 LINE Developers"></p>
<p>在 LINE develioers 下的 “Basic information”，將 “Channel ID”、”Channel Secret”（點選 SHOW 會出現）、 “Channel Access Token” 複製貼到 index.js 裡對應的程式中<br> <img src="https://lh3.googleusercontent.com/nhK_bbRrgxY-cCb0D_79yUV-e_ARnRydKBXgj9QpUaoQh0-Lv5AdU7MsNgbK1LmB8VUuFUbOkRRfbLbX1kj8ZNNfIMJq7yo2oz8eSPlvmZOB5_Ce7LW45X8e9fuNujyJHEdaJQ=w654-h639-no" alt="取得 Channel ID"></p>
<p>點選 ISSUE 會產生 “Channel Access Token”<br> <img src="https://lh3.googleusercontent.com/HXbB5WOezmhLSsokuOp4TZEFOn1xC10jdNXsZj76RH3fI5-OvJYd4TGYR6VN6AYLGgFIeLJCfXPznvnaZadwbFI6nVnx9cVW1ybWFcu5lFDkt0dgkUA5vHGHaqlpe9j2_OK9Kw=w633-h639-no" alt="取得 Channel Access Token"></p>
<h4 id="設定-Webhook-URL"><a href="#設定-Webhook-URL" class="headerlink" title="設定 Webhook URL"></a>設定 Webhook URL</h4><p>同樣在 “Basic information” 下，按下右下角的 “EDIT”，然後將 ngrok 產生的網址以及 index.js 內監聽 post mehtod 的路徑組合 <code>https://ec041dbf.ngrok.io/webhook</code> 貼到 “Webhook URL” 中<br> <img src="https://lh3.googleusercontent.com/ptb0MmQ-AwOc4Ze5EywsFwy94QzjbOlWkXLmQtisBig5qHSCxpgVhIpNbOC2iJHk9PrwJHcBfHO9aKvB5biE95TkuQ-pqIgX4yi0b8BNrJO3qeI9OcnBCYPP2qpvw71IaiPWCg=w600-h639-no" alt="設定 Webhook URL"></p>
<p>回到 Terminal 畫面，啟動 webhook service</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span> node index.js</div></pre></td></tr></table></figure>
<p>再回 LINE develioers 的 “Basic information”，按下 Webhoo URL 右方的 “VERIFY” 以驗證是否正確。</p>
<p>Terminal 畫面會有以下資訊</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&#123; replyToken: '00000000000000000000000000000000',</div><div class="line">  type: 'message',</div><div class="line">  timestamp: 1451617200000,</div><div class="line">  source:</div><div class="line">   &#123; type: 'user',</div><div class="line">     userId: 'UdeadbeefdeadbeefdeLINEBOTUSERID',</div><div class="line">     profile: [Function] &#125;,</div><div class="line">  message:</div><div class="line">   &#123; id: '100001',</div><div class="line">     type: 'text',</div><div class="line">     text: 'Hello,world',</div><div class="line">     content: [Function] &#125;,</div><div class="line">  reply: [Function] &#125;</div><div class="line">&#123; replyToken: 'ffffffffffffffffffffffffffffffff',</div><div class="line">  type: 'message',</div><div class="line">  timestamp: 1451617210000,</div><div class="line">  source:</div><div class="line">   &#123; type: 'user',</div><div class="line">     userId: 'UdeadbeefdeadbeefdeLINEBOTUSERID',</div><div class="line">     profile: [Function] &#125;,</div><div class="line">  message:</div><div class="line">   &#123; id: '100002',</div><div class="line">     type: 'sticker',</div><div class="line">     packageId: '1',</div><div class="line">     stickerId: '1',</div><div class="line">     content: [Function] &#125;,</div><div class="line">  reply: [Function] &#125;</div></pre></td></tr></table></figure>
<h2 id="使用-Line-App-傳訊息給-Line-Bot"><a href="#使用-Line-App-傳訊息給-Line-Bot" class="headerlink" title="# 使用 Line App 傳訊息給 Line Bot"></a><a id="sendlinebot"></a># 使用 Line App 傳訊息給 Line Bot</h2><p>手機 Line App 掃描  LINE develioers 的 “Basic information” 畫面中的 QR Code 將 Line Bot 加入，然後輸入文字，測試 Line Bot 是否有正確接收到。<br> <img src="https://lh3.googleusercontent.com/M6x09wRnbeDagDnrCe0m7rQAPocOIOnhooSD6mOnLbBG-ygU2M-VRi7UWcYVQ6jHkkQyy9htxI54rehBjWBQFwzpw_EI5QQSTzIct5UtFO3aB0sgykQllqpd3ehUjeq4gNF7wA=w317-h181-no" alt=""></p>
<p>如果有正確收到訊息，則 Terminal 畫面會顯示以下資訊</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123; type: 'message',</div><div class="line">  replyToken: '98eb2ca92bdb468c9REPLYTOKEN',</div><div class="line">  source:</div><div class="line">   &#123; userId: 'U08cee31d0f3a94CLIENTAPPUSERID',</div><div class="line">     type: 'user',</div><div class="line">     profile: [Function] &#125;,</div><div class="line">  timestamp: 1496462418683,</div><div class="line">  message:</div><div class="line">   &#123; type: 'text',</div><div class="line">     id: '618217MSGID',</div><div class="line">     text: '開發測試Q Q',</div><div class="line">     content: [Function] &#125;,</div><div class="line">  reply: [Function] &#125;</div></pre></td></tr></table></figure>
<h3 id="將收到的訊息，回覆給-Client-App"><a href="#將收到的訊息，回覆給-Client-App" class="headerlink" title="將收到的訊息，回覆給 Client App"></a>將收到的訊息，回覆給 Client App</h3><p>修改一下 on ‘message’ 的內容</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">bot.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">    <span class="comment">// 把收到訊息的 event 印出來</span></div><div class="line">    <span class="comment">//console.log(event);</span></div><div class="line"></div><div class="line">    <span class="comment">// 重複 client 輸入的內容</span></div><div class="line">    <span class="keyword">if</span> (event.message.type = <span class="string">'text'</span>) &#123;</div><div class="line">        <span class="keyword">var</span> msg = event.message.text;</div><div class="line">        event.reply(msg).then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">            <span class="comment">// success</span></div><div class="line">            <span class="built_in">console</span>.log(msg);</div><div class="line">        &#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</div><div class="line">            <span class="comment">// error</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'error'</span>);</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>記得要重啟 nodejs server 喔 :)</p>
<p> <img src="https://lh3.googleusercontent.com/hx85cXamDUf7tD3pktZZtgP1w46UyMydyGa1PcO3bdVvSBJhCJbZuDBDeQCC4VFaEpV9fhGyJVB1sdnFEMjiMqo6zCaVSmI7wQHpSXX4Fb3xx2--T-x_wnNRh_i7z-5p2X3mvw=w319-h282-no" alt="重複 client 輸入的內容"></p>
<h3 id="主動發送訊息"><a href="#主動發送訊息" class="headerlink" title="主動發送訊息"></a>主動發送訊息</h3><p>讓 server 啟動後 3 秒，發送訊息給 Client App，請在 index.js 加入以下程式，。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 主動發送訊息給 Client App</span></div><div class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> userId = <span class="string">'Client App User ID'</span>;</div><div class="line">    <span class="keyword">var</span> sendMsg = <span class="string">"push msg to one user"</span>;</div><div class="line">    bot.push(userId, [sendMsg]);</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'userId: '</span> + userId);</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'send: '</span> + sendMsg);</div><div class="line">&#125;, <span class="number">3000</span>);</div></pre></td></tr></table></figure>
<p> <img src="https://lh3.googleusercontent.com/bq-9Ck0gZ8aS5gcP6TKdcSjUAsdSVBpF-EcJqSSmEWTyHxfLKDEBgxfBKCMG0P1267Apl_tcaxr24omYJiGqruOYbdpr4BxiUWQh_dOmIytlfAw3kfHdQppgwF8gd0y9JnWaZw=w320-h335-no" alt="主動發送訊息"></p>
<h2 id="參考資料："><a href="#參考資料：" class="headerlink" title="# 參考資料："></a># 參考資料：</h2><ul>
<li><a href="http://www.oxxostudio.tw/articles/201701/line-bot.html" target="_blank" rel="external">LINE BOT 實戰 ( 原理篇 )</a></li>
<li><a href="http://www.oxxostudio.tw/articles/201701/line-bot-2.html" target="_blank" rel="external">LINE BOT 實戰 ( 聊天篇 )</a></li>
<li><a href="https://goo.gl/ePtTRw" target="_blank" rel="external">不必真的架站也能 5 分鐘實機體驗 LINE bot – 教學 ( by node.js &amp; ngrok )</a></li>
<li><a href="https://coder.tw/?p=7211" target="_blank" rel="external">Ngrok – 讓本機也可以開發 webhook 免部署環境的神器</a></li>
<li><a href="https://ngrok.com/" target="_blank" rel="external">ngrok.com</a></li>
</ul>
<h3 id="Line-Bot-的圖片來源"><a href="#Line-Bot-的圖片來源" class="headerlink" title="Line Bot 的圖片來源"></a>Line Bot 的圖片來源</h3><ul>
<li><a href="https://tgram.ru/bots/topics_bot" target="_blank" rel="external">tgram.ru</a></li>
<li><a href="https://tgram.ru/wiki/bots/image/topics_bot.jpg" target="_blank" rel="external">https://tgram.ru/wiki/bots/image/topics_bot.jpg</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;開發環境&quot;&gt;&lt;a href=&quot;#開發環境&quot; class=&quot;headerlink&quot; title=&quot;# 開發環境&quot;&gt;&lt;/a&gt;# 開發環境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;macOS Sierra 10.12.5&lt;/li&gt;
&lt;li&gt;Nodejs 7.10.0&lt;/li&gt;
&lt;li
    
    </summary>
    
      <category term="nodejs" scheme="http://blog.codefun.tw/categories/nodejs/"/>
    
    
      <category term="nodejs" scheme="http://blog.codefun.tw/tags/nodejs/"/>
    
      <category term="line bot" scheme="http://blog.codefun.tw/tags/line-bot/"/>
    
      <category term="ngrok" scheme="http://blog.codefun.tw/tags/ngrok/"/>
    
  </entry>
  
  <entry>
    <title>OSX 執行 gvm pkgset use 發生錯誤</title>
    <link href="http://blog.codefun.tw/2017/04/26/20170426-osx-gvm-pkgset-use-error/"/>
    <id>http://blog.codefun.tw/2017/04/26/20170426-osx-gvm-pkgset-use-error/</id>
    <published>2017-04-26T01:58:10.000Z</published>
    <updated>2017-05-20T10:13:56.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一次安裝-gvm-就踩到奇怪的雷"><a href="#第一次安裝-gvm-就踩到奇怪的雷" class="headerlink" title="第一次安裝 gvm 就踩到奇怪的雷"></a>第一次安裝 gvm 就踩到奇怪的雷</h2><p><a href="https://github.com/moovweb/gvm" target="_blank" rel="external">gvm</a> 是 <a href="https://golang.org/" target="_blank" rel="external">golang</a> 的版本管理工具（跟 nvm 很像），但是竟然在 OSX 下踩到奇怪的雷，<br>在 <code>~/.bash_profile</code> 內的 <code>export GREP_OPTIONS=&#39;--color=always&#39;</code> 會造成 <code>gvm use</code> 或 <code>gvm pkgset use</code> 無法正常運作。</p>
<h2 id="解決方式："><a href="#解決方式：" class="headerlink" title="解決方式："></a>解決方式：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ vim $HOME/.gvm/scripts/env/pkgset-use</div><div class="line">$ vim $HOME/.gvm/scripts/env/use</div></pre></td></tr></table></figure>
<p>在 <code>$GREP_PATH</code> 後面加上 <code>--color=never</code>，也就是修改成 <code>$GREP_PATH --color=never</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一次安裝-gvm-就踩到奇怪的雷&quot;&gt;&lt;a href=&quot;#第一次安裝-gvm-就踩到奇怪的雷&quot; class=&quot;headerlink&quot; title=&quot;第一次安裝 gvm 就踩到奇怪的雷&quot;&gt;&lt;/a&gt;第一次安裝 gvm 就踩到奇怪的雷&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;h
    
    </summary>
    
      <category term="golang" scheme="http://blog.codefun.tw/categories/golang/"/>
    
    
      <category term="golang" scheme="http://blog.codefun.tw/tags/golang/"/>
    
      <category term="gvm" scheme="http://blog.codefun.tw/tags/gvm/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.codefun.tw/2016/10/08/hello-world/"/>
    <id>http://blog.codefun.tw/2016/10/08/hello-world/</id>
    <published>2016-10-08T08:53:11.000Z</published>
    <updated>2016-10-08T08:53:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
